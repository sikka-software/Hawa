"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mdast-util-toc@6.1.1";
exports.ids = ["vendor-chunks/mdast-util-toc@6.1.1"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/contents.js":
/*!*************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/contents.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contents: () => (/* binding */ contents)\n/* harmony export */ });\n/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! extend */ \"(rsc)/../../node_modules/.pnpm/extend@3.0.2/node_modules/extend/index.js\");\n/* harmony import */ var extend__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(extend__WEBPACK_IMPORTED_MODULE_0__);\n/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('./search.js').SearchEntry} SearchEntry\n */ /**\n * @typedef ContentsOptions\n *   Build configuration.\n * @property {boolean | null | undefined} [tight=false]\n *   Whether to compile list items tightly.\n * @property {boolean | null | undefined} [ordered=false]\n *   Whether to compile list items as an ordered list, otherwise they are\n *   unordered.\n * @property {string | null | undefined} [prefix=undefined]\n *   Add a prefix to links to headings in the table of contents.\n *\n *   Useful for example when later going from mdast to hast and sanitizing with\n *   `hast-util-sanitize`.\n */ \n/**\n * Transform a list of heading objects to a markdown list.\n *\n * @param {Array<SearchEntry>} map\n * @param {ContentsOptions} settings\n */ function contents(map, settings) {\n    const { ordered = false, tight = false, prefix = null } = settings;\n    /** @type {List} */ const table = {\n        type: \"list\",\n        ordered,\n        spread: false,\n        children: []\n    };\n    let minDepth = Number.POSITIVE_INFINITY;\n    let index = -1;\n    // Find minimum depth.\n    while(++index < map.length){\n        if (map[index].depth < minDepth) {\n            minDepth = map[index].depth;\n        }\n    }\n    // Normalize depth.\n    index = -1;\n    while(++index < map.length){\n        map[index].depth -= minDepth - 1;\n    }\n    // Add TOC to list.\n    index = -1;\n    while(++index < map.length){\n        insert(map[index], table, {\n            ordered,\n            tight,\n            prefix\n        });\n    }\n    return table;\n}\n/**\n * Insert an entry into `parent`.\n *\n * @param {SearchEntry} entry\n * @param {List | ListItem} parent\n * @param {ContentsOptions} settings\n */ function insert(entry, parent, settings) {\n    let index = -1;\n    const tail = parent.children[parent.children.length - 1];\n    if (parent.type === \"list\") {\n        if (entry.depth === 1) {\n            parent.children.push({\n                type: \"listItem\",\n                spread: false,\n                children: [\n                    {\n                        type: \"paragraph\",\n                        children: [\n                            {\n                                type: \"link\",\n                                title: null,\n                                url: \"#\" + (settings.prefix || \"\") + entry.id,\n                                children: all(entry.children)\n                            }\n                        ]\n                    }\n                ]\n            });\n        } else if (parent.children.length > 0) {\n            const tail = parent.children[parent.children.length - 1];\n            insert(entry, tail, settings);\n        } else {\n            /** @type {ListItem} */ const item = {\n                type: \"listItem\",\n                spread: false,\n                children: []\n            };\n            parent.children.push(item);\n            insert(entry, item, settings);\n        }\n    } else if (tail && tail.type === \"list\") {\n        entry.depth--;\n        insert(entry, tail, settings);\n    } else {\n        /** @type {List} */ const item = {\n            type: \"list\",\n            ordered: settings.ordered,\n            spread: false,\n            children: []\n        };\n        parent.children.push(item);\n        entry.depth--;\n        insert(entry, item, settings);\n    }\n    if (parent.type === \"list\" && !settings.tight) {\n        parent.spread = false;\n        while(++index < parent.children.length){\n            if (parent.children[index].children.length > 1) {\n                parent.spread = true;\n                break;\n            }\n        }\n    } else {\n        parent.spread = !settings.tight;\n    }\n}\n/**\n * @param {Array<PhrasingContent>} [nodes]\n * @returns {Array<StaticPhrasingContent>}\n */ function all(nodes) {\n    /** @type {Array<StaticPhrasingContent>} */ let result = [];\n    let index = -1;\n    if (nodes) {\n        while(++index < nodes.length){\n            result = result.concat(one(nodes[index]));\n        }\n    }\n    return result;\n}\n/**\n * @param {PhrasingContent} node\n * @returns {StaticPhrasingContent | Array<StaticPhrasingContent>}\n */ function one(node) {\n    if (node.type === \"footnoteReference\") {\n        return [];\n    }\n    if (node.type === \"link\" || node.type === \"linkReference\" || node.type === \"footnote\") {\n        return all(node.children);\n    }\n    if (\"children\" in node) {\n        const { children, position, ...copy } = node;\n        return Object.assign(extend__WEBPACK_IMPORTED_MODULE_0___default()(true, {}, copy), {\n            children: all(node.children)\n        });\n    }\n    const { position, ...copy } = node;\n    return extend__WEBPACK_IMPORTED_MODULE_0___default()(true, {}, copy);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/contents.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/index.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toc: () => (/* binding */ toc)\n/* harmony export */ });\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.js */ \"(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/search.js\");\n/* harmony import */ var _contents_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contents.js */ \"(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/contents.js\");\n/* harmony import */ var _to_expression_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./to-expression.js */ \"(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/to-expression.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').List} List\n * @typedef {import('./search.js').SearchOptions} SearchOptions\n * @typedef {import('./contents.js').ContentsOptions} ContentsOptions\n */ /**\n * @typedef {Root | Content} Node\n * @typedef {SearchOptions & ContentsOptions & ExtraOptions} Options\n *\n * @typedef ExtraOptions\n *   Extra configuration fields.\n * @property {string | null | undefined} [heading]\n *   Heading to look for, wrapped in `new RegExp('^(' + value + ')$', 'i')`.\n *\n * @typedef Result\n *   Results.\n * @property {number | null} index\n *   Index of the node right after the table of contents heading, `-1` if no\n *   heading was found, `null` if no `heading` was given.\n * @property {number | null} endIndex\n *   Index of the first node after `heading` that is not part of its section,\n *   `-1` if no heading was found, `null` if no `heading` was given, same as\n *   `index` if there are no nodes between `heading` and the first heading in\n *   the table of contents.\n * @property {List | null} map\n *   List representing the generated table of contents, `null` if no table of\n *   contents could be created, either because no heading was found or because\n *   no following headings were found.\n */ \n\n\n/**\n * Generate a table of contents from `tree`.\n *\n * Looks for the first heading matching `options.heading` (case insensitive) and\n * returns a table of contents (a list) for all following headings.\n * If no `heading` is specified, creates a table of contents for all headings in\n * `tree`.\n * `tree` is not changed.\n *\n * Links in the list to headings are based on GitHub’s style.\n * Only top-level headings (those not in blockquotes or lists), are used.\n * This default behavior can be changed by passing `options.parents`.\n *\n * @param {Node} tree\n *   Tree to search and generate from.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Result}\n *   Results.\n */ function toc(tree, options) {\n    const settings = options || {};\n    const heading = settings.heading ? (0,_to_expression_js__WEBPACK_IMPORTED_MODULE_0__.toExpression)(settings.heading) : undefined;\n    const result = (0,_search_js__WEBPACK_IMPORTED_MODULE_1__.search)(tree, heading, settings);\n    return {\n        index: heading ? result.index : null,\n        endIndex: heading ? result.endIndex : null,\n        map: result.map.length > 0 ? (0,_contents_js__WEBPACK_IMPORTED_MODULE_2__.contents)(result.map, settings) : null\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDYuMS4xL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Q0FNQyxHQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQXVCQyxHQUVpQztBQUNJO0FBQ1M7QUFFL0M7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FtQkMsR0FDTSxTQUFTRyxJQUFJQyxJQUFJLEVBQUVDLE9BQU87SUFDL0IsTUFBTUMsV0FBV0QsV0FBVyxDQUFDO0lBQzdCLE1BQU1FLFVBQVVELFNBQVNDLE9BQU8sR0FBR0wsK0RBQVlBLENBQUNJLFNBQVNDLE9BQU8sSUFBSUM7SUFDcEUsTUFBTUMsU0FBU1Qsa0RBQU1BLENBQUNJLE1BQU1HLFNBQVNEO0lBRXJDLE9BQU87UUFDTEksT0FBT0gsVUFBVUUsT0FBT0MsS0FBSyxHQUFHO1FBQ2hDQyxVQUFVSixVQUFVRSxPQUFPRSxRQUFRLEdBQUc7UUFDdENDLEtBQUtILE9BQU9HLEdBQUcsQ0FBQ0MsTUFBTSxHQUFHLElBQUlaLHNEQUFRQSxDQUFDUSxPQUFPRyxHQUFHLEVBQUVOLFlBQVk7SUFDaEU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2hhd2EtZG9jcy8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vbWRhc3QtdXRpbC10b2NANi4xLjEvbm9kZV9tb2R1bGVzL21kYXN0LXV0aWwtdG9jL2xpYi9pbmRleC5qcz85NTg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgnbWRhc3QnKS5Sb290fSBSb290XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCdtZGFzdCcpLkNvbnRlbnR9IENvbnRlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ21kYXN0JykuTGlzdH0gTGlzdFxuICogQHR5cGVkZWYge2ltcG9ydCgnLi9zZWFyY2guanMnKS5TZWFyY2hPcHRpb25zfSBTZWFyY2hPcHRpb25zXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCcuL2NvbnRlbnRzLmpzJykuQ29udGVudHNPcHRpb25zfSBDb250ZW50c09wdGlvbnNcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtSb290IHwgQ29udGVudH0gTm9kZVxuICogQHR5cGVkZWYge1NlYXJjaE9wdGlvbnMgJiBDb250ZW50c09wdGlvbnMgJiBFeHRyYU9wdGlvbnN9IE9wdGlvbnNcbiAqXG4gKiBAdHlwZWRlZiBFeHRyYU9wdGlvbnNcbiAqICAgRXh0cmEgY29uZmlndXJhdGlvbiBmaWVsZHMuXG4gKiBAcHJvcGVydHkge3N0cmluZyB8IG51bGwgfCB1bmRlZmluZWR9IFtoZWFkaW5nXVxuICogICBIZWFkaW5nIHRvIGxvb2sgZm9yLCB3cmFwcGVkIGluIGBuZXcgUmVnRXhwKCdeKCcgKyB2YWx1ZSArICcpJCcsICdpJylgLlxuICpcbiAqIEB0eXBlZGVmIFJlc3VsdFxuICogICBSZXN1bHRzLlxuICogQHByb3BlcnR5IHtudW1iZXIgfCBudWxsfSBpbmRleFxuICogICBJbmRleCBvZiB0aGUgbm9kZSByaWdodCBhZnRlciB0aGUgdGFibGUgb2YgY29udGVudHMgaGVhZGluZywgYC0xYCBpZiBub1xuICogICBoZWFkaW5nIHdhcyBmb3VuZCwgYG51bGxgIGlmIG5vIGBoZWFkaW5nYCB3YXMgZ2l2ZW4uXG4gKiBAcHJvcGVydHkge251bWJlciB8IG51bGx9IGVuZEluZGV4XG4gKiAgIEluZGV4IG9mIHRoZSBmaXJzdCBub2RlIGFmdGVyIGBoZWFkaW5nYCB0aGF0IGlzIG5vdCBwYXJ0IG9mIGl0cyBzZWN0aW9uLFxuICogICBgLTFgIGlmIG5vIGhlYWRpbmcgd2FzIGZvdW5kLCBgbnVsbGAgaWYgbm8gYGhlYWRpbmdgIHdhcyBnaXZlbiwgc2FtZSBhc1xuICogICBgaW5kZXhgIGlmIHRoZXJlIGFyZSBubyBub2RlcyBiZXR3ZWVuIGBoZWFkaW5nYCBhbmQgdGhlIGZpcnN0IGhlYWRpbmcgaW5cbiAqICAgdGhlIHRhYmxlIG9mIGNvbnRlbnRzLlxuICogQHByb3BlcnR5IHtMaXN0IHwgbnVsbH0gbWFwXG4gKiAgIExpc3QgcmVwcmVzZW50aW5nIHRoZSBnZW5lcmF0ZWQgdGFibGUgb2YgY29udGVudHMsIGBudWxsYCBpZiBubyB0YWJsZSBvZlxuICogICBjb250ZW50cyBjb3VsZCBiZSBjcmVhdGVkLCBlaXRoZXIgYmVjYXVzZSBubyBoZWFkaW5nIHdhcyBmb3VuZCBvciBiZWNhdXNlXG4gKiAgIG5vIGZvbGxvd2luZyBoZWFkaW5ncyB3ZXJlIGZvdW5kLlxuICovXG5cbmltcG9ydCB7c2VhcmNofSBmcm9tICcuL3NlYXJjaC5qcydcbmltcG9ydCB7Y29udGVudHN9IGZyb20gJy4vY29udGVudHMuanMnXG5pbXBvcnQge3RvRXhwcmVzc2lvbn0gZnJvbSAnLi90by1leHByZXNzaW9uLmpzJ1xuXG4vKipcbiAqIEdlbmVyYXRlIGEgdGFibGUgb2YgY29udGVudHMgZnJvbSBgdHJlZWAuXG4gKlxuICogTG9va3MgZm9yIHRoZSBmaXJzdCBoZWFkaW5nIG1hdGNoaW5nIGBvcHRpb25zLmhlYWRpbmdgIChjYXNlIGluc2Vuc2l0aXZlKSBhbmRcbiAqIHJldHVybnMgYSB0YWJsZSBvZiBjb250ZW50cyAoYSBsaXN0KSBmb3IgYWxsIGZvbGxvd2luZyBoZWFkaW5ncy5cbiAqIElmIG5vIGBoZWFkaW5nYCBpcyBzcGVjaWZpZWQsIGNyZWF0ZXMgYSB0YWJsZSBvZiBjb250ZW50cyBmb3IgYWxsIGhlYWRpbmdzIGluXG4gKiBgdHJlZWAuXG4gKiBgdHJlZWAgaXMgbm90IGNoYW5nZWQuXG4gKlxuICogTGlua3MgaW4gdGhlIGxpc3QgdG8gaGVhZGluZ3MgYXJlIGJhc2VkIG9uIEdpdEh1YuKAmXMgc3R5bGUuXG4gKiBPbmx5IHRvcC1sZXZlbCBoZWFkaW5ncyAodGhvc2Ugbm90IGluIGJsb2NrcXVvdGVzIG9yIGxpc3RzKSwgYXJlIHVzZWQuXG4gKiBUaGlzIGRlZmF1bHQgYmVoYXZpb3IgY2FuIGJlIGNoYW5nZWQgYnkgcGFzc2luZyBgb3B0aW9ucy5wYXJlbnRzYC5cbiAqXG4gKiBAcGFyYW0ge05vZGV9IHRyZWVcbiAqICAgVHJlZSB0byBzZWFyY2ggYW5kIGdlbmVyYXRlIGZyb20uXG4gKiBAcGFyYW0ge09wdGlvbnMgfCBudWxsIHwgdW5kZWZpbmVkfSBbb3B0aW9uc11cbiAqICAgQ29uZmlndXJhdGlvbi5cbiAqIEByZXR1cm5zIHtSZXN1bHR9XG4gKiAgIFJlc3VsdHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b2ModHJlZSwgb3B0aW9ucykge1xuICBjb25zdCBzZXR0aW5ncyA9IG9wdGlvbnMgfHwge31cbiAgY29uc3QgaGVhZGluZyA9IHNldHRpbmdzLmhlYWRpbmcgPyB0b0V4cHJlc3Npb24oc2V0dGluZ3MuaGVhZGluZykgOiB1bmRlZmluZWRcbiAgY29uc3QgcmVzdWx0ID0gc2VhcmNoKHRyZWUsIGhlYWRpbmcsIHNldHRpbmdzKVxuXG4gIHJldHVybiB7XG4gICAgaW5kZXg6IGhlYWRpbmcgPyByZXN1bHQuaW5kZXggOiBudWxsLFxuICAgIGVuZEluZGV4OiBoZWFkaW5nID8gcmVzdWx0LmVuZEluZGV4IDogbnVsbCxcbiAgICBtYXA6IHJlc3VsdC5tYXAubGVuZ3RoID4gMCA/IGNvbnRlbnRzKHJlc3VsdC5tYXAsIHNldHRpbmdzKSA6IG51bGxcbiAgfVxufVxuIl0sIm5hbWVzIjpbInNlYXJjaCIsImNvbnRlbnRzIiwidG9FeHByZXNzaW9uIiwidG9jIiwidHJlZSIsIm9wdGlvbnMiLCJzZXR0aW5ncyIsImhlYWRpbmciLCJ1bmRlZmluZWQiLCJyZXN1bHQiLCJpbmRleCIsImVuZEluZGV4IiwibWFwIiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/search.js":
/*!***********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/search.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var github_slugger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! github-slugger */ \"(rsc)/../../node_modules/.pnpm/github-slugger@2.0.0/node_modules/github-slugger/index.js\");\n/* harmony import */ var mdast_util_to_string__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mdast-util-to-string */ \"(rsc)/../../node_modules/.pnpm/mdast-util-to-string@3.2.0/node_modules/mdast-util-to-string/lib/index.js\");\n/* harmony import */ var unist_util_visit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-visit */ \"(rsc)/../../node_modules/.pnpm/unist-util-visit@4.1.2/node_modules/unist-util-visit/lib/index.js\");\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-is */ \"(rsc)/../../node_modules/.pnpm/unist-util-is@5.2.1/node_modules/unist-util-is/lib/index.js\");\n/* harmony import */ var _to_expression_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./to-expression.js */ \"(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/to-expression.js\");\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').Test} Test\n */ /**\n * @typedef {Root | Content} Node\n * @typedef {Heading['depth']} Rank\n *\n */ /**\n * @typedef SearchOptions\n *   Search configuration.\n * @property {Rank | null | undefined} [maxDepth=6]\n *   Maximum heading depth to include in the table of contents.\n *\n *   This is inclusive: when set to `3`, level three headings are included\n *   (those with three hashes, `###`).\n * @property {string | null | undefined} [skip]\n *   Headings to skip, wrapped in `new RegExp('^(' + value + ')$', 'i')`.\n *\n *   Any heading matching this expression will not be present in the table of\n *   contents.\n * @property {Test} [parents]\n *   Allow headings to be children of certain node types (default: the to `toc`\n *   given `tree`, to only allow top-level headings).\n *\n *   Internally, uses `unist-util-is` to check, so `parents` can be any\n *   `is`-compatible test.\n *\n * @typedef SearchEntry\n *   Entry.\n * @property {string} id\n *   ID of entry.\n * @property {Array<PhrasingContent>} children\n *   Contents of entry.\n * @property {Rank} depth\n *   Rank of entry.\n *\n * @typedef SearchResult\n *   Results.\n * @property {number} index\n *   Where the contents section starts, if looking for a heading.\n * @property {number} endIndex\n *   Where the contents section ends, if looking for a heading.\n * @property {Array<SearchEntry>} map\n *   List of entries.\n */ \n\n\n\n\nconst slugs = new github_slugger__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n/**\n * Search a node for a toc.\n *\n * @param {Node} root\n * @param {RegExp | undefined} expression\n * @param {SearchOptions} settings\n * @returns {SearchResult}\n */ function search(root, expression, settings) {\n    const skip = settings.skip ? (0,_to_expression_js__WEBPACK_IMPORTED_MODULE_1__.toExpression)(settings.skip) : undefined;\n    const parents = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_2__.convert)(settings.parents || ((d)=>d === root));\n    /** @type {Array<SearchEntry>} */ const map = [];\n    /** @type {number | undefined} */ let index;\n    /** @type {number | undefined} */ let endIndex;\n    /** @type {Heading | undefined} */ let opening;\n    slugs.reset();\n    // Visit all headings in `root`.  We `slug` all headings (to account for\n    // duplicates), but only create a TOC from top-level headings (by default).\n    (0,unist_util_visit__WEBPACK_IMPORTED_MODULE_3__.visit)(root, \"heading\", (node, position, parent)=>{\n        const value = (0,mdast_util_to_string__WEBPACK_IMPORTED_MODULE_4__.toString)(node, {\n            includeImageAlt: false\n        });\n        /** @type {string} */ // @ts-expect-error `hProperties` from <https://github.com/syntax-tree/mdast-util-to-hast>\n        const id = node.data && node.data.hProperties && node.data.hProperties.id;\n        const slug = slugs.slug(id || value);\n        if (!parents(parent)) {\n            return;\n        }\n        // Our opening heading.\n        if (position !== null && expression && !index && expression.test(value)) {\n            index = position + 1;\n            opening = node;\n            return;\n        }\n        // Our closing heading.\n        if (position !== null && opening && !endIndex && node.depth <= opening.depth) {\n            endIndex = position;\n        }\n        // A heading after the closing (if we were looking for one).\n        if ((endIndex || !expression) && (!settings.maxDepth || node.depth <= settings.maxDepth) && (!skip || !skip.test(value))) {\n            map.push({\n                depth: node.depth,\n                children: node.children,\n                id: slug\n            });\n        }\n    });\n    return {\n        index: index === undefined ? -1 : index,\n        // <sindresorhus/eslint-plugin-unicorn#980>\n        // @ts-expect-error Looks like a parent.\n        endIndex: index === undefined ? -1 : endIndex || root.children.length,\n        map\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/search.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/to-expression.js":
/*!******************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/to-expression.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toExpression: () => (/* binding */ toExpression)\n/* harmony export */ });\n/**\n * Transform a string into an applicable expression.\n *\n * @param {string} value\n * @returns {RegExp}\n */ function toExpression(value) {\n    return new RegExp(\"^(\" + value + \")$\", \"i\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDYuMS4xL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvdG8tZXhwcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0NBS0MsR0FDTSxTQUFTQSxhQUFhQyxLQUFLO0lBQ2hDLE9BQU8sSUFBSUMsT0FBTyxPQUFPRCxRQUFRLE1BQU07QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYXdhLWRvY3MvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL21kYXN0LXV0aWwtdG9jQDYuMS4xL25vZGVfbW9kdWxlcy9tZGFzdC11dGlsLXRvYy9saWIvdG8tZXhwcmVzc2lvbi5qcz9hNTE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVHJhbnNmb3JtIGEgc3RyaW5nIGludG8gYW4gYXBwbGljYWJsZSBleHByZXNzaW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHJldHVybnMge1JlZ0V4cH1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvRXhwcmVzc2lvbih2YWx1ZSkge1xuICByZXR1cm4gbmV3IFJlZ0V4cCgnXignICsgdmFsdWUgKyAnKSQnLCAnaScpXG59XG4iXSwibmFtZXMiOlsidG9FeHByZXNzaW9uIiwidmFsdWUiLCJSZWdFeHAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/mdast-util-toc@6.1.1/node_modules/mdast-util-toc/lib/to-expression.js\n");

/***/ })

};
;