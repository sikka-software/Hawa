"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/embla-carousel-autoplay@8.0.0-rc15_embla-carousel@8.0.0-rc15";
exports.ids = ["vendor-chunks/embla-carousel-autoplay@8.0.0-rc15_embla-carousel@8.0.0-rc15"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/embla-carousel-autoplay@8.0.0-rc15_embla-carousel@8.0.0-rc15/node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js":
/*!*********************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/embla-carousel-autoplay@8.0.0-rc15_embla-carousel@8.0.0-rc15/node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js ***!
  \*********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Autoplay)\n/* harmony export */ });\nconst defaultOptions = {\n    active: true,\n    breakpoints: {},\n    delay: 4000,\n    jump: false,\n    playOnInit: true,\n    stopOnFocusIn: true,\n    stopOnInteraction: true,\n    stopOnMouseEnter: false,\n    stopOnLastSnap: false,\n    rootNode: null\n};\nfunction Autoplay(userOptions = {}) {\n    let options;\n    let emblaApi;\n    let destroyed;\n    let playing = false;\n    let wasPlaying = false;\n    let jump = false;\n    let animationFrame = 0;\n    let timer = 0;\n    function init(emblaApiInstance, optionsHandler) {\n        emblaApi = emblaApiInstance;\n        if (emblaApi.scrollSnapList().length <= 1) return;\n        const { mergeOptions, optionsAtMedia } = optionsHandler;\n        const optionsBase = mergeOptions(defaultOptions, Autoplay.globalOptions);\n        const allOptions = mergeOptions(optionsBase, userOptions);\n        options = optionsAtMedia(allOptions);\n        jump = options.jump;\n        destroyed = false;\n        const { eventStore, ownerDocument } = emblaApi.internalEngine();\n        const emblaRoot = emblaApi.rootNode();\n        const root = options.rootNode && options.rootNode(emblaRoot) || emblaRoot;\n        emblaApi.on(\"pointerDown\", clearTimer);\n        if (!options.stopOnInteraction) emblaApi.on(\"pointerUp\", startTimer);\n        if (options.stopOnMouseEnter) {\n            eventStore.add(root, \"mouseenter\", clearTimer);\n            if (!options.stopOnInteraction) {\n                eventStore.add(root, \"mouseleave\", startTimer);\n            }\n        }\n        if (options.stopOnFocusIn) {\n            eventStore.add(root, \"focusin\", clearTimer);\n            if (!options.stopOnInteraction) {\n                eventStore.add(root, \"focusout\", startTimer);\n            }\n        }\n        eventStore.add(ownerDocument, \"visibilitychange\", ()=>{\n            if (ownerDocument.visibilityState === \"hidden\") {\n                wasPlaying = playing;\n                return clearTimer();\n            }\n            if (wasPlaying) startTimer();\n        });\n        if (options.playOnInit) {\n            emblaApi.on(\"init\", startTimer).on(\"reInit\", startTimer);\n        }\n    }\n    function destroy() {\n        destroyed = true;\n        playing = false;\n        emblaApi.off(\"init\", startTimer).off(\"reInit\", startTimer);\n        emblaApi.off(\"pointerDown\", clearTimer);\n        if (!options.stopOnInteraction) emblaApi.off(\"pointerUp\", startTimer);\n        clearTimer();\n        cancelAnimationFrame(animationFrame);\n        animationFrame = 0;\n    }\n    function startTimer() {\n        if (destroyed) return;\n        if (!playing) emblaApi.emit(\"autoplay:play\");\n        const { ownerWindow } = emblaApi.internalEngine();\n        ownerWindow.clearInterval(timer);\n        timer = ownerWindow.setInterval(next, options.delay);\n        playing = true;\n    }\n    function clearTimer() {\n        if (destroyed) return;\n        if (playing) emblaApi.emit(\"autoplay:stop\");\n        const { ownerWindow } = emblaApi.internalEngine();\n        ownerWindow.clearInterval(timer);\n        timer = 0;\n        playing = false;\n    }\n    function play(jumpOverride) {\n        if (typeof jumpOverride !== \"undefined\") jump = jumpOverride;\n        startTimer();\n    }\n    function stop() {\n        if (playing) clearTimer();\n    }\n    function reset() {\n        if (playing) play();\n    }\n    function isPlaying() {\n        return playing;\n    }\n    function next() {\n        animationFrame = requestAnimationFrame(()=>{\n            const { index } = emblaApi.internalEngine();\n            const nextIndex = index.clone().add(1).get();\n            const lastIndex = emblaApi.scrollSnapList().length - 1;\n            const kill = options.stopOnLastSnap && nextIndex === lastIndex;\n            if (kill) clearTimer();\n            if (emblaApi.canScrollNext()) {\n                emblaApi.scrollNext(jump);\n            } else {\n                emblaApi.scrollTo(0, jump);\n            }\n        });\n    }\n    const self = {\n        name: \"autoplay\",\n        options: userOptions,\n        init,\n        destroy,\n        play,\n        stop,\n        reset,\n        isPlaying\n    };\n    return self;\n}\nAutoplay.globalOptions = undefined;\n //# sourceMappingURL=embla-carousel-autoplay.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/embla-carousel-autoplay@8.0.0-rc15_embla-carousel@8.0.0-rc15/node_modules/embla-carousel-autoplay/esm/embla-carousel-autoplay.esm.js\n");

/***/ })

};
;