"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/recharts-scale@0.4.5";
exports.ids = ["vendor-chunks/recharts-scale@0.4.5"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNiceTickValues: () => (/* binding */ getNiceTickValues),\n/* harmony export */   getTickValues: () => (/* binding */ getTickValues),\n/* harmony export */   getTickValuesFixedDomain: () => (/* binding */ getTickValuesFixedDomain)\n/* harmony export */ });\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js-light */ \"(ssr)/../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.mjs\");\n/* harmony import */ var _util_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/utils */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\");\n/* harmony import */ var _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/arithmetic */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js\");\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n/**\n * @fileOverview calculate tick values of scale\n * @author xile611, arcthur\n * @date 2015-09-17\n */ \n\n\n/**\n * Calculate a interval of a minimum value and a maximum value\n *\n * @param  {Number} min       The minimum value\n * @param  {Number} max       The maximum value\n * @return {Array} An interval\n */ function getValidInterval(_ref) {\n    var _ref2 = _slicedToArray(_ref, 2), min = _ref2[0], max = _ref2[1];\n    var validMin = min, validMax = max; // exchange\n    if (min > max) {\n        validMin = max;\n        validMax = min;\n    }\n    return [\n        validMin,\n        validMax\n    ];\n}\n/**\n * Calculate the step which is easy to understand between ticks, like 10, 20, 25\n *\n * @param  {Decimal} roughStep        The rough step calculated by deviding the\n * difference by the tickCount\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Integer} correctionFactor A correction factor\n * @return {Decimal} The step which is easy to understand between two ticks\n */ function getFormatStep(roughStep, allowDecimals, correctionFactor) {\n    if (roughStep.lte(0)) {\n        return new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    }\n    var digitCount = _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDigitCount(roughStep.toNumber()); // The ratio between the rough step and the smallest number which has a bigger\n    // order of magnitudes than the rough step\n    var digitCountValue = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10).pow(digitCount);\n    var stepRatio = roughStep.div(digitCountValue); // When an integer and a float multiplied, the accuracy of result may be wrong\n    var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;\n    var amendStepRatio = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);\n    var formatStep = amendStepRatio.mul(digitCountValue);\n    return allowDecimals ? formatStep : new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.ceil(formatStep));\n}\n/**\n * calculate the ticks when the minimum value equals to the maximum value\n *\n * @param  {Number}  value         The minimum valuue which is also the maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}                 ticks\n */ function getTickOfSingleValue(value, tickCount, allowDecimals) {\n    var step = 1; // calculate the middle value of ticks\n    var middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value);\n    if (!middle.isint() && allowDecimals) {\n        var absVal = Math.abs(value);\n        if (absVal < 1) {\n            // The step should be a float number when the difference is smaller than 1\n            step = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](10).pow(_util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getDigitCount(value) - 1);\n            middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(middle.div(step).toNumber())).mul(step);\n        } else if (absVal > 1) {\n            // Return the maximum integer which is smaller than 'value' when 'value' is greater than 1\n            middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(value));\n        }\n    } else if (value === 0) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor((tickCount - 1) / 2));\n    } else if (!allowDecimals) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Math.floor(value));\n    }\n    var middleIndex = Math.floor((tickCount - 1) / 2);\n    var fn = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.compose)((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.map)(function(n) {\n        return middle.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](n - middleIndex).mul(step)).toNumber();\n    }), _util_utils__WEBPACK_IMPORTED_MODULE_1__.range);\n    return fn(0, tickCount);\n}\n/**\n * Calculate the step\n *\n * @param  {Number}  min              The minimum value of an interval\n * @param  {Number}  max              The maximum value of an interval\n * @param  {Integer} tickCount        The count of ticks\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Number}  correctionFactor A correction factor\n * @return {Object}  The step, minimum value of ticks, maximum value of ticks\n */ function calculateStep(min, max, tickCount, allowDecimals) {\n    var correctionFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    // dirty hack (for recharts' test)\n    if (!Number.isFinite((max - min) / (tickCount - 1))) {\n        return {\n            step: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0),\n            tickMin: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0),\n            tickMax: new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0)\n        };\n    } // The step which is easy to understand between two ticks\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](max).sub(min).div(tickCount - 1), allowDecimals, correctionFactor); // A medial value of ticks\n    var middle; // When 0 is inside the interval, 0 should be a tick\n    if (min <= 0 && max >= 0) {\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0);\n    } else {\n        // calculate the middle value\n        middle = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](min).add(max).div(2); // minus modulo value\n        middle = middle.sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](middle).mod(step));\n    }\n    var belowCount = Math.ceil(middle.sub(min).div(step).toNumber());\n    var upCount = Math.ceil(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](max).sub(middle).div(step).toNumber());\n    var scaleCount = belowCount + upCount + 1;\n    if (scaleCount > tickCount) {\n        // When more ticks need to cover the interval, step should be bigger.\n        return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);\n    }\n    if (scaleCount < tickCount) {\n        // When less ticks can cover the interval, we should add some additional ticks\n        upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;\n        belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);\n    }\n    return {\n        step: step,\n        tickMin: middle.sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](belowCount).mul(step)),\n        tickMax: middle.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](upCount).mul(step))\n    };\n}\n/**\n * Calculate the ticks of an interval, the count of ticks will be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getNiceTickValuesFn(_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2), min = _ref4[0], max = _ref4[1];\n    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var count = Math.max(tickCount, 2);\n    var _getValidInterval = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval2 = _slicedToArray(_getValidInterval, 2), cormin = _getValidInterval2[0], cormax = _getValidInterval2[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        var _values = cormax === Infinity ? [\n            cormin\n        ].concat(_toConsumableArray((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.range)(0, tickCount - 1).map(function() {\n            return Infinity;\n        }))) : [].concat(_toConsumableArray((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.range)(0, tickCount - 1).map(function() {\n            return -Infinity;\n        })), [\n            cormax\n        ]);\n        return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(_values) : _values;\n    }\n    if (cormin === cormax) {\n        return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n    } // Get the step between two ticks\n    var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals), step = _calculateStep.step, tickMin = _calculateStep.tickMin, tickMax = _calculateStep.tickMax;\n    var values = _util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rangeStep(tickMin, tickMax.add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.1).mul(step)), step);\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getTickValuesFn(_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2), min = _ref6[0], max = _ref6[1];\n    var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var count = Math.max(tickCount, 2);\n    var _getValidInterval3 = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval4 = _slicedToArray(_getValidInterval3, 2), cormin = _getValidInterval4[0], cormax = _getValidInterval4[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        return [\n            min,\n            max\n        ];\n    }\n    if (cormin === cormax) {\n        return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n    }\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n    var fn = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.compose)((0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.map)(function(n) {\n        return new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormin).add(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](n).mul(step)).toNumber();\n    }), _util_utils__WEBPACK_IMPORTED_MODULE_1__.range);\n    var values = fn(0, count).filter(function(entry) {\n        return entry >= cormin && entry <= cormax;\n    });\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed,\n * but the domain will be guaranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */ function getTickValuesFixedDomainFn(_ref7, tickCount) {\n    var _ref8 = _slicedToArray(_ref7, 2), min = _ref8[0], max = _ref8[1];\n    var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    // More than two ticks should be return\n    var _getValidInterval5 = getValidInterval([\n        min,\n        max\n    ]), _getValidInterval6 = _slicedToArray(_getValidInterval5, 2), cormin = _getValidInterval6[0], cormax = _getValidInterval6[1];\n    if (cormin === -Infinity || cormax === Infinity) {\n        return [\n            min,\n            max\n        ];\n    }\n    if (cormin === cormax) {\n        return [\n            cormin\n        ];\n    }\n    var count = Math.max(tickCount, 2);\n    var step = getFormatStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n    var values = [].concat(_toConsumableArray(_util_arithmetic__WEBPACK_IMPORTED_MODULE_2__[\"default\"].rangeStep(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormin), new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](cormax).sub(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](0.99).mul(step)), step)), [\n        cormax\n    ]);\n    return min > max ? (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.reverse)(values) : values;\n}\nvar getNiceTickValues = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getNiceTickValuesFn);\nvar getTickValues = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getTickValuesFn);\nvar getTickValuesFixedDomain = (0,_util_utils__WEBPACK_IMPORTED_MODULE_1__.memoize)(getTickValuesFixedDomainFn);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvZ2V0TmljZVRpY2tWYWx1ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsU0FBU0EsbUJBQW1CQyxHQUFHO0lBQUksT0FBT0MsbUJBQW1CRCxRQUFRRSxpQkFBaUJGLFFBQVFHLDRCQUE0QkgsUUFBUUk7QUFBc0I7QUFFeEosU0FBU0E7SUFBdUIsTUFBTSxJQUFJQyxVQUFVO0FBQXlJO0FBRTdMLFNBQVNILGlCQUFpQkksSUFBSTtJQUFJLElBQUksT0FBT0MsV0FBVyxlQUFlQSxPQUFPQyxRQUFRLElBQUlDLE9BQU9ILE9BQU8sT0FBT0ksTUFBTUMsSUFBSSxDQUFDTDtBQUFPO0FBRWpJLFNBQVNMLG1CQUFtQkQsR0FBRztJQUFJLElBQUlVLE1BQU1FLE9BQU8sQ0FBQ1osTUFBTSxPQUFPYSxrQkFBa0JiO0FBQU07QUFFMUYsU0FBU2MsZUFBZWQsR0FBRyxFQUFFZSxDQUFDO0lBQUksT0FBT0MsZ0JBQWdCaEIsUUFBUWlCLHNCQUFzQmpCLEtBQUtlLE1BQU1aLDRCQUE0QkgsS0FBS2UsTUFBTUc7QUFBb0I7QUFFN0osU0FBU0E7SUFBcUIsTUFBTSxJQUFJYixVQUFVO0FBQThJO0FBRWhNLFNBQVNGLDRCQUE0QmdCLENBQUMsRUFBRUMsTUFBTTtJQUFJLElBQUksQ0FBQ0QsR0FBRztJQUFRLElBQUksT0FBT0EsTUFBTSxVQUFVLE9BQU9OLGtCQUFrQk0sR0FBR0M7SUFBUyxJQUFJQyxJQUFJWixPQUFPYSxTQUFTLENBQUNDLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDTCxHQUFHTSxLQUFLLENBQUMsR0FBRyxDQUFDO0lBQUksSUFBSUosTUFBTSxZQUFZRixFQUFFTyxXQUFXLEVBQUVMLElBQUlGLEVBQUVPLFdBQVcsQ0FBQ0MsSUFBSTtJQUFFLElBQUlOLE1BQU0sU0FBU0EsTUFBTSxPQUFPLE9BQU9YLE1BQU1D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QUFPQSxDQUFDNEQsU0FBUyxJQUFJNUQsd0RBQU9BLENBQUM2RCxRQUFRWixHQUFHLENBQUMsSUFBSWpELHdEQUFPQSxDQUFDLE1BQU0rQixHQUFHLENBQUNJLFFBQVFBLFFBQVE7UUFBQzBCO0tBQU87SUFDMUosT0FBT25ELE1BQU1DLE1BQU1OLG9EQUFPQSxDQUFDNkQsVUFBVUE7QUFDdkM7QUFFTyxJQUFJYyxvQkFBb0I3RSxvREFBT0EsQ0FBQ21ELHFCQUFxQjtBQUNyRCxJQUFJMkIsZ0JBQWdCOUUsb0RBQU9BLENBQUNpRSxpQkFBaUI7QUFDN0MsSUFBSWMsMkJBQTJCL0Usb0RBQU9BLENBQUN3RSw0QkFBNEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oYXdhLWRvY3MvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvZ2V0TmljZVRpY2tWYWx1ZXMuanM/MTY4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IHJldHVybiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5KGFycikgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFycikgfHwgX25vbkl0ZXJhYmxlU3ByZWFkKCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTsgfVxuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfZSA9IHVuZGVmaW5lZDsgdHJ5IHsgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkgeyBfYXJyLnB1c2goX3MudmFsdWUpOyBpZiAoaSAmJiBfYXJyLmxlbmd0aCA9PT0gaSkgYnJlYWs7IH0gfSBjYXRjaCAoZXJyKSB7IF9kID0gdHJ1ZTsgX2UgPSBlcnI7IH0gZmluYWxseSB7IHRyeSB7IGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0gIT0gbnVsbCkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9XG5cbmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfVxuXG4vKipcbiAqIEBmaWxlT3ZlcnZpZXcgY2FsY3VsYXRlIHRpY2sgdmFsdWVzIG9mIHNjYWxlXG4gKiBAYXV0aG9yIHhpbGU2MTEsIGFyY3RodXJcbiAqIEBkYXRlIDIwMTUtMDktMTdcbiAqL1xuaW1wb3J0IERlY2ltYWwgZnJvbSAnZGVjaW1hbC5qcy1saWdodCc7XG5pbXBvcnQgeyBjb21wb3NlLCByYW5nZSwgbWVtb2l6ZSwgbWFwLCByZXZlcnNlIH0gZnJvbSAnLi91dGlsL3V0aWxzJztcbmltcG9ydCBBcml0aG1ldGljIGZyb20gJy4vdXRpbC9hcml0aG1ldGljJztcbi8qKlxuICogQ2FsY3VsYXRlIGEgaW50ZXJ2YWwgb2YgYSBtaW5pbXVtIHZhbHVlIGFuZCBhIG1heGltdW0gdmFsdWVcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IG1pbiAgICAgICBUaGUgbWluaW11bSB2YWx1ZVxuICogQHBhcmFtICB7TnVtYmVyfSBtYXggICAgICAgVGhlIG1heGltdW0gdmFsdWVcbiAqIEByZXR1cm4ge0FycmF5fSBBbiBpbnRlcnZhbFxuICovXG5cbmZ1bmN0aW9uIGdldFZhbGlkSW50ZXJ2YWwoX3JlZikge1xuICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSxcbiAgICAgIG1pbiA9IF9yZWYyWzBdLFxuICAgICAgbWF4ID0gX3JlZjJbMV07XG5cbiAgdmFyIHZhbGlkTWluID0gbWluLFxuICAgICAgdmFsaWRNYXggPSBtYXg7IC8vIGV4Y2hhbmdlXG5cbiAgaWYgKG1pbiA+IG1heCkge1xuICAgIHZhbGlkTWluID0gbWF4O1xuICAgIHZhbGlkTWF4ID0gbWluO1xuICB9XG5cbiAgcmV0dXJuIFt2YWxpZE1pbiwgdmFsaWRNYXhdO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHN0ZXAgd2hpY2ggaXMgZWFzeSB0byB1bmRlcnN0YW5kIGJldHdlZW4gdGlja3MsIGxpa2UgMTAsIDIwLCAyNVxuICpcbiAqIEBwYXJhbSAge0RlY2ltYWx9IHJvdWdoU3RlcCAgICAgICAgVGhlIHJvdWdoIHN0ZXAgY2FsY3VsYXRlZCBieSBkZXZpZGluZyB0aGVcbiAqIGRpZmZlcmVuY2UgYnkgdGhlIHRpY2tDb3VudFxuICogQHBhcmFtICB7Qm9vbGVhbn0gYWxsb3dEZWNpbWFscyAgICBBbGxvdyB0aGUgdGlja3MgdG8gYmUgZGVjaW1hbHMgb3Igbm90XG4gKiBAcGFyYW0gIHtJbnRlZ2VyfSBjb3JyZWN0aW9uRmFjdG9yIEEgY29ycmVjdGlvbiBmYWN0b3JcbiAqIEByZXR1cm4ge0RlY2ltYWx9IFRoZSBzdGVwIHdoaWNoIGlzIGVhc3kgdG8gdW5kZXJzdGFuZCBiZXR3ZWVuIHR3byB0aWNrc1xuICovXG5cblxuZnVuY3Rpb24gZ2V0Rm9ybWF0U3RlcChyb3VnaFN0ZXAsIGFsbG93RGVjaW1hbHMsIGNvcnJlY3Rpb25GYWN0b3IpIHtcbiAgaWYgKHJvdWdoU3RlcC5sdGUoMCkpIHtcbiAgICByZXR1cm4gbmV3IERlY2ltYWwoMCk7XG4gIH1cblxuICB2YXIgZGlnaXRDb3VudCA9IEFyaXRobWV0aWMuZ2V0RGlnaXRDb3VudChyb3VnaFN0ZXAudG9OdW1iZXIoKSk7IC8vIFRoZSByYXRpbyBiZXR3ZWVuIHRoZSByb3VnaCBzdGVwIGFuZCB0aGUgc21hbGxlc3QgbnVtYmVyIHdoaWNoIGhhcyBhIGJpZ2dlclxuICAvLyBvcmRlciBvZiBtYWduaXR1ZGVzIHRoYW4gdGhlIHJvdWdoIHN0ZXBcblxuICB2YXIgZGlnaXRDb3VudFZhbHVlID0gbmV3IERlY2ltYWwoMTApLnBvdyhkaWdpdENvdW50KTtcbiAgdmFyIHN0ZXBSYXRpbyA9IHJvdWdoU3RlcC5kaXYoZGlnaXRDb3VudFZhbHVlKTsgLy8gV2hlbiBhbiBpbnRlZ2VyIGFuZCBhIGZsb2F0IG11bHRpcGxpZWQsIHRoZSBhY2N1cmFjeSBvZiByZXN1bHQgbWF5IGJlIHdyb25nXG5cbiAgdmFyIHN0ZXBSYXRpb1NjYWxlID0gZGlnaXRDb3VudCAhPT0gMSA/IDAuMDUgOiAwLjE7XG4gIHZhciBhbWVuZFN0ZXBSYXRpbyA9IG5ldyBEZWNpbWFsKE1hdGguY2VpbChzdGVwUmF0aW8uZGl2KHN0ZXBSYXRpb1NjYWxlKS50b051bWJlcigpKSkuYWRkKGNvcnJlY3Rpb25GYWN0b3IpLm11bChzdGVwUmF0aW9TY2FsZSk7XG4gIHZhciBmb3JtYXRTdGVwID0gYW1lbmRTdGVwUmF0aW8ubXVsKGRpZ2l0Q291bnRWYWx1ZSk7XG4gIHJldHVybiBhbGxvd0RlY2ltYWxzID8gZm9ybWF0U3RlcCA6IG5ldyBEZWNpbWFsKE1hdGguY2VpbChmb3JtYXRTdGVwKSk7XG59XG4vKipcbiAqIGNhbGN1bGF0ZSB0aGUgdGlja3Mgd2hlbiB0aGUgbWluaW11bSB2YWx1ZSBlcXVhbHMgdG8gdGhlIG1heGltdW0gdmFsdWVcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICB2YWx1ZSAgICAgICAgIFRoZSBtaW5pbXVtIHZhbHV1ZSB3aGljaCBpcyBhbHNvIHRoZSBtYXhpbXVtIHZhbHVlXG4gKiBAcGFyYW0gIHtJbnRlZ2VyfSB0aWNrQ291bnQgICAgIFRoZSBjb3VudCBvZiB0aWNrc1xuICogQHBhcmFtICB7Qm9vbGVhbn0gYWxsb3dEZWNpbWFscyBBbGxvdyB0aGUgdGlja3MgdG8gYmUgZGVjaW1hbHMgb3Igbm90XG4gKiBAcmV0dXJuIHtBcnJheX0gICAgICAgICAgICAgICAgIHRpY2tzXG4gKi9cblxuXG5mdW5jdGlvbiBnZXRUaWNrT2ZTaW5nbGVWYWx1ZSh2YWx1ZSwgdGlja0NvdW50LCBhbGxvd0RlY2ltYWxzKSB7XG4gIHZhciBzdGVwID0gMTsgLy8gY2FsY3VsYXRlIHRoZSBtaWRkbGUgdmFsdWUgb2YgdGlja3NcblxuICB2YXIgbWlkZGxlID0gbmV3IERlY2ltYWwodmFsdWUpO1xuXG4gIGlmICghbWlkZGxlLmlzaW50KCkgJiYgYWxsb3dEZWNpbWFscykge1xuICAgIHZhciBhYnNWYWwgPSBNYXRoLmFicyh2YWx1ZSk7XG5cbiAgICBpZiAoYWJzVmFsIDwgMSkge1xuICAgICAgLy8gVGhlIHN0ZXAgc2hvdWxkIGJlIGEgZmxvYXQgbnVtYmVyIHdoZW4gdGhlIGRpZmZlcmVuY2UgaXMgc21hbGxlciB0aGFuIDFcbiAgICAgIHN0ZXAgPSBuZXcgRGVjaW1hbCgxMCkucG93KEFyaXRobWV0aWMuZ2V0RGlnaXRDb3VudCh2YWx1ZSkgLSAxKTtcbiAgICAgIG1pZGRsZSA9IG5ldyBEZWNpbWFsKE1hdGguZmxvb3IobWlkZGxlLmRpdihzdGVwKS50b051bWJlcigpKSkubXVsKHN0ZXApO1xuICAgIH0gZWxzZSBpZiAoYWJzVmFsID4gMSkge1xuICAgICAgLy8gUmV0dXJuIHRoZSBtYXhpbXVtIGludGVnZXIgd2hpY2ggaXMgc21hbGxlciB0aGFuICd2YWx1ZScgd2hlbiAndmFsdWUnIGlzIGdyZWF0ZXIgdGhhbiAxXG4gICAgICBtaWRkbGUgPSBuZXcgRGVjaW1hbChNYXRoLmZsb29yKHZhbHVlKSk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHZhbHVlID09PSAwKSB7XG4gICAgbWlkZGxlID0gbmV3IERlY2ltYWwoTWF0aC5mbG9vcigodGlja0NvdW50IC0gMSkgLyAyKSk7XG4gIH0gZWxzZSBpZiAoIWFsbG93RGVjaW1hbHMpIHtcbiAgICBtaWRkbGUgPSBuZXcgRGVjaW1hbChNYXRoLmZsb29yKHZhbHVlKSk7XG4gIH1cblxuICB2YXIgbWlkZGxlSW5kZXggPSBNYXRoLmZsb29yKCh0aWNrQ291bnQgLSAxKSAvIDIpO1xuICB2YXIgZm4gPSBjb21wb3NlKG1hcChmdW5jdGlvbiAobikge1xuICAgIHJldHVybiBtaWRkbGUuYWRkKG5ldyBEZWNpbWFsKG4gLSBtaWRkbGVJbmRleCkubXVsKHN0ZXApKS50b051bWJlcigpO1xuICB9KSwgcmFuZ2UpO1xuICByZXR1cm4gZm4oMCwgdGlja0NvdW50KTtcbn1cbi8qKlxuICogQ2FsY3VsYXRlIHRoZSBzdGVwXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSAgbWluICAgICAgICAgICAgICBUaGUgbWluaW11bSB2YWx1ZSBvZiBhbiBpbnRlcnZhbFxuICogQHBhcmFtICB7TnVtYmVyfSAgbWF4ICAgICAgICAgICAgICBUaGUgbWF4aW11bSB2YWx1ZSBvZiBhbiBpbnRlcnZhbFxuICogQHBhcmFtICB7SW50ZWdlcn0gdGlja0NvdW50ICAgICAgICBUaGUgY291bnQgb2YgdGlja3NcbiAqIEBwYXJhbSAge0Jvb2xlYW59IGFsbG93RGVjaW1hbHMgICAgQWxsb3cgdGhlIHRpY2tzIHRvIGJlIGRlY2ltYWxzIG9yIG5vdFxuICogQHBhcmFtICB7TnVtYmVyfSAgY29ycmVjdGlvbkZhY3RvciBBIGNvcnJlY3Rpb24gZmFjdG9yXG4gKiBAcmV0dXJuIHtPYmplY3R9ICBUaGUgc3RlcCwgbWluaW11bSB2YWx1ZSBvZiB0aWNrcywgbWF4aW11bSB2YWx1ZSBvZiB0aWNrc1xuICovXG5cblxuZnVuY3Rpb24gY2FsY3VsYXRlU3RlcChtaW4sIG1heCwgdGlja0NvdW50LCBhbGxvd0RlY2ltYWxzKSB7XG4gIHZhciBjb3JyZWN0aW9uRmFjdG9yID0gYXJndW1lbnRzLmxlbmd0aCA+IDQgJiYgYXJndW1lbnRzWzRdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbNF0gOiAwO1xuXG4gIC8vIGRpcnR5IGhhY2sgKGZvciByZWNoYXJ0cycgdGVzdClcbiAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoKG1heCAtIG1pbikgLyAodGlja0NvdW50IC0gMSkpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0ZXA6IG5ldyBEZWNpbWFsKDApLFxuICAgICAgdGlja01pbjogbmV3IERlY2ltYWwoMCksXG4gICAgICB0aWNrTWF4OiBuZXcgRGVjaW1hbCgwKVxuICAgIH07XG4gIH0gLy8gVGhlIHN0ZXAgd2hpY2ggaXMgZWFzeSB0byB1bmRlcnN0YW5kIGJldHdlZW4gdHdvIHRpY2tzXG5cblxuICB2YXIgc3RlcCA9IGdldEZvcm1hdFN0ZXAobmV3IERlY2ltYWwobWF4KS5zdWIobWluKS5kaXYodGlja0NvdW50IC0gMSksIGFsbG93RGVjaW1hbHMsIGNvcnJlY3Rpb25GYWN0b3IpOyAvLyBBIG1lZGlhbCB2YWx1ZSBvZiB0aWNrc1xuXG4gIHZhciBtaWRkbGU7IC8vIFdoZW4gMCBpcyBpbnNpZGUgdGhlIGludGVydmFsLCAwIHNob3VsZCBiZSBhIHRpY2tcblxuICBpZiAobWluIDw9IDAgJiYgbWF4ID49IDApIHtcbiAgICBtaWRkbGUgPSBuZXcgRGVjaW1hbCgwKTtcbiAgfSBlbHNlIHtcbiAgICAvLyBjYWxjdWxhdGUgdGhlIG1pZGRsZSB2YWx1ZVxuICAgIG1pZGRsZSA9IG5ldyBEZWNpbWFsKG1pbikuYWRkKG1heCkuZGl2KDIpOyAvLyBtaW51cyBtb2R1bG8gdmFsdWVcblxuICAgIG1pZGRsZSA9IG1pZGRsZS5zdWIobmV3IERlY2ltYWwobWlkZGxlKS5tb2Qoc3RlcCkpO1xuICB9XG5cbiAgdmFyIGJlbG93Q291bnQgPSBNYXRoLmNlaWwobWlkZGxlLnN1YihtaW4pLmRpdihzdGVwKS50b051bWJlcigpKTtcbiAgdmFyIHVwQ291bnQgPSBNYXRoLmNlaWwobmV3IERlY2ltYWwobWF4KS5zdWIobWlkZGxlKS5kaXYoc3RlcCkudG9OdW1iZXIoKSk7XG4gIHZhciBzY2FsZUNvdW50ID0gYmVsb3dDb3VudCArIHVwQ291bnQgKyAxO1xuXG4gIGlmIChzY2FsZUNvdW50ID4gdGlja0NvdW50KSB7XG4gICAgLy8gV2hlbiBtb3JlIHRpY2tzIG5lZWQgdG8gY292ZXIgdGhlIGludGVydmFsLCBzdGVwIHNob3VsZCBiZSBiaWdnZXIuXG4gICAgcmV0dXJuIGNhbGN1bGF0ZVN0ZXAobWluLCBtYXgsIHRpY2tDb3VudCwgYWxsb3dEZWNpbWFscywgY29ycmVjdGlvbkZhY3RvciArIDEpO1xuICB9XG5cbiAgaWYgKHNjYWxlQ291bnQgPCB0aWNrQ291bnQpIHtcbiAgICAvLyBXaGVuIGxlc3MgdGlja3MgY2FuIGNvdmVyIHRoZSBpbnRlcnZhbCwgd2Ugc2hvdWxkIGFkZCBzb21lIGFkZGl0aW9uYWwgdGlja3NcbiAgICB1cENvdW50ID0gbWF4ID4gMCA/IHVwQ291bnQgKyAodGlja0NvdW50IC0gc2NhbGVDb3VudCkgOiB1cENvdW50O1xuICAgIGJlbG93Q291bnQgPSBtYXggPiAwID8gYmVsb3dDb3VudCA6IGJlbG93Q291bnQgKyAodGlja0NvdW50IC0gc2NhbGVDb3VudCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHN0ZXA6IHN0ZXAsXG4gICAgdGlja01pbjogbWlkZGxlLnN1YihuZXcgRGVjaW1hbChiZWxvd0NvdW50KS5tdWwoc3RlcCkpLFxuICAgIHRpY2tNYXg6IG1pZGRsZS5hZGQobmV3IERlY2ltYWwodXBDb3VudCkubXVsKHN0ZXApKVxuICB9O1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHRpY2tzIG9mIGFuIGludGVydmFsLCB0aGUgY291bnQgb2YgdGlja3Mgd2lsbCBiZSBndXJhcmFudGVlZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gIG1pbiwgbWF4ICAgICAgbWluOiBUaGUgbWluaW11bSB2YWx1ZSwgbWF4OiBUaGUgbWF4aW11bSB2YWx1ZVxuICogQHBhcmFtICB7SW50ZWdlcn0gdGlja0NvdW50ICAgICBUaGUgY291bnQgb2YgdGlja3NcbiAqIEBwYXJhbSAge0Jvb2xlYW59IGFsbG93RGVjaW1hbHMgQWxsb3cgdGhlIHRpY2tzIHRvIGJlIGRlY2ltYWxzIG9yIG5vdFxuICogQHJldHVybiB7QXJyYXl9ICAgdGlja3NcbiAqL1xuXG5cbmZ1bmN0aW9uIGdldE5pY2VUaWNrVmFsdWVzRm4oX3JlZjMpIHtcbiAgdmFyIF9yZWY0ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjMsIDIpLFxuICAgICAgbWluID0gX3JlZjRbMF0sXG4gICAgICBtYXggPSBfcmVmNFsxXTtcblxuICB2YXIgdGlja0NvdW50ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiA2O1xuICB2YXIgYWxsb3dEZWNpbWFscyA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogdHJ1ZTtcbiAgLy8gTW9yZSB0aGFuIHR3byB0aWNrcyBzaG91bGQgYmUgcmV0dXJuXG4gIHZhciBjb3VudCA9IE1hdGgubWF4KHRpY2tDb3VudCwgMik7XG5cbiAgdmFyIF9nZXRWYWxpZEludGVydmFsID0gZ2V0VmFsaWRJbnRlcnZhbChbbWluLCBtYXhdKSxcbiAgICAgIF9nZXRWYWxpZEludGVydmFsMiA9IF9zbGljZWRUb0FycmF5KF9nZXRWYWxpZEludGVydmFsLCAyKSxcbiAgICAgIGNvcm1pbiA9IF9nZXRWYWxpZEludGVydmFsMlswXSxcbiAgICAgIGNvcm1heCA9IF9nZXRWYWxpZEludGVydmFsMlsxXTtcblxuICBpZiAoY29ybWluID09PSAtSW5maW5pdHkgfHwgY29ybWF4ID09PSBJbmZpbml0eSkge1xuICAgIHZhciBfdmFsdWVzID0gY29ybWF4ID09PSBJbmZpbml0eSA/IFtjb3JtaW5dLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocmFuZ2UoMCwgdGlja0NvdW50IC0gMSkubWFwKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBJbmZpbml0eTtcbiAgICB9KSkpIDogW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyYW5nZSgwLCB0aWNrQ291bnQgLSAxKS5tYXAoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIC1JbmZpbml0eTtcbiAgICB9KSksIFtjb3JtYXhdKTtcblxuICAgIHJldHVybiBtaW4gPiBtYXggPyByZXZlcnNlKF92YWx1ZXMpIDogX3ZhbHVlcztcbiAgfVxuXG4gIGlmIChjb3JtaW4gPT09IGNvcm1heCkge1xuICAgIHJldHVybiBnZXRUaWNrT2ZTaW5nbGVWYWx1ZShjb3JtaW4sIHRpY2tDb3VudCwgYWxsb3dEZWNpbWFscyk7XG4gIH0gLy8gR2V0IHRoZSBzdGVwIGJldHdlZW4gdHdvIHRpY2tzXG5cblxuICB2YXIgX2NhbGN1bGF0ZVN0ZXAgPSBjYWxjdWxhdGVTdGVwKGNvcm1pbiwgY29ybWF4LCBjb3VudCwgYWxsb3dEZWNpbWFscyksXG4gICAgICBzdGVwID0gX2NhbGN1bGF0ZVN0ZXAuc3RlcCxcbiAgICAgIHRpY2tNaW4gPSBfY2FsY3VsYXRlU3RlcC50aWNrTWluLFxuICAgICAgdGlja01heCA9IF9jYWxjdWxhdGVTdGVwLnRpY2tNYXg7XG5cbiAgdmFyIHZhbHVlcyA9IEFyaXRobWV0aWMucmFuZ2VTdGVwKHRpY2tNaW4sIHRpY2tNYXguYWRkKG5ldyBEZWNpbWFsKDAuMSkubXVsKHN0ZXApKSwgc3RlcCk7XG4gIHJldHVybiBtaW4gPiBtYXggPyByZXZlcnNlKHZhbHVlcykgOiB2YWx1ZXM7XG59XG4vKipcbiAqIENhbGN1bGF0ZSB0aGUgdGlja3Mgb2YgYW4gaW50ZXJ2YWwsIHRoZSBjb3VudCBvZiB0aWNrcyB3b24ndCBiZSBndXJhcmFudGVlZFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gIG1pbiwgbWF4ICAgICAgbWluOiBUaGUgbWluaW11bSB2YWx1ZSwgbWF4OiBUaGUgbWF4aW11bSB2YWx1ZVxuICogQHBhcmFtICB7SW50ZWdlcn0gdGlja0NvdW50ICAgICBUaGUgY291bnQgb2YgdGlja3NcbiAqIEBwYXJhbSAge0Jvb2xlYW59IGFsbG93RGVjaW1hbHMgQWxsb3cgdGhlIHRpY2tzIHRvIGJlIGRlY2ltYWxzIG9yIG5vdFxuICogQHJldHVybiB7QXJyYXl9ICAgdGlja3NcbiAqL1xuXG5cbmZ1bmN0aW9uIGdldFRpY2tWYWx1ZXNGbihfcmVmNSkge1xuICB2YXIgX3JlZjYgPSBfc2xpY2VkVG9BcnJheShfcmVmNSwgMiksXG4gICAgICBtaW4gPSBfcmVmNlswXSxcbiAgICAgIG1heCA9IF9yZWY2WzFdO1xuXG4gIHZhciB0aWNrQ291bnQgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IDY7XG4gIHZhciBhbGxvd0RlY2ltYWxzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB0cnVlO1xuICAvLyBNb3JlIHRoYW4gdHdvIHRpY2tzIHNob3VsZCBiZSByZXR1cm5cbiAgdmFyIGNvdW50ID0gTWF0aC5tYXgodGlja0NvdW50LCAyKTtcblxuICB2YXIgX2dldFZhbGlkSW50ZXJ2YWwzID0gZ2V0VmFsaWRJbnRlcnZhbChbbWluLCBtYXhdKSxcbiAgICAgIF9nZXRWYWxpZEludGVydmFsNCA9IF9zbGljZWRUb0FycmF5KF9nZXRWYWxpZEludGVydmFsMywgMiksXG4gICAgICBjb3JtaW4gPSBfZ2V0VmFsaWRJbnRlcnZhbDRbMF0sXG4gICAgICBjb3JtYXggPSBfZ2V0VmFsaWRJbnRlcnZhbDRbMV07XG5cbiAgaWYgKGNvcm1pbiA9PT0gLUluZmluaXR5IHx8IGNvcm1heCA9PT0gSW5maW5pdHkpIHtcbiAgICByZXR1cm4gW21pbiwgbWF4XTtcbiAgfVxuXG4gIGlmIChjb3JtaW4gPT09IGNvcm1heCkge1xuICAgIHJldHVybiBnZXRUaWNrT2ZTaW5nbGVWYWx1ZShjb3JtaW4sIHRpY2tDb3VudCwgYWxsb3dEZWNpbWFscyk7XG4gIH1cblxuICB2YXIgc3RlcCA9IGdldEZvcm1hdFN0ZXAobmV3IERlY2ltYWwoY29ybWF4KS5zdWIoY29ybWluKS5kaXYoY291bnQgLSAxKSwgYWxsb3dEZWNpbWFscywgMCk7XG4gIHZhciBmbiA9IGNvbXBvc2UobWFwKGZ1bmN0aW9uIChuKSB7XG4gICAgcmV0dXJuIG5ldyBEZWNpbWFsKGNvcm1pbikuYWRkKG5ldyBEZWNpbWFsKG4pLm11bChzdGVwKSkudG9OdW1iZXIoKTtcbiAgfSksIHJhbmdlKTtcbiAgdmFyIHZhbHVlcyA9IGZuKDAsIGNvdW50KS5maWx0ZXIoZnVuY3Rpb24gKGVudHJ5KSB7XG4gICAgcmV0dXJuIGVudHJ5ID49IGNvcm1pbiAmJiBlbnRyeSA8PSBjb3JtYXg7XG4gIH0pO1xuICByZXR1cm4gbWluID4gbWF4ID8gcmV2ZXJzZSh2YWx1ZXMpIDogdmFsdWVzO1xufVxuLyoqXG4gKiBDYWxjdWxhdGUgdGhlIHRpY2tzIG9mIGFuIGludGVydmFsLCB0aGUgY291bnQgb2YgdGlja3Mgd29uJ3QgYmUgZ3VyYXJhbnRlZWQsXG4gKiBidXQgdGhlIGRvbWFpbiB3aWxsIGJlIGd1YXJhbnRlZWRcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9ICBtaW4sIG1heCAgICAgIG1pbjogVGhlIG1pbmltdW0gdmFsdWUsIG1heDogVGhlIG1heGltdW0gdmFsdWVcbiAqIEBwYXJhbSAge0ludGVnZXJ9IHRpY2tDb3VudCAgICAgVGhlIGNvdW50IG9mIHRpY2tzXG4gKiBAcGFyYW0gIHtCb29sZWFufSBhbGxvd0RlY2ltYWxzIEFsbG93IHRoZSB0aWNrcyB0byBiZSBkZWNpbWFscyBvciBub3RcbiAqIEByZXR1cm4ge0FycmF5fSAgIHRpY2tzXG4gKi9cblxuXG5mdW5jdGlvbiBnZXRUaWNrVmFsdWVzRml4ZWREb21haW5GbihfcmVmNywgdGlja0NvdW50KSB7XG4gIHZhciBfcmVmOCA9IF9zbGljZWRUb0FycmF5KF9yZWY3LCAyKSxcbiAgICAgIG1pbiA9IF9yZWY4WzBdLFxuICAgICAgbWF4ID0gX3JlZjhbMV07XG5cbiAgdmFyIGFsbG93RGVjaW1hbHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHRydWU7XG5cbiAgLy8gTW9yZSB0aGFuIHR3byB0aWNrcyBzaG91bGQgYmUgcmV0dXJuXG4gIHZhciBfZ2V0VmFsaWRJbnRlcnZhbDUgPSBnZXRWYWxpZEludGVydmFsKFttaW4sIG1heF0pLFxuICAgICAgX2dldFZhbGlkSW50ZXJ2YWw2ID0gX3NsaWNlZFRvQXJyYXkoX2dldFZhbGlkSW50ZXJ2YWw1LCAyKSxcbiAgICAgIGNvcm1pbiA9IF9nZXRWYWxpZEludGVydmFsNlswXSxcbiAgICAgIGNvcm1heCA9IF9nZXRWYWxpZEludGVydmFsNlsxXTtcblxuICBpZiAoY29ybWluID09PSAtSW5maW5pdHkgfHwgY29ybWF4ID09PSBJbmZpbml0eSkge1xuICAgIHJldHVybiBbbWluLCBtYXhdO1xuICB9XG5cbiAgaWYgKGNvcm1pbiA9PT0gY29ybWF4KSB7XG4gICAgcmV0dXJuIFtjb3JtaW5dO1xuICB9XG5cbiAgdmFyIGNvdW50ID0gTWF0aC5tYXgodGlja0NvdW50LCAyKTtcbiAgdmFyIHN0ZXAgPSBnZXRGb3JtYXRTdGVwKG5ldyBEZWNpbWFsKGNvcm1heCkuc3ViKGNvcm1pbikuZGl2KGNvdW50IC0gMSksIGFsbG93RGVjaW1hbHMsIDApO1xuICB2YXIgdmFsdWVzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShBcml0aG1ldGljLnJhbmdlU3RlcChuZXcgRGVjaW1hbChjb3JtaW4pLCBuZXcgRGVjaW1hbChjb3JtYXgpLnN1YihuZXcgRGVjaW1hbCgwLjk5KS5tdWwoc3RlcCkpLCBzdGVwKSksIFtjb3JtYXhdKTtcbiAgcmV0dXJuIG1pbiA+IG1heCA/IHJldmVyc2UodmFsdWVzKSA6IHZhbHVlcztcbn1cblxuZXhwb3J0IHZhciBnZXROaWNlVGlja1ZhbHVlcyA9IG1lbW9pemUoZ2V0TmljZVRpY2tWYWx1ZXNGbik7XG5leHBvcnQgdmFyIGdldFRpY2tWYWx1ZXMgPSBtZW1vaXplKGdldFRpY2tWYWx1ZXNGbik7XG5leHBvcnQgdmFyIGdldFRpY2tWYWx1ZXNGaXhlZERvbWFpbiA9IG1lbW9pemUoZ2V0VGlja1ZhbHVlc0ZpeGVkRG9tYWluRm4pOyJdLCJuYW1lcyI6WyJfdG9Db25zdW1hYmxlQXJyYXkiLCJhcnIiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJfaXRlcmFibGVUb0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlU3ByZWFkIiwiVHlwZUVycm9yIiwiaXRlciIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiT2JqZWN0IiwiQXJyYXkiLCJmcm9tIiwiaXNBcnJheSIsIl9hcnJheUxpa2VUb0FycmF5IiwiX3NsaWNlZFRvQXJyYXkiLCJpIiwiX2FycmF5V2l0aEhvbGVzIiwiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiX25vbkl0ZXJhYmxlUmVzdCIsIm8iLCJtaW5MZW4iLCJuIiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJ0ZXN0IiwibGVuIiwibGVuZ3RoIiwiYXJyMiIsIl9hcnIiLCJfbiIsIl9kIiwiX2UiLCJ1bmRlZmluZWQiLCJfaSIsIl9zIiwibmV4dCIsImRvbmUiLCJwdXNoIiwidmFsdWUiLCJlcnIiLCJEZWNpbWFsIiwiY29tcG9zZSIsInJhbmdlIiwibWVtb2l6ZSIsIm1hcCIsInJldmVyc2UiLCJBcml0aG1ldGljIiwiZ2V0VmFsaWRJbnRlcnZhbCIsIl9yZWYiLCJfcmVmMiIsIm1pbiIsIm1heCIsInZhbGlkTWluIiwidmFsaWRNYXgiLCJnZXRGb3JtYXRTdGVwIiwicm91Z2hTdGVwIiwiYWxsb3dEZWNpbWFscyIsImNvcnJlY3Rpb25GYWN0b3IiLCJsdGUiLCJkaWdpdENvdW50IiwiZ2V0RGlnaXRDb3VudCIsInRvTnVtYmVyIiwiZGlnaXRDb3VudFZhbHVlIiwicG93Iiwic3RlcFJhdGlvIiwiZGl2Iiwic3RlcFJhdGlvU2NhbGUiLCJhbWVuZFN0ZXBSYXRpbyIsIk1hdGgiLCJjZWlsIiwiYWRkIiwibXVsIiwiZm9ybWF0U3RlcCIsImdldFRpY2tPZlNpbmdsZVZhbHVlIiwidGlja0NvdW50Iiwic3RlcCIsIm1pZGRsZSIsImlzaW50IiwiYWJzVmFsIiwiYWJzIiwiZmxvb3IiLCJtaWRkbGVJbmRleCIsImZuIiwiY2FsY3VsYXRlU3RlcCIsImFyZ3VtZW50cyIsIk51bWJlciIsImlzRmluaXRlIiwidGlja01pbiIsInRpY2tNYXgiLCJzdWIiLCJtb2QiLCJiZWxvd0NvdW50IiwidXBDb3VudCIsInNjYWxlQ291bnQiLCJnZXROaWNlVGlja1ZhbHVlc0ZuIiwiX3JlZjMiLCJfcmVmNCIsImNvdW50IiwiX2dldFZhbGlkSW50ZXJ2YWwiLCJfZ2V0VmFsaWRJbnRlcnZhbDIiLCJjb3JtaW4iLCJjb3JtYXgiLCJJbmZpbml0eSIsIl92YWx1ZXMiLCJjb25jYXQiLCJfY2FsY3VsYXRlU3RlcCIsInZhbHVlcyIsInJhbmdlU3RlcCIsImdldFRpY2tWYWx1ZXNGbiIsIl9yZWY1IiwiX3JlZjYiLCJfZ2V0VmFsaWRJbnRlcnZhbDMiLCJfZ2V0VmFsaWRJbnRlcnZhbDQiLCJmaWx0ZXIiLCJlbnRyeSIsImdldFRpY2tWYWx1ZXNGaXhlZERvbWFpbkZuIiwiX3JlZjciLCJfcmVmOCIsIl9nZXRWYWxpZEludGVydmFsNSIsIl9nZXRWYWxpZEludGVydmFsNiIsImdldE5pY2VUaWNrVmFsdWVzIiwiZ2V0VGlja1ZhbHVlcyIsImdldFRpY2tWYWx1ZXNGaXhlZERvbWFpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js":
/*!**********************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNiceTickValues: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getNiceTickValues),\n/* harmony export */   getTickValues: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getTickValues),\n/* harmony export */   getTickValuesFixedDomain: () => (/* reexport safe */ _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__.getTickValuesFixedDomain)\n/* harmony export */ });\n/* harmony import */ var _getNiceTickValues__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNiceTickValues */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/getNiceTickValues.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhd2EtZG9jcy8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHMtc2NhbGVAMC40LjUvbm9kZV9tb2R1bGVzL3JlY2hhcnRzLXNjYWxlL2VzNi9pbmRleC5qcz9iNTRjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGdldFRpY2tWYWx1ZXMsIGdldE5pY2VUaWNrVmFsdWVzLCBnZXRUaWNrVmFsdWVzRml4ZWREb21haW4gfSBmcm9tICcuL2dldE5pY2VUaWNrVmFsdWVzJzsiXSwibmFtZXMiOlsiZ2V0VGlja1ZhbHVlcyIsImdldE5pY2VUaWNrVmFsdWVzIiwiZ2V0VGlja1ZhbHVlc0ZpeGVkRG9tYWluIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js":
/*!********************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var decimal_js_light__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decimal.js-light */ \"(ssr)/../../node_modules/.pnpm/decimal.js-light@2.5.1/node_modules/decimal.js-light/decimal.mjs\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\");\n/**\n * @fileOverview 一些公用的运算方法\n * @author xile611\n * @date 2015-09-17\n */ \n\n/**\n * 获取数值的位数\n * 其中绝对值属于区间[0.1, 1)， 得到的值为0\n * 绝对值属于区间[0.01, 0.1)，得到的位数为 -1\n * 绝对值属于区间[0.001, 0.01)，得到的位数为 -2\n *\n * @param  {Number} value 数值\n * @return {Integer} 位数\n */ function getDigitCount(value) {\n    var result;\n    if (value === 0) {\n        result = 1;\n    } else {\n        result = Math.floor(new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](value).abs().log(10).toNumber()) + 1;\n    }\n    return result;\n}\n/**\n * 按照固定的步长获取[start, end)这个区间的数据\n * 并且需要处理js计算精度的问题\n *\n * @param  {Decimal} start 起点\n * @param  {Decimal} end   终点，不包含该值\n * @param  {Decimal} step  步长\n * @return {Array}         若干数值\n */ function rangeStep(start, end, step) {\n    var num = new decimal_js_light__WEBPACK_IMPORTED_MODULE_0__[\"default\"](start);\n    var i = 0;\n    var result = []; // magic number to prevent infinite loop\n    while(num.lt(end) && i < 100000){\n        result.push(num.toNumber());\n        num = num.add(step);\n        i++;\n    }\n    return result;\n}\n/**\n * 对数值进行线性插值\n *\n * @param  {Number} a  定义域的极点\n * @param  {Number} b  定义域的极点\n * @param  {Number} t  [0, 1]内的某个值\n * @return {Number}    定义域内的某个值\n */ var interpolateNumber = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, t) {\n    var newA = +a;\n    var newB = +b;\n    return newA + t * (newB - newA);\n});\n/**\n * 线性插值的逆运算\n *\n * @param  {Number} a 定义域的极点\n * @param  {Number} b 定义域的极点\n * @param  {Number} x 可以认为是插值后的一个输出值\n * @return {Number}   当x在 a ~ b这个范围内时，返回值属于[0, 1]\n */ var uninterpolateNumber = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, x) {\n    var diff = b - +a;\n    diff = diff || Infinity;\n    return (x - a) / diff;\n});\n/**\n * 线性插值的逆运算，并且有截断的操作\n *\n * @param  {Number} a 定义域的极点\n * @param  {Number} b 定义域的极点\n * @param  {Number} x 可以认为是插值后的一个输出值\n * @return {Number}   当x在 a ~ b这个区间内时，返回值属于[0, 1]，\n * 当x不在 a ~ b这个区间时，会截断到 a ~ b 这个区间\n */ var uninterpolateTruncation = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.curry)(function(a, b, x) {\n    var diff = b - +a;\n    diff = diff || Infinity;\n    return Math.max(0, Math.min(1, (x - a) / diff));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    rangeStep: rangeStep,\n    getDigitCount: getDigitCount,\n    interpolateNumber: interpolateNumber,\n    uninterpolateNumber: uninterpolateNumber,\n    uninterpolateTruncation: uninterpolateTruncation\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlY2hhcnRzLXNjYWxlQDAuNC41L25vZGVfbW9kdWxlcy9yZWNoYXJ0cy1zY2FsZS9lczYvdXRpbC9hcml0aG1ldGljLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0NBSUMsR0FDc0M7QUFDUDtBQUNoQzs7Ozs7Ozs7Q0FRQyxHQUVELFNBQVNFLGNBQWNDLEtBQUs7SUFDMUIsSUFBSUM7SUFFSixJQUFJRCxVQUFVLEdBQUc7UUFDZkMsU0FBUztJQUNYLE9BQU87UUFDTEEsU0FBU0MsS0FBS0MsS0FBSyxDQUFDLElBQUlOLHdEQUFPQSxDQUFDRyxPQUFPSSxHQUFHLEdBQUdDLEdBQUcsQ0FBQyxJQUFJQyxRQUFRLE1BQU07SUFDckU7SUFFQSxPQUFPTDtBQUNUO0FBQ0E7Ozs7Ozs7O0NBUUMsR0FHRCxTQUFTTSxVQUFVQyxLQUFLLEVBQUVDLEdBQUcsRUFBRUMsSUFBSTtJQUNqQyxJQUFJQyxNQUFNLElBQUlkLHdEQUFPQSxDQUFDVztJQUN0QixJQUFJSSxJQUFJO0lBQ1IsSUFBSVgsU0FBUyxFQUFFLEVBQUUsd0NBQXdDO0lBRXpELE1BQU9VLElBQUlFLEVBQUUsQ0FBQ0osUUFBUUcsSUFBSSxPQUFRO1FBQ2hDWCxPQUFPYSxJQUFJLENBQUNILElBQUlMLFFBQVE7UUFDeEJLLE1BQU1BLElBQUlJLEdBQUcsQ0FBQ0w7UUFDZEU7SUFDRjtJQUVBLE9BQU9YO0FBQ1Q7QUFDQTs7Ozs7OztDQU9DLEdBR0QsSUFBSWUsb0JBQW9CbEIsNkNBQUtBLENBQUMsU0FBVW1CLENBQUMsRUFBRUMsQ0FBQyxFQUFFQyxDQUFDO0lBQzdDLElBQUlDLE9BQU8sQ0FBQ0g7SUFDWixJQUFJSSxPQUFPLENBQUNIO0lBQ1osT0FBT0UsT0FBT0QsSUFBS0UsQ0FBQUEsT0FBT0QsSUFBRztBQUMvQjtBQUNBOzs7Ozs7O0NBT0MsR0FFRCxJQUFJRSxzQkFBc0J4Qiw2Q0FBS0EsQ0FBQyxTQUFVbUIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVLLENBQUM7SUFDL0MsSUFBSUMsT0FBT04sSUFBSSxDQUFDRDtJQUNoQk8sT0FBT0EsUUFBUUM7SUFDZixPQUFPLENBQUNGLElBQUlOLENBQUFBLElBQUtPO0FBQ25CO0FBQ0E7Ozs7Ozs7O0NBUUMsR0FFRCxJQUFJRSwwQkFBMEI1Qiw2Q0FBS0EsQ0FBQyxTQUFVbUIsQ0FBQyxFQUFFQyxDQUFDLEVBQUVLLENBQUM7SUFDbkQsSUFBSUMsT0FBT04sSUFBSSxDQUFDRDtJQUNoQk8sT0FBT0EsUUFBUUM7SUFDZixPQUFPdkIsS0FBS3lCLEdBQUcsQ0FBQyxHQUFHekIsS0FBSzBCLEdBQUcsQ0FBQyxHQUFHLENBQUNMLElBQUlOLENBQUFBLElBQUtPO0FBQzNDO0FBQ0EsaUVBQWU7SUFDYmpCLFdBQVdBO0lBQ1hSLGVBQWVBO0lBQ2ZpQixtQkFBbUJBO0lBQ25CTSxxQkFBcUJBO0lBQ3JCSSx5QkFBeUJBO0FBQzNCLENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hhd2EtZG9jcy8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vcmVjaGFydHMtc2NhbGVAMC40LjUvbm9kZV9tb2R1bGVzL3JlY2hhcnRzLXNjYWxlL2VzNi91dGlsL2FyaXRobWV0aWMuanM/MzdjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlT3ZlcnZpZXcg5LiA5Lqb5YWs55So55qE6L+Q566X5pa55rOVXG4gKiBAYXV0aG9yIHhpbGU2MTFcbiAqIEBkYXRlIDIwMTUtMDktMTdcbiAqL1xuaW1wb3J0IERlY2ltYWwgZnJvbSAnZGVjaW1hbC5qcy1saWdodCc7XG5pbXBvcnQgeyBjdXJyeSB9IGZyb20gJy4vdXRpbHMnO1xuLyoqXG4gKiDojrflj5bmlbDlgLznmoTkvY3mlbBcbiAqIOWFtuS4ree7neWvueWAvOWxnuS6juWMuumXtFswLjEsIDEp77yMIOW+l+WIsOeahOWAvOS4ujBcbiAqIOe7neWvueWAvOWxnuS6juWMuumXtFswLjAxLCAwLjEp77yM5b6X5Yiw55qE5L2N5pWw5Li6IC0xXG4gKiDnu53lr7nlgLzlsZ7kuo7ljLrpl7RbMC4wMDEsIDAuMDEp77yM5b6X5Yiw55qE5L2N5pWw5Li6IC0yXG4gKlxuICogQHBhcmFtICB7TnVtYmVyfSB2YWx1ZSDmlbDlgLxcbiAqIEByZXR1cm4ge0ludGVnZXJ9IOS9jeaVsFxuICovXG5cbmZ1bmN0aW9uIGdldERpZ2l0Q291bnQodmFsdWUpIHtcbiAgdmFyIHJlc3VsdDtcblxuICBpZiAodmFsdWUgPT09IDApIHtcbiAgICByZXN1bHQgPSAxO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9IE1hdGguZmxvb3IobmV3IERlY2ltYWwodmFsdWUpLmFicygpLmxvZygxMCkudG9OdW1iZXIoKSkgKyAxO1xuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICog5oyJ54Wn5Zu65a6a55qE5q2l6ZW/6I635Y+WW3N0YXJ0LCBlbmQp6L+Z5Liq5Yy66Ze055qE5pWw5o2uXG4gKiDlubbkuJTpnIDopoHlpITnkIZqc+iuoeeul+eyvuW6pueahOmXrumimFxuICpcbiAqIEBwYXJhbSAge0RlY2ltYWx9IHN0YXJ0IOi1t+eCuVxuICogQHBhcmFtICB7RGVjaW1hbH0gZW5kICAg57uI54K577yM5LiN5YyF5ZCr6K+l5YC8XG4gKiBAcGFyYW0gIHtEZWNpbWFsfSBzdGVwICDmraXplb9cbiAqIEByZXR1cm4ge0FycmF5fSAgICAgICAgIOiLpeW5suaVsOWAvFxuICovXG5cblxuZnVuY3Rpb24gcmFuZ2VTdGVwKHN0YXJ0LCBlbmQsIHN0ZXApIHtcbiAgdmFyIG51bSA9IG5ldyBEZWNpbWFsKHN0YXJ0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107IC8vIG1hZ2ljIG51bWJlciB0byBwcmV2ZW50IGluZmluaXRlIGxvb3BcblxuICB3aGlsZSAobnVtLmx0KGVuZCkgJiYgaSA8IDEwMDAwMCkge1xuICAgIHJlc3VsdC5wdXNoKG51bS50b051bWJlcigpKTtcbiAgICBudW0gPSBudW0uYWRkKHN0ZXApO1xuICAgIGkrKztcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIOWvueaVsOWAvOi/m+ihjOe6v+aAp+aPkuWAvFxuICpcbiAqIEBwYXJhbSAge051bWJlcn0gYSAg5a6a5LmJ5Z+f55qE5p6B54K5XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGIgIOWumuS5ieWfn+eahOaegeeCuVxuICogQHBhcmFtICB7TnVtYmVyfSB0ICBbMCwgMV3lhoXnmoTmn5DkuKrlgLxcbiAqIEByZXR1cm4ge051bWJlcn0gICAg5a6a5LmJ5Z+f5YaF55qE5p+Q5Liq5YC8XG4gKi9cblxuXG52YXIgaW50ZXJwb2xhdGVOdW1iZXIgPSBjdXJyeShmdW5jdGlvbiAoYSwgYiwgdCkge1xuICB2YXIgbmV3QSA9ICthO1xuICB2YXIgbmV3QiA9ICtiO1xuICByZXR1cm4gbmV3QSArIHQgKiAobmV3QiAtIG5ld0EpO1xufSk7XG4vKipcbiAqIOe6v+aAp+aPkuWAvOeahOmAhui/kOeul1xuICpcbiAqIEBwYXJhbSAge051bWJlcn0gYSDlrprkuYnln5/nmoTmnoHngrlcbiAqIEBwYXJhbSAge051bWJlcn0gYiDlrprkuYnln5/nmoTmnoHngrlcbiAqIEBwYXJhbSAge051bWJlcn0geCDlj6/ku6XorqTkuLrmmK/mj5LlgLzlkI7nmoTkuIDkuKrovpPlh7rlgLxcbiAqIEByZXR1cm4ge051bWJlcn0gICDlvZN45ZyoIGEgfiBi6L+Z5Liq6IyD5Zu05YaF5pe277yM6L+U5Zue5YC85bGe5LqOWzAsIDFdXG4gKi9cblxudmFyIHVuaW50ZXJwb2xhdGVOdW1iZXIgPSBjdXJyeShmdW5jdGlvbiAoYSwgYiwgeCkge1xuICB2YXIgZGlmZiA9IGIgLSArYTtcbiAgZGlmZiA9IGRpZmYgfHwgSW5maW5pdHk7XG4gIHJldHVybiAoeCAtIGEpIC8gZGlmZjtcbn0pO1xuLyoqXG4gKiDnur/mgKfmj5LlgLznmoTpgIbov5DnrpfvvIzlubbkuJTmnInmiKrmlq3nmoTmk43kvZxcbiAqXG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGEg5a6a5LmJ5Z+f55qE5p6B54K5XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IGIg5a6a5LmJ5Z+f55qE5p6B54K5XG4gKiBAcGFyYW0gIHtOdW1iZXJ9IHgg5Y+v5Lul6K6k5Li65piv5o+S5YC85ZCO55qE5LiA5Liq6L6T5Ye65YC8XG4gKiBAcmV0dXJuIHtOdW1iZXJ9ICAg5b2TeOWcqCBhIH4gYui/meS4quWMuumXtOWGheaXtu+8jOi/lOWbnuWAvOWxnuS6jlswLCAxXe+8jFxuICog5b2TeOS4jeWcqCBhIH4gYui/meS4quWMuumXtOaXtu+8jOS8muaIquaWreWIsCBhIH4gYiDov5nkuKrljLrpl7RcbiAqL1xuXG52YXIgdW5pbnRlcnBvbGF0ZVRydW5jYXRpb24gPSBjdXJyeShmdW5jdGlvbiAoYSwgYiwgeCkge1xuICB2YXIgZGlmZiA9IGIgLSArYTtcbiAgZGlmZiA9IGRpZmYgfHwgSW5maW5pdHk7XG4gIHJldHVybiBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAoeCAtIGEpIC8gZGlmZikpO1xufSk7XG5leHBvcnQgZGVmYXVsdCB7XG4gIHJhbmdlU3RlcDogcmFuZ2VTdGVwLFxuICBnZXREaWdpdENvdW50OiBnZXREaWdpdENvdW50LFxuICBpbnRlcnBvbGF0ZU51bWJlcjogaW50ZXJwb2xhdGVOdW1iZXIsXG4gIHVuaW50ZXJwb2xhdGVOdW1iZXI6IHVuaW50ZXJwb2xhdGVOdW1iZXIsXG4gIHVuaW50ZXJwb2xhdGVUcnVuY2F0aW9uOiB1bmludGVycG9sYXRlVHJ1bmNhdGlvblxufTsiXSwibmFtZXMiOlsiRGVjaW1hbCIsImN1cnJ5IiwiZ2V0RGlnaXRDb3VudCIsInZhbHVlIiwicmVzdWx0IiwiTWF0aCIsImZsb29yIiwiYWJzIiwibG9nIiwidG9OdW1iZXIiLCJyYW5nZVN0ZXAiLCJzdGFydCIsImVuZCIsInN0ZXAiLCJudW0iLCJpIiwibHQiLCJwdXNoIiwiYWRkIiwiaW50ZXJwb2xhdGVOdW1iZXIiLCJhIiwiYiIsInQiLCJuZXdBIiwibmV3QiIsInVuaW50ZXJwb2xhdGVOdW1iZXIiLCJ4IiwiZGlmZiIsIkluZmluaXR5IiwidW5pbnRlcnBvbGF0ZVRydW5jYXRpb24iLCJtYXgiLCJtaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/arithmetic.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js":
/*!***************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLACE_HOLDER: () => (/* binding */ PLACE_HOLDER),\n/* harmony export */   compose: () => (/* binding */ compose),\n/* harmony export */   curry: () => (/* binding */ curry),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   memoize: () => (/* binding */ memoize),\n/* harmony export */   range: () => (/* binding */ range),\n/* harmony export */   reverse: () => (/* binding */ reverse)\n/* harmony export */ });\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++){\n        arr2[i] = arr[i];\n    }\n    return arr2;\n}\nvar identity = function identity(i) {\n    return i;\n};\nvar PLACE_HOLDER = {\n    \"@@functional/placeholder\": true\n};\nvar isPlaceHolder = function isPlaceHolder(val) {\n    return val === PLACE_HOLDER;\n};\nvar curry0 = function curry0(fn) {\n    return function _curried() {\n        if (arguments.length === 0 || arguments.length === 1 && isPlaceHolder(arguments.length <= 0 ? undefined : arguments[0])) {\n            return _curried;\n        }\n        return fn.apply(void 0, arguments);\n    };\n};\nvar curryN = function curryN(n, fn) {\n    if (n === 1) {\n        return fn;\n    }\n    return curry0(function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var argsLength = args.filter(function(arg) {\n            return arg !== PLACE_HOLDER;\n        }).length;\n        if (argsLength >= n) {\n            return fn.apply(void 0, args);\n        }\n        return curryN(n - argsLength, curry0(function() {\n            for(var _len2 = arguments.length, restArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                restArgs[_key2] = arguments[_key2];\n            }\n            var newArgs = args.map(function(arg) {\n                return isPlaceHolder(arg) ? restArgs.shift() : arg;\n            });\n            return fn.apply(void 0, _toConsumableArray(newArgs).concat(restArgs));\n        }));\n    });\n};\nvar curry = function curry(fn) {\n    return curryN(fn.length, fn);\n};\nvar range = function range(begin, end) {\n    var arr = [];\n    for(var i = begin; i < end; ++i){\n        arr[i - begin] = i;\n    }\n    return arr;\n};\nvar map = curry(function(fn, arr) {\n    if (Array.isArray(arr)) {\n        return arr.map(fn);\n    }\n    return Object.keys(arr).map(function(key) {\n        return arr[key];\n    }).map(fn);\n});\nvar compose = function compose() {\n    for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n        args[_key3] = arguments[_key3];\n    }\n    if (!args.length) {\n        return identity;\n    }\n    var fns = args.reverse(); // first function can receive multiply arguments\n    var firstFn = fns[0];\n    var tailsFn = fns.slice(1);\n    return function() {\n        return tailsFn.reduce(function(res, fn) {\n            return fn(res);\n        }, firstFn.apply(void 0, arguments));\n    };\n};\nvar reverse = function reverse(arr) {\n    if (Array.isArray(arr)) {\n        return arr.reverse();\n    } // can be string\n    return arr.split(\"\").reverse.join(\"\");\n};\nvar memoize = function memoize(fn) {\n    var lastArgs = null;\n    var lastResult = null;\n    return function() {\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        if (lastArgs && args.every(function(val, i) {\n            return val === lastArgs[i];\n        })) {\n            return lastResult;\n        }\n        lastArgs = args;\n        lastResult = fn.apply(void 0, args);\n        return lastResult;\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/recharts-scale@0.4.5/node_modules/recharts-scale/es6/util/utils.js\n");

/***/ })

};
;