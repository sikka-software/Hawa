"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-day-picker@8.10.0_date-fns@2.30.0_react@18.2.0";
exports.ids = ["vendor-chunks/react-day-picker@8.10.0_date-fns@2.30.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/react-day-picker@8.10.0_date-fns@2.30.0_react@18.2.0/node_modules/react-day-picker/dist/index.esm.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/react-day-picker@8.10.0_date-fns@2.30.0_react@18.2.0/node_modules/react-day-picker/dist/index.esm.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   Caption: () => (/* binding */ Caption),\n/* harmony export */   CaptionDropdowns: () => (/* binding */ CaptionDropdowns),\n/* harmony export */   CaptionLabel: () => (/* binding */ CaptionLabel),\n/* harmony export */   CaptionNavigation: () => (/* binding */ CaptionNavigation),\n/* harmony export */   Day: () => (/* binding */ Day),\n/* harmony export */   DayContent: () => (/* binding */ DayContent),\n/* harmony export */   DayPicker: () => (/* binding */ DayPicker),\n/* harmony export */   DayPickerContext: () => (/* binding */ DayPickerContext),\n/* harmony export */   DayPickerProvider: () => (/* binding */ DayPickerProvider),\n/* harmony export */   Dropdown: () => (/* binding */ Dropdown),\n/* harmony export */   FocusContext: () => (/* binding */ FocusContext),\n/* harmony export */   FocusProvider: () => (/* binding */ FocusProvider),\n/* harmony export */   Footer: () => (/* binding */ Footer),\n/* harmony export */   Head: () => (/* binding */ Head),\n/* harmony export */   HeadRow: () => (/* binding */ HeadRow),\n/* harmony export */   IconDropdown: () => (/* binding */ IconDropdown),\n/* harmony export */   IconLeft: () => (/* binding */ IconLeft),\n/* harmony export */   IconRight: () => (/* binding */ IconRight),\n/* harmony export */   InternalModifier: () => (/* binding */ InternalModifier),\n/* harmony export */   Months: () => (/* binding */ Months),\n/* harmony export */   NavigationContext: () => (/* binding */ NavigationContext),\n/* harmony export */   NavigationProvider: () => (/* binding */ NavigationProvider),\n/* harmony export */   RootProvider: () => (/* binding */ RootProvider),\n/* harmony export */   Row: () => (/* binding */ Row),\n/* harmony export */   SelectMultipleContext: () => (/* binding */ SelectMultipleContext),\n/* harmony export */   SelectMultipleProvider: () => (/* binding */ SelectMultipleProvider),\n/* harmony export */   SelectMultipleProviderInternal: () => (/* binding */ SelectMultipleProviderInternal),\n/* harmony export */   SelectRangeContext: () => (/* binding */ SelectRangeContext),\n/* harmony export */   SelectRangeProvider: () => (/* binding */ SelectRangeProvider),\n/* harmony export */   SelectRangeProviderInternal: () => (/* binding */ SelectRangeProviderInternal),\n/* harmony export */   SelectSingleContext: () => (/* binding */ SelectSingleContext),\n/* harmony export */   SelectSingleProvider: () => (/* binding */ SelectSingleProvider),\n/* harmony export */   SelectSingleProviderInternal: () => (/* binding */ SelectSingleProviderInternal),\n/* harmony export */   WeekNumber: () => (/* binding */ WeekNumber),\n/* harmony export */   addToRange: () => (/* binding */ addToRange),\n/* harmony export */   isDateAfterType: () => (/* binding */ isDateAfterType),\n/* harmony export */   isDateBeforeType: () => (/* binding */ isDateBeforeType),\n/* harmony export */   isDateInterval: () => (/* binding */ isDateInterval),\n/* harmony export */   isDateRange: () => (/* binding */ isDateRange),\n/* harmony export */   isDayOfWeekType: () => (/* binding */ isDayOfWeekType),\n/* harmony export */   isDayPickerDefault: () => (/* binding */ isDayPickerDefault),\n/* harmony export */   isDayPickerMultiple: () => (/* binding */ isDayPickerMultiple),\n/* harmony export */   isDayPickerRange: () => (/* binding */ isDayPickerRange),\n/* harmony export */   isDayPickerSingle: () => (/* binding */ isDayPickerSingle),\n/* harmony export */   isMatch: () => (/* binding */ isMatch),\n/* harmony export */   useActiveModifiers: () => (/* binding */ useActiveModifiers),\n/* harmony export */   useDayPicker: () => (/* binding */ useDayPicker),\n/* harmony export */   useDayRender: () => (/* binding */ useDayRender),\n/* harmony export */   useFocusContext: () => (/* binding */ useFocusContext),\n/* harmony export */   useInput: () => (/* binding */ useInput),\n/* harmony export */   useNavigation: () => (/* binding */ useNavigation),\n/* harmony export */   useSelectMultiple: () => (/* binding */ useSelectMultiple),\n/* harmony export */   useSelectRange: () => (/* binding */ useSelectRange),\n/* harmony export */   useSelectSingle: () => (/* binding */ useSelectSingle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/.pnpm/next@14.0.4_@opentelemetry+api@1.7.0_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/format/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfMonth/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/endOfMonth/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfDay/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isSameYear/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/setMonth/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/setYear/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfYear/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/differenceInCalendarMonths/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/addMonths/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isSameMonth/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isBefore/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfISOWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/addDays/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isSameDay/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isAfter/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/subDays/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/differenceInCalendarDays/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/isDate/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/addWeeks/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/addYears/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/endOfISOWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/endOfWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/max/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/min/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getUnixTime/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getISOWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getWeek/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getWeeksInMonth/index.js\");\n/* harmony import */ var _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! __barrel_optimize__?names=addDays,addMonths,addWeeks,addYears,differenceInCalendarDays,differenceInCalendarMonths,endOfISOWeek,endOfMonth,endOfWeek,format,getISOWeek,getUnixTime,getWeek,getWeeksInMonth,isAfter,isBefore,isDate,isSameDay,isSameMonth,isSameYear,max,min,parse,setMonth,setYear,startOfDay,startOfISOWeek,startOfMonth,startOfWeek,startOfYear,subDays!=!date-fns */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/parse/index.js\");\n/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns/locale */ \"(ssr)/../../node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/locale/en-US/index.js\");\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nvar jsxRuntime = {\n    exports: {}\n};\nvar reactJsxRuntime_development = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var hasRequiredReactJsxRuntime_development;\nfunction requireReactJsxRuntime_development() {\n    if (hasRequiredReactJsxRuntime_development) return reactJsxRuntime_development;\n    hasRequiredReactJsxRuntime_development = 1;\n    if (true) {\n        (function() {\n            var React = (react__WEBPACK_IMPORTED_MODULE_0___default());\n            // ATTENTION\n            // When adding new symbols to this file,\n            // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n            // The Symbol used to tag the ReactElement-like types.\n            var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n            var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n            var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n            var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n            var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n            var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n            var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n            var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n            var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n            var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n            var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n            var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n            var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n            var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n            var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n            function getIteratorFn(maybeIterable) {\n                if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                    return null;\n                }\n                var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n                if (typeof maybeIterator === \"function\") {\n                    return maybeIterator;\n                }\n                return null;\n            }\n            var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n            function error(format) {\n                {\n                    {\n                        for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                            args[_key2 - 1] = arguments[_key2];\n                        }\n                        printWarning(\"error\", format, args);\n                    }\n                }\n            }\n            function printWarning(level, format, args) {\n                // When changing this logic, you might want to also\n                // update consoleWithStackDev.www.js as well.\n                {\n                    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                    var stack = ReactDebugCurrentFrame.getStackAddendum();\n                    if (stack !== \"\") {\n                        format += \"%s\";\n                        args = args.concat([\n                            stack\n                        ]);\n                    } // eslint-disable-next-line react-internal/safe-string-coercion\n                    var argsWithFormat = args.map(function(item) {\n                        return String(item);\n                    }); // Careful: RN currently depends on this prefix\n                    argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                    // breaks IE9: https://github.com/facebook/react/issues/13610\n                    // eslint-disable-next-line react-internal/no-production-logging\n                    Function.prototype.apply.call(console[level], console, argsWithFormat);\n                }\n            }\n            // -----------------------------------------------------------------------------\n            var enableScopeAPI = false; // Experimental Create Event Handle API.\n            var enableCacheElement = false;\n            var enableTransitionTracing = false; // No known bugs, but needs performance testing\n            var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n            // stuff. Intended to enable React core members to more easily debug scheduling\n            // issues in DEV builds.\n            var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n            var REACT_MODULE_REFERENCE;\n            {\n                REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n            }\n            function isValidElementType(type) {\n                if (typeof type === \"string\" || typeof type === \"function\") {\n                    return true;\n                } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n                if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                    return true;\n                }\n                if (typeof type === \"object\" && type !== null) {\n                    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                    // types supported by any Flight configuration anywhere since\n                    // we don't know which Flight build this will end up being used\n                    // with.\n                    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            function getWrappedName(outerType, innerType, wrapperName) {\n                var displayName = outerType.displayName;\n                if (displayName) {\n                    return displayName;\n                }\n                var functionName = innerType.displayName || innerType.name || \"\";\n                return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n            } // Keep in sync with react-reconciler/getComponentNameFromFiber\n            function getContextName(type) {\n                return type.displayName || \"Context\";\n            } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n            function getComponentNameFromType(type) {\n                if (type == null) {\n                    // Host root, text node or just invalid type.\n                    return null;\n                }\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                if (typeof type === \"function\") {\n                    return type.displayName || type.name || null;\n                }\n                if (typeof type === \"string\") {\n                    return type;\n                }\n                switch(type){\n                    case REACT_FRAGMENT_TYPE:\n                        return \"Fragment\";\n                    case REACT_PORTAL_TYPE:\n                        return \"Portal\";\n                    case REACT_PROFILER_TYPE:\n                        return \"Profiler\";\n                    case REACT_STRICT_MODE_TYPE:\n                        return \"StrictMode\";\n                    case REACT_SUSPENSE_TYPE:\n                        return \"Suspense\";\n                    case REACT_SUSPENSE_LIST_TYPE:\n                        return \"SuspenseList\";\n                }\n                if (typeof type === \"object\") {\n                    switch(type.$$typeof){\n                        case REACT_CONTEXT_TYPE:\n                            var context = type;\n                            return getContextName(context) + \".Consumer\";\n                        case REACT_PROVIDER_TYPE:\n                            var provider = type;\n                            return getContextName(provider._context) + \".Provider\";\n                        case REACT_FORWARD_REF_TYPE:\n                            return getWrappedName(type, type.render, \"ForwardRef\");\n                        case REACT_MEMO_TYPE:\n                            var outerName = type.displayName || null;\n                            if (outerName !== null) {\n                                return outerName;\n                            }\n                            return getComponentNameFromType(type.type) || \"Memo\";\n                        case REACT_LAZY_TYPE:\n                            {\n                                var lazyComponent = type;\n                                var payload = lazyComponent._payload;\n                                var init = lazyComponent._init;\n                                try {\n                                    return getComponentNameFromType(init(payload));\n                                } catch (x) {\n                                    return null;\n                                }\n                            }\n                    }\n                }\n                return null;\n            }\n            var assign = Object.assign;\n            // Helpers to patch console.logs to avoid logging during side-effect free\n            // replaying on render function. This currently only patches the object\n            // lazily which won't cover if the log function was extracted eagerly.\n            // We could also eagerly patch the method.\n            var disabledDepth = 0;\n            var prevLog;\n            var prevInfo;\n            var prevWarn;\n            var prevError;\n            var prevGroup;\n            var prevGroupCollapsed;\n            var prevGroupEnd;\n            function disabledLog() {}\n            disabledLog.__reactDisabledLog = true;\n            function disableLogs() {\n                {\n                    if (disabledDepth === 0) {\n                        /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                        prevInfo = console.info;\n                        prevWarn = console.warn;\n                        prevError = console.error;\n                        prevGroup = console.group;\n                        prevGroupCollapsed = console.groupCollapsed;\n                        prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                        var props = {\n                            configurable: true,\n                            enumerable: true,\n                            value: disabledLog,\n                            writable: true\n                        }; // $FlowFixMe Flow thinks console is immutable.\n                        Object.defineProperties(console, {\n                            info: props,\n                            log: props,\n                            warn: props,\n                            error: props,\n                            group: props,\n                            groupCollapsed: props,\n                            groupEnd: props\n                        });\n                    /* eslint-enable react-internal/no-production-logging */ }\n                    disabledDepth++;\n                }\n            }\n            function reenableLogs() {\n                {\n                    disabledDepth--;\n                    if (disabledDepth === 0) {\n                        /* eslint-disable react-internal/no-production-logging */ var props = {\n                            configurable: true,\n                            enumerable: true,\n                            writable: true\n                        }; // $FlowFixMe Flow thinks console is immutable.\n                        Object.defineProperties(console, {\n                            log: assign({}, props, {\n                                value: prevLog\n                            }),\n                            info: assign({}, props, {\n                                value: prevInfo\n                            }),\n                            warn: assign({}, props, {\n                                value: prevWarn\n                            }),\n                            error: assign({}, props, {\n                                value: prevError\n                            }),\n                            group: assign({}, props, {\n                                value: prevGroup\n                            }),\n                            groupCollapsed: assign({}, props, {\n                                value: prevGroupCollapsed\n                            }),\n                            groupEnd: assign({}, props, {\n                                value: prevGroupEnd\n                            })\n                        });\n                    /* eslint-enable react-internal/no-production-logging */ }\n                    if (disabledDepth < 0) {\n                        error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                    }\n                }\n            }\n            var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n            var prefix;\n            function describeBuiltInComponentFrame(name, source, ownerFn) {\n                {\n                    if (prefix === undefined) {\n                        // Extract the VM specific prefix used by each line.\n                        try {\n                            throw Error();\n                        } catch (x) {\n                            var match = x.stack.trim().match(/\\n( *(at )?)/);\n                            prefix = match && match[1] || \"\";\n                        }\n                    } // We use the prefix to ensure our stacks line up with native stack frames.\n                    return \"\\n\" + prefix + name;\n                }\n            }\n            var reentry = false;\n            var componentFrameCache;\n            {\n                var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n                componentFrameCache = new PossiblyWeakMap();\n            }\n            function describeNativeComponentFrame(fn, construct) {\n                // If something asked for a stack inside a fake render, it should get ignored.\n                if (!fn || reentry) {\n                    return \"\";\n                }\n                {\n                    var frame = componentFrameCache.get(fn);\n                    if (frame !== undefined) {\n                        return frame;\n                    }\n                }\n                var control;\n                reentry = true;\n                var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n                Error.prepareStackTrace = undefined;\n                var previousDispatcher;\n                {\n                    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                    // for warnings.\n                    ReactCurrentDispatcher.current = null;\n                    disableLogs();\n                }\n                try {\n                    // This should throw.\n                    if (construct) {\n                        // Something should be setting the props in the constructor.\n                        var Fake = function() {\n                            throw Error();\n                        }; // $FlowFixMe\n                        Object.defineProperty(Fake.prototype, \"props\", {\n                            set: function() {\n                                // We use a throwing setter instead of frozen or non-writable props\n                                // because that won't throw in a non-strict mode function.\n                                throw Error();\n                            }\n                        });\n                        if (typeof Reflect === \"object\" && Reflect.construct) {\n                            // We construct a different control for this case to include any extra\n                            // frames added by the construct call.\n                            try {\n                                Reflect.construct(Fake, []);\n                            } catch (x) {\n                                control = x;\n                            }\n                            Reflect.construct(fn, [], Fake);\n                        } else {\n                            try {\n                                Fake.call();\n                            } catch (x) {\n                                control = x;\n                            }\n                            fn.call(Fake.prototype);\n                        }\n                    } else {\n                        try {\n                            throw Error();\n                        } catch (x) {\n                            control = x;\n                        }\n                        fn();\n                    }\n                } catch (sample) {\n                    // This is inlined manually because closure doesn't do it for us.\n                    if (sample && control && typeof sample.stack === \"string\") {\n                        // This extracts the first frame from the sample that isn't also in the control.\n                        // Skipping one frame that we assume is the frame that calls the two.\n                        var sampleLines = sample.stack.split(\"\\n\");\n                        var controlLines = control.stack.split(\"\\n\");\n                        var s = sampleLines.length - 1;\n                        var c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                        for(; s >= 1 && c >= 0; s--, c--){\n                            // Next we find the first one that isn't the same which should be the\n                            // frame that called our sample function and the control.\n                            if (sampleLines[s] !== controlLines[c]) {\n                                // In V8, the first line is describing the message but other VMs don't.\n                                // If we're about to return the first line, and the control is also on the same\n                                // line, that's a pretty good indicator that our sample threw at same line as\n                                // the control. I.e. before we entered the sample frame. So we ignore this result.\n                                // This can happen if you passed a class to function component, or non-function.\n                                if (s !== 1 || c !== 1) {\n                                    do {\n                                        s--;\n                                        c--; // We may still have similar intermediate frames from the construct call.\n                                        // The next one that isn't the same should be our match though.\n                                        if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                            // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                            var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                            // but we have a user-provided \"displayName\"\n                                            // splice it in to make the stack more readable.\n                                            if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                                _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                            }\n                                            {\n                                                if (typeof fn === \"function\") {\n                                                    componentFrameCache.set(fn, _frame);\n                                                }\n                                            }\n                                            return _frame;\n                                        }\n                                    }while (s >= 1 && c >= 0);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                } finally{\n                    reentry = false;\n                    {\n                        ReactCurrentDispatcher.current = previousDispatcher;\n                        reenableLogs();\n                    }\n                    Error.prepareStackTrace = previousPrepareStackTrace;\n                } // Fallback to just using the name if we couldn't make it throw.\n                var name = fn ? fn.displayName || fn.name : \"\";\n                var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n                {\n                    if (typeof fn === \"function\") {\n                        componentFrameCache.set(fn, syntheticFrame);\n                    }\n                }\n                return syntheticFrame;\n            }\n            function describeFunctionComponentFrame(fn, source, ownerFn) {\n                {\n                    return describeNativeComponentFrame(fn, false);\n                }\n            }\n            function shouldConstruct(Component) {\n                var prototype = Component.prototype;\n                return !!(prototype && prototype.isReactComponent);\n            }\n            function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n                if (type == null) {\n                    return \"\";\n                }\n                if (typeof type === \"function\") {\n                    {\n                        return describeNativeComponentFrame(type, shouldConstruct(type));\n                    }\n                }\n                if (typeof type === \"string\") {\n                    return describeBuiltInComponentFrame(type);\n                }\n                switch(type){\n                    case REACT_SUSPENSE_TYPE:\n                        return describeBuiltInComponentFrame(\"Suspense\");\n                    case REACT_SUSPENSE_LIST_TYPE:\n                        return describeBuiltInComponentFrame(\"SuspenseList\");\n                }\n                if (typeof type === \"object\") {\n                    switch(type.$$typeof){\n                        case REACT_FORWARD_REF_TYPE:\n                            return describeFunctionComponentFrame(type.render);\n                        case REACT_MEMO_TYPE:\n                            // Memo may contain any component type so we recursively resolve it.\n                            return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                        case REACT_LAZY_TYPE:\n                            {\n                                var lazyComponent = type;\n                                var payload = lazyComponent._payload;\n                                var init = lazyComponent._init;\n                                try {\n                                    // Lazy may contain any component type so we recursively resolve it.\n                                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                                } catch (x) {}\n                            }\n                    }\n                }\n                return \"\";\n            }\n            var hasOwnProperty = Object.prototype.hasOwnProperty;\n            var loggedTypeFailures = {};\n            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n            function setCurrentlyValidatingElement(element) {\n                {\n                    if (element) {\n                        var owner = element._owner;\n                        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                        ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                    } else {\n                        ReactDebugCurrentFrame.setExtraStackFrame(null);\n                    }\n                }\n            }\n            function checkPropTypes(typeSpecs, values, location, componentName, element) {\n                {\n                    // $FlowFixMe This is okay but Flow doesn't know it.\n                    var has = Function.call.bind(hasOwnProperty);\n                    for(var typeSpecName in typeSpecs){\n                        if (has(typeSpecs, typeSpecName)) {\n                            var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                            // fail the render phase where it didn't fail before. So we log it.\n                            // After these have been cleaned up, we'll let them throw.\n                            try {\n                                // This is intentionally an invariant that gets caught. It's the same\n                                // behavior as without this statement except with a better message.\n                                if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                    // eslint-disable-next-line react-internal/prod-error-codes\n                                    var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                    err.name = \"Invariant Violation\";\n                                    throw err;\n                                }\n                                error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                            } catch (ex) {\n                                error$1 = ex;\n                            }\n                            if (error$1 && !(error$1 instanceof Error)) {\n                                setCurrentlyValidatingElement(element);\n                                error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                                setCurrentlyValidatingElement(null);\n                            }\n                            if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                                // Only monitor this failure once because there tends to be a lot of the\n                                // same error.\n                                loggedTypeFailures[error$1.message] = true;\n                                setCurrentlyValidatingElement(element);\n                                error(\"Failed %s type: %s\", location, error$1.message);\n                                setCurrentlyValidatingElement(null);\n                            }\n                        }\n                    }\n                }\n            }\n            var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n            function isArray(a) {\n                return isArrayImpl(a);\n            }\n            /*\n\t * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n\t * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n\t *\n\t * The functions in this module will throw an easier-to-understand,\n\t * easier-to-debug exception with a clear errors message message explaining the\n\t * problem. (Instead of a confusing exception thrown inside the implementation\n\t * of the `value` object).\n\t */ // $FlowFixMe only called in DEV, so void return is not possible.\n            function typeName(value) {\n                {\n                    // toStringTag is needed for namespaced types like Temporal.Instant\n                    var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n                    return type;\n                }\n            } // $FlowFixMe only called in DEV, so void return is not possible.\n            function willCoercionThrow(value) {\n                {\n                    try {\n                        testStringCoercion(value);\n                        return false;\n                    } catch (e) {\n                        return true;\n                    }\n                }\n            }\n            function testStringCoercion(value) {\n                // If you ended up here by following an exception call stack, here's what's\n                // happened: you supplied an object or symbol value to React (as a prop, key,\n                // DOM attribute, CSS property, string ref, etc.) and when React tried to\n                // coerce it to a string using `'' + value`, an exception was thrown.\n                //\n                // The most common types that will cause this exception are `Symbol` instances\n                // and Temporal objects like `Temporal.Instant`. But any object that has a\n                // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n                // exception. (Library authors do this to prevent users from using built-in\n                // numeric operators like `+` or comparison operators like `>=` because custom\n                // methods are needed to perform accurate arithmetic or comparison.)\n                //\n                // To fix the problem, coerce this object or symbol value to a string before\n                // passing it to React. The most reliable way is usually `String(value)`.\n                //\n                // To find which value is throwing, check the browser or debugger console.\n                // Before this exception was thrown, there should be `console.error` output\n                // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n                // problem and how that type was used: key, atrribute, input value prop, etc.\n                // In most cases, this console output also shows the component and its\n                // ancestor components where the exception happened.\n                //\n                // eslint-disable-next-line react-internal/safe-string-coercion\n                return \"\" + value;\n            }\n            function checkKeyStringCoercion(value) {\n                {\n                    if (willCoercionThrow(value)) {\n                        error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                        return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                    }\n                }\n            }\n            var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n            var RESERVED_PROPS = {\n                key: true,\n                ref: true,\n                __self: true,\n                __source: true\n            };\n            var specialPropKeyWarningShown;\n            var specialPropRefWarningShown;\n            var didWarnAboutStringRefs;\n            {\n                didWarnAboutStringRefs = {};\n            }\n            function hasValidRef(config) {\n                {\n                    if (hasOwnProperty.call(config, \"ref\")) {\n                        var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                        if (getter && getter.isReactWarning) {\n                            return false;\n                        }\n                    }\n                }\n                return config.ref !== undefined;\n            }\n            function hasValidKey(config) {\n                {\n                    if (hasOwnProperty.call(config, \"key\")) {\n                        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                        if (getter && getter.isReactWarning) {\n                            return false;\n                        }\n                    }\n                }\n                return config.key !== undefined;\n            }\n            function warnIfStringRefCannotBeAutoConverted(config, self) {\n                {\n                    if (typeof config.ref === \"string\" && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n                        var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                        if (!didWarnAboutStringRefs[componentName]) {\n                            error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n                            didWarnAboutStringRefs[componentName] = true;\n                        }\n                    }\n                }\n            }\n            function defineKeyPropWarningGetter(props, displayName) {\n                {\n                    var warnAboutAccessingKey = function() {\n                        if (!specialPropKeyWarningShown) {\n                            specialPropKeyWarningShown = true;\n                            error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                        }\n                    };\n                    warnAboutAccessingKey.isReactWarning = true;\n                    Object.defineProperty(props, \"key\", {\n                        get: warnAboutAccessingKey,\n                        configurable: true\n                    });\n                }\n            }\n            function defineRefPropWarningGetter(props, displayName) {\n                {\n                    var warnAboutAccessingRef = function() {\n                        if (!specialPropRefWarningShown) {\n                            specialPropRefWarningShown = true;\n                            error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                        }\n                    };\n                    warnAboutAccessingRef.isReactWarning = true;\n                    Object.defineProperty(props, \"ref\", {\n                        get: warnAboutAccessingRef,\n                        configurable: true\n                    });\n                }\n            }\n            /**\n\t * Factory method to create a new React element. This no longer adheres to\n\t * the class pattern, so do not use new to call it. Also, instanceof check\n\t * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n\t * if something is a React Element.\n\t *\n\t * @param {*} type\n\t * @param {*} props\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} owner\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @internal\n\t */ var ReactElement = function(type, key, ref, self, source, owner, props) {\n                var element = {\n                    // This tag allows us to uniquely identify this as a React Element\n                    $$typeof: REACT_ELEMENT_TYPE,\n                    // Built-in properties that belong on the element\n                    type: type,\n                    key: key,\n                    ref: ref,\n                    props: props,\n                    // Record the component responsible for creating this element.\n                    _owner: owner\n                };\n                {\n                    // The validation flag is currently mutative. We put it on\n                    // an external backing store so that we can freeze the whole object.\n                    // This can be replaced with a WeakMap once they are implemented in\n                    // commonly used development environments.\n                    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                    // the validation flag non-enumerable (where possible, which should\n                    // include every environment we run tests in), so the test framework\n                    // ignores it.\n                    Object.defineProperty(element._store, \"validated\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: true,\n                        value: false\n                    }); // self and source are DEV only properties.\n                    Object.defineProperty(element, \"_self\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: false,\n                        value: self\n                    }); // Two elements created in two different places should be considered\n                    // equal for testing purposes and therefore we hide it from enumeration.\n                    Object.defineProperty(element, \"_source\", {\n                        configurable: false,\n                        enumerable: false,\n                        writable: false,\n                        value: source\n                    });\n                    if (Object.freeze) {\n                        Object.freeze(element.props);\n                        Object.freeze(element);\n                    }\n                }\n                return element;\n            };\n            /**\n\t * https://github.com/reactjs/rfcs/pull/107\n\t * @param {*} type\n\t * @param {object} props\n\t * @param {string} key\n\t */ function jsxDEV(type, config, maybeKey, source, self) {\n                {\n                    var propName; // Reserved names are extracted\n                    var props = {};\n                    var key = null;\n                    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                    // but as an intermediary step, we will use jsxDEV for everything except\n                    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                    // key is explicitly declared to be undefined or not.\n                    if (maybeKey !== undefined) {\n                        {\n                            checkKeyStringCoercion(maybeKey);\n                        }\n                        key = \"\" + maybeKey;\n                    }\n                    if (hasValidKey(config)) {\n                        {\n                            checkKeyStringCoercion(config.key);\n                        }\n                        key = \"\" + config.key;\n                    }\n                    if (hasValidRef(config)) {\n                        ref = config.ref;\n                        warnIfStringRefCannotBeAutoConverted(config, self);\n                    } // Remaining properties are added to a new props object\n                    for(propName in config){\n                        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                            props[propName] = config[propName];\n                        }\n                    } // Resolve default props\n                    if (type && type.defaultProps) {\n                        var defaultProps = type.defaultProps;\n                        for(propName in defaultProps){\n                            if (props[propName] === undefined) {\n                                props[propName] = defaultProps[propName];\n                            }\n                        }\n                    }\n                    if (key || ref) {\n                        var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                        if (key) {\n                            defineKeyPropWarningGetter(props, displayName);\n                        }\n                        if (ref) {\n                            defineRefPropWarningGetter(props, displayName);\n                        }\n                    }\n                    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n                }\n            }\n            var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n            var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n            function setCurrentlyValidatingElement$1(element) {\n                {\n                    if (element) {\n                        var owner = element._owner;\n                        var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                        ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                    } else {\n                        ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                    }\n                }\n            }\n            var propTypesMisspellWarningShown;\n            {\n                propTypesMisspellWarningShown = false;\n            }\n            /**\n\t * Verifies the object is a ReactElement.\n\t * See https://reactjs.org/docs/react-api.html#isvalidelement\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a ReactElement.\n\t * @final\n\t */ function isValidElement(object) {\n                {\n                    return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n                }\n            }\n            function getDeclarationErrorAddendum() {\n                {\n                    if (ReactCurrentOwner$1.current) {\n                        var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                        if (name) {\n                            return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                        }\n                    }\n                    return \"\";\n                }\n            }\n            function getSourceInfoErrorAddendum(source) {\n                {\n                    if (source !== undefined) {\n                        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                        var lineNumber = source.lineNumber;\n                        return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                    }\n                    return \"\";\n                }\n            }\n            /**\n\t * Warn if there's no key explicitly set on dynamic arrays of children or\n\t * object keys are not valid. This allows us to keep track of children between\n\t * updates.\n\t */ var ownerHasKeyUseWarning = {};\n            function getCurrentComponentErrorInfo(parentType) {\n                {\n                    var info = getDeclarationErrorAddendum();\n                    if (!info) {\n                        var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                        if (parentName) {\n                            info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                        }\n                    }\n                    return info;\n                }\n            }\n            /**\n\t * Warn if the element doesn't have an explicit key assigned to it.\n\t * This element is in an array. The array could grow and shrink or be\n\t * reordered. All children that haven't already been validated are required to\n\t * have a \"key\" property assigned to it. Error statuses are cached so a warning\n\t * will only be shown once.\n\t *\n\t * @internal\n\t * @param {ReactElement} element Element that requires a key.\n\t * @param {*} parentType element's parent's type.\n\t */ function validateExplicitKey(element, parentType) {\n                {\n                    if (!element._store || element._store.validated || element.key != null) {\n                        return;\n                    }\n                    element._store.validated = true;\n                    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                        return;\n                    }\n                    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                    // property, it may be the creator of the child that's responsible for\n                    // assigning it a key.\n                    var childOwner = \"\";\n                    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n                        // Give the component that originally created this child.\n                        childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                    }\n                    setCurrentlyValidatingElement$1(element);\n                    error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                    setCurrentlyValidatingElement$1(null);\n                }\n            }\n            /**\n\t * Ensure that every element either is passed in a static location, in an\n\t * array with an explicit keys property defined, or in an object literal\n\t * with valid key property.\n\t *\n\t * @internal\n\t * @param {ReactNode} node Statically passed child of any type.\n\t * @param {*} parentType node's parent's type.\n\t */ function validateChildKeys(node, parentType) {\n                {\n                    if (typeof node !== \"object\") {\n                        return;\n                    }\n                    if (isArray(node)) {\n                        for(var i = 0; i < node.length; i++){\n                            var child = node[i];\n                            if (isValidElement(child)) {\n                                validateExplicitKey(child, parentType);\n                            }\n                        }\n                    } else if (isValidElement(node)) {\n                        // This element was passed in a valid location.\n                        if (node._store) {\n                            node._store.validated = true;\n                        }\n                    } else if (node) {\n                        var iteratorFn = getIteratorFn(node);\n                        if (typeof iteratorFn === \"function\") {\n                            // Entry iterators used to provide implicit keys,\n                            // but now we print a separate warning for them later.\n                            if (iteratorFn !== node.entries) {\n                                var iterator = iteratorFn.call(node);\n                                var step;\n                                while(!(step = iterator.next()).done){\n                                    if (isValidElement(step.value)) {\n                                        validateExplicitKey(step.value, parentType);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            /**\n\t * Given an element, validate that its props follow the propTypes definition,\n\t * provided by the type.\n\t *\n\t * @param {ReactElement} element\n\t */ function validatePropTypes(element) {\n                {\n                    var type = element.type;\n                    if (type === null || type === undefined || typeof type === \"string\") {\n                        return;\n                    }\n                    var propTypes;\n                    if (typeof type === \"function\") {\n                        propTypes = type.propTypes;\n                    } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                    // Inner props are checked in the reconciler.\n                    type.$$typeof === REACT_MEMO_TYPE)) {\n                        propTypes = type.propTypes;\n                    } else {\n                        return;\n                    }\n                    if (propTypes) {\n                        // Intentionally inside to avoid triggering lazy initializers:\n                        var name = getComponentNameFromType(type);\n                        checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                        propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                        var _name = getComponentNameFromType(type);\n                        error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                    }\n                    if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                        error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                    }\n                }\n            }\n            /**\n\t * Given a fragment, validate that it can only be provided with fragment props\n\t * @param {ReactElement} fragment\n\t */ function validateFragmentProps(fragment) {\n                {\n                    var keys = Object.keys(fragment.props);\n                    for(var i = 0; i < keys.length; i++){\n                        var key = keys[i];\n                        if (key !== \"children\" && key !== \"key\") {\n                            setCurrentlyValidatingElement$1(fragment);\n                            error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                            setCurrentlyValidatingElement$1(null);\n                            break;\n                        }\n                    }\n                    if (fragment.ref !== null) {\n                        setCurrentlyValidatingElement$1(fragment);\n                        error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                        setCurrentlyValidatingElement$1(null);\n                    }\n                }\n            }\n            function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n                {\n                    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                    // succeed and there will likely be errors in render.\n                    if (!validType) {\n                        var info = \"\";\n                        if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                            info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                        }\n                        var sourceInfo = getSourceInfoErrorAddendum(source);\n                        if (sourceInfo) {\n                            info += sourceInfo;\n                        } else {\n                            info += getDeclarationErrorAddendum();\n                        }\n                        var typeString;\n                        if (type === null) {\n                            typeString = \"null\";\n                        } else if (isArray(type)) {\n                            typeString = \"array\";\n                        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                            typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                            info = \" Did you accidentally export a JSX literal instead of a component?\";\n                        } else {\n                            typeString = typeof type;\n                        }\n                        error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                    }\n                    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                    // TODO: Drop this when these are no longer allowed as the type argument.\n                    if (element == null) {\n                        return element;\n                    } // Skip key warning if the type isn't valid since our key validation logic\n                    // doesn't expect a non-string/function type and can throw confusing errors.\n                    // We don't want exception behavior to differ between dev and prod.\n                    // (Rendering will throw with a helpful message and as soon as the type is\n                    // fixed, the key warnings will appear.)\n                    if (validType) {\n                        var children = props.children;\n                        if (children !== undefined) {\n                            if (isStaticChildren) {\n                                if (isArray(children)) {\n                                    for(var i = 0; i < children.length; i++){\n                                        validateChildKeys(children[i], type);\n                                    }\n                                    if (Object.freeze) {\n                                        Object.freeze(children);\n                                    }\n                                } else {\n                                    error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                                }\n                            } else {\n                                validateChildKeys(children, type);\n                            }\n                        }\n                    }\n                    if (type === REACT_FRAGMENT_TYPE) {\n                        validateFragmentProps(element);\n                    } else {\n                        validatePropTypes(element);\n                    }\n                    return element;\n                }\n            } // These two functions exist to still get child warnings in dev\n            // even with the prod transform. This means that jsxDEV is purely\n            // opt-in behavior for better messages but that we won't stop\n            // giving you warnings if you use production apis.\n            function jsxWithValidationStatic(type, props, key) {\n                {\n                    return jsxWithValidation(type, props, key, true);\n                }\n            }\n            function jsxWithValidationDynamic(type, props, key) {\n                {\n                    return jsxWithValidation(type, props, key, false);\n                }\n            }\n            var jsx = jsxWithValidationDynamic; // we may want to special case jsxs internally to take advantage of static children.\n            // for now we can ship identical prod functions\n            var jsxs = jsxWithValidationStatic;\n            reactJsxRuntime_development.Fragment = REACT_FRAGMENT_TYPE;\n            reactJsxRuntime_development.jsx = jsx;\n            reactJsxRuntime_development.jsxs = jsxs;\n        })();\n    }\n    return reactJsxRuntime_development;\n}\nvar reactJsxRuntime_production_min = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ var hasRequiredReactJsxRuntime_production_min;\nfunction requireReactJsxRuntime_production_min() {\n    if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;\n    hasRequiredReactJsxRuntime_production_min = 1;\n    var f = (react__WEBPACK_IMPORTED_MODULE_0___default()), k = Symbol.for(\"react.element\"), l = Symbol.for(\"react.fragment\"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = {\n        key: !0,\n        ref: !0,\n        __self: !0,\n        __source: !0\n    };\n    function q(c, a, g) {\n        var b, d = {}, e = null, h = null;\n        void 0 !== g && (e = \"\" + g);\n        void 0 !== a.key && (e = \"\" + a.key);\n        void 0 !== a.ref && (h = a.ref);\n        for(b in a)m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n        if (c && c.defaultProps) for(b in a = c.defaultProps, a)void 0 === d[b] && (d[b] = a[b]);\n        return {\n            $$typeof: k,\n            type: c,\n            key: e,\n            ref: h,\n            props: d,\n            _owner: n.current\n        };\n    }\n    reactJsxRuntime_production_min.Fragment = l;\n    reactJsxRuntime_production_min.jsx = q;\n    reactJsxRuntime_production_min.jsxs = q;\n    return reactJsxRuntime_production_min;\n}\nif (false) {} else {\n    jsxRuntime.exports = requireReactJsxRuntime_development();\n}\nvar jsxRuntimeExports = jsxRuntime.exports;\n/** Returns true when the props are of type {@link DayPickerMultipleProps}. */ function isDayPickerMultiple(props) {\n    return props.mode === \"multiple\";\n}\n/** Returns true when the props are of type {@link DayPickerRangeProps}. */ function isDayPickerRange(props) {\n    return props.mode === \"range\";\n}\n/** Returns true when the props are of type {@link DayPickerSingleProps}. */ function isDayPickerSingle(props) {\n    return props.mode === \"single\";\n}\n/**\n * The name of the default CSS classes.\n */ var defaultClassNames = {\n    root: \"rdp\",\n    multiple_months: \"rdp-multiple_months\",\n    with_weeknumber: \"rdp-with_weeknumber\",\n    vhidden: \"rdp-vhidden\",\n    button_reset: \"rdp-button_reset\",\n    button: \"rdp-button\",\n    caption: \"rdp-caption\",\n    caption_start: \"rdp-caption_start\",\n    caption_end: \"rdp-caption_end\",\n    caption_between: \"rdp-caption_between\",\n    caption_label: \"rdp-caption_label\",\n    caption_dropdowns: \"rdp-caption_dropdowns\",\n    dropdown: \"rdp-dropdown\",\n    dropdown_month: \"rdp-dropdown_month\",\n    dropdown_year: \"rdp-dropdown_year\",\n    dropdown_icon: \"rdp-dropdown_icon\",\n    months: \"rdp-months\",\n    month: \"rdp-month\",\n    table: \"rdp-table\",\n    tbody: \"rdp-tbody\",\n    tfoot: \"rdp-tfoot\",\n    head: \"rdp-head\",\n    head_row: \"rdp-head_row\",\n    head_cell: \"rdp-head_cell\",\n    nav: \"rdp-nav\",\n    nav_button: \"rdp-nav_button\",\n    nav_button_previous: \"rdp-nav_button_previous\",\n    nav_button_next: \"rdp-nav_button_next\",\n    nav_icon: \"rdp-nav_icon\",\n    row: \"rdp-row\",\n    weeknumber: \"rdp-weeknumber\",\n    cell: \"rdp-cell\",\n    day: \"rdp-day\",\n    day_today: \"rdp-day_today\",\n    day_outside: \"rdp-day_outside\",\n    day_selected: \"rdp-day_selected\",\n    day_disabled: \"rdp-day_disabled\",\n    day_hidden: \"rdp-day_hidden\",\n    day_range_start: \"rdp-day_range_start\",\n    day_range_end: \"rdp-day_range_end\",\n    day_range_middle: \"rdp-day_range_middle\"\n};\n/**\n * The default formatter for the caption.\n */ function formatCaption(month, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(month, \"LLLL y\", options);\n}\n/**\n * The default formatter for the Day button.\n */ function formatDay(day, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(day, \"d\", options);\n}\n/**\n * The default formatter for the Month caption.\n */ function formatMonthCaption(month, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(month, \"LLLL\", options);\n}\n/**\n * The default formatter for the week number.\n */ function formatWeekNumber(weekNumber) {\n    return \"\".concat(weekNumber);\n}\n/**\n * The default formatter for the name of the weekday.\n */ function formatWeekdayName(weekday, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(weekday, \"cccccc\", options);\n}\n/**\n * The default formatter for the Year caption.\n */ function formatYearCaption(year, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(year, \"yyyy\", options);\n}\nvar formatters = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    formatCaption: formatCaption,\n    formatDay: formatDay,\n    formatMonthCaption: formatMonthCaption,\n    formatWeekNumber: formatWeekNumber,\n    formatWeekdayName: formatWeekdayName,\n    formatYearCaption: formatYearCaption\n});\n/**\n * The default ARIA label for the day button.\n */ var labelDay = function(day, activeModifiers, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(day, \"do MMMM (EEEE)\", options);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelMonthDropdown = function() {\n    return \"Month: \";\n};\n/**\n * The default ARIA label for next month button in navigation\n */ var labelNext = function() {\n    return \"Go to next month\";\n};\n/**\n * The default ARIA label for previous month button in navigation\n */ var labelPrevious = function() {\n    return \"Go to previous month\";\n};\n/**\n * The default ARIA label for the Weekday element.\n */ var labelWeekday = function(day, options) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(day, \"cccc\", options);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelWeekNumber = function(n) {\n    return \"Week n. \".concat(n);\n};\n/**\n * The default ARIA label for the WeekNumber element.\n */ var labelYearDropdown = function() {\n    return \"Year: \";\n};\nvar labels = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    labelDay: labelDay,\n    labelMonthDropdown: labelMonthDropdown,\n    labelNext: labelNext,\n    labelPrevious: labelPrevious,\n    labelWeekNumber: labelWeekNumber,\n    labelWeekday: labelWeekday,\n    labelYearDropdown: labelYearDropdown\n});\n/**\n * Returns the default values to use in the DayPickerContext, in case they are\n * not passed down with the DayPicker initial props.\n */ function getDefaultContextValues() {\n    var captionLayout = \"buttons\";\n    var classNames = defaultClassNames;\n    var locale = date_fns_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    var modifiersClassNames = {};\n    var modifiers = {};\n    var numberOfMonths = 1;\n    var styles = {};\n    var today = new Date();\n    return {\n        captionLayout: captionLayout,\n        classNames: classNames,\n        formatters: formatters,\n        labels: labels,\n        locale: locale,\n        modifiersClassNames: modifiersClassNames,\n        modifiers: modifiers,\n        numberOfMonths: numberOfMonths,\n        styles: styles,\n        today: today,\n        mode: \"default\"\n    };\n}\n/** Return the `fromDate` and `toDate` prop values values parsing the DayPicker props. */ function parseFromToProps(props) {\n    var fromYear = props.fromYear, toYear = props.toYear, fromMonth = props.fromMonth, toMonth = props.toMonth;\n    var fromDate = props.fromDate, toDate = props.toDate;\n    if (fromMonth) {\n        fromDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(fromMonth);\n    } else if (fromYear) {\n        fromDate = new Date(fromYear, 0, 1);\n    }\n    if (toMonth) {\n        toDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(toMonth);\n    } else if (toYear) {\n        toDate = new Date(toYear, 11, 31);\n    }\n    return {\n        fromDate: fromDate ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(fromDate) : undefined,\n        toDate: toDate ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(toDate) : undefined\n    };\n}\n/**\n * The DayPicker context shares the props passed to DayPicker within internal\n * and custom components. It is used to set the default values and perform\n * one-time calculations required to render the days.\n *\n * Access to this context from the {@link useDayPicker} hook.\n */ var DayPickerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/**\n * The provider for the {@link DayPickerContext}, assigning the defaults from the\n * initial DayPicker props.\n */ function DayPickerProvider(props) {\n    var _a;\n    var initialProps = props.initialProps;\n    var defaultContextValues = getDefaultContextValues();\n    var _b = parseFromToProps(initialProps), fromDate = _b.fromDate, toDate = _b.toDate;\n    var captionLayout = (_a = initialProps.captionLayout) !== null && _a !== void 0 ? _a : defaultContextValues.captionLayout;\n    if (captionLayout !== \"buttons\" && (!fromDate || !toDate)) {\n        // When no from/to dates are set, the caption is always buttons\n        captionLayout = \"buttons\";\n    }\n    var onSelect;\n    if (isDayPickerSingle(initialProps) || isDayPickerMultiple(initialProps) || isDayPickerRange(initialProps)) {\n        onSelect = initialProps.onSelect;\n    }\n    var value = __assign(__assign(__assign({}, defaultContextValues), initialProps), {\n        captionLayout: captionLayout,\n        classNames: __assign(__assign({}, defaultContextValues.classNames), initialProps.classNames),\n        components: __assign({}, initialProps.components),\n        formatters: __assign(__assign({}, defaultContextValues.formatters), initialProps.formatters),\n        fromDate: fromDate,\n        labels: __assign(__assign({}, defaultContextValues.labels), initialProps.labels),\n        mode: initialProps.mode || defaultContextValues.mode,\n        modifiers: __assign(__assign({}, defaultContextValues.modifiers), initialProps.modifiers),\n        modifiersClassNames: __assign(__assign({}, defaultContextValues.modifiersClassNames), initialProps.modifiersClassNames),\n        onSelect: onSelect,\n        styles: __assign(__assign({}, defaultContextValues.styles), initialProps.styles),\n        toDate: toDate\n    });\n    return jsxRuntimeExports.jsx(DayPickerContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link DayPickerContextValue}.\n *\n * Use the DayPicker context to access to the props passed to DayPicker inside\n * internal or custom components.\n */ function useDayPicker() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(DayPickerContext);\n    if (!context) {\n        throw new Error(\"useDayPicker must be used within a DayPickerProvider.\");\n    }\n    return context;\n}\n/** Render the caption for the displayed month. This component is used when `captionLayout=\"buttons\"`. */ function CaptionLabel(props) {\n    var _a = useDayPicker(), locale = _a.locale, classNames = _a.classNames, styles = _a.styles, formatCaption = _a.formatters.formatCaption;\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.caption_label,\n        style: styles.caption_label,\n        \"aria-live\": \"polite\",\n        role: \"presentation\",\n        id: props.id,\n        children: formatCaption(props.displayMonth, {\n            locale: locale\n        })\n    });\n}\n/**\n * Render the icon in the styled drop-down.\n */ function IconDropdown(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"8px\",\n        height: \"8px\",\n        viewBox: \"0 0 120 120\",\n        \"data-testid\": \"iconDropdown\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M4.22182541,48.2218254 C8.44222828,44.0014225 15.2388494,43.9273804 19.5496459,47.9996989 L19.7781746,48.2218254 L60,88.443 L100.221825,48.2218254 C104.442228,44.0014225 111.238849,43.9273804 115.549646,47.9996989 L115.778175,48.2218254 C119.998577,52.4422283 120.07262,59.2388494 116.000301,63.5496459 L115.778175,63.7781746 L67.7781746,111.778175 C63.5577717,115.998577 56.7611506,116.07262 52.4503541,112.000301 L52.2218254,111.778175 L4.22182541,63.7781746 C-0.0739418023,59.4824074 -0.0739418023,52.5175926 4.22182541,48.2218254 Z\",\n            fill: \"currentColor\",\n            fillRule: \"nonzero\"\n        })\n    }));\n}\n/**\n * Render a styled select component – displaying a caption and a custom\n * drop-down icon.\n */ function Dropdown(props) {\n    var _a, _b;\n    var onChange = props.onChange, value = props.value, children = props.children, caption = props.caption, className = props.className, style = props.style;\n    var dayPicker = useDayPicker();\n    var IconDropdownComponent = (_b = (_a = dayPicker.components) === null || _a === void 0 ? void 0 : _a.IconDropdown) !== null && _b !== void 0 ? _b : IconDropdown;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: className,\n        style: style,\n        children: [\n            jsxRuntimeExports.jsx(\"span\", {\n                className: dayPicker.classNames.vhidden,\n                children: props[\"aria-label\"]\n            }),\n            jsxRuntimeExports.jsx(\"select\", {\n                name: props.name,\n                \"aria-label\": props[\"aria-label\"],\n                className: dayPicker.classNames.dropdown,\n                style: dayPicker.styles.dropdown,\n                value: value,\n                onChange: onChange,\n                children: children\n            }),\n            jsxRuntimeExports.jsxs(\"div\", {\n                className: dayPicker.classNames.caption_label,\n                style: dayPicker.styles.caption_label,\n                \"aria-hidden\": \"true\",\n                children: [\n                    caption,\n                    jsxRuntimeExports.jsx(IconDropdownComponent, {\n                        className: dayPicker.classNames.dropdown_icon,\n                        style: dayPicker.styles.dropdown_icon\n                    })\n                ]\n            })\n        ]\n    });\n}\n/** Render the dropdown to navigate between months. */ function MonthsDropdown(props) {\n    var _a;\n    var _b = useDayPicker(), fromDate = _b.fromDate, toDate = _b.toDate, styles = _b.styles, locale = _b.locale, formatMonthCaption = _b.formatters.formatMonthCaption, classNames = _b.classNames, components = _b.components, labelMonthDropdown = _b.labels.labelMonthDropdown;\n    // Dropdown should appear only when both from/toDate is set\n    if (!fromDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    if (!toDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    var dropdownMonths = [];\n    if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(fromDate, toDate)) {\n        // only display the months included in the range\n        var date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(fromDate);\n        for(var month = fromDate.getMonth(); month <= toDate.getMonth(); month++){\n            dropdownMonths.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(date, month));\n        }\n    } else {\n        // display all the 12 months\n        var date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(new Date()); // Any date should be OK, as we just need the year\n        for(var month = 0; month <= 11; month++){\n            dropdownMonths.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(date, month));\n        }\n    }\n    var handleChange = function(e) {\n        var selectedMonth = Number(e.target.value);\n        var newMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_7__[\"default\"])((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(props.displayMonth), selectedMonth);\n        props.onChange(newMonth);\n    };\n    var DropdownComponent = (_a = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a !== void 0 ? _a : Dropdown;\n    return jsxRuntimeExports.jsx(DropdownComponent, {\n        name: \"months\",\n        \"aria-label\": labelMonthDropdown(),\n        className: classNames.dropdown_month,\n        style: styles.dropdown_month,\n        onChange: handleChange,\n        value: props.displayMonth.getMonth(),\n        caption: formatMonthCaption(props.displayMonth, {\n            locale: locale\n        }),\n        children: dropdownMonths.map(function(m) {\n            return jsxRuntimeExports.jsx(\"option\", {\n                value: m.getMonth(),\n                children: formatMonthCaption(m, {\n                    locale: locale\n                })\n            }, m.getMonth());\n        })\n    });\n}\n/**\n * Render a dropdown to change the year. Take in account the `nav.fromDate` and\n * `toDate` from context.\n */ function YearsDropdown(props) {\n    var _a;\n    var displayMonth = props.displayMonth;\n    var _b = useDayPicker(), fromDate = _b.fromDate, toDate = _b.toDate, locale = _b.locale, styles = _b.styles, classNames = _b.classNames, components = _b.components, formatYearCaption = _b.formatters.formatYearCaption, labelYearDropdown = _b.labels.labelYearDropdown;\n    var years = [];\n    // Dropdown should appear only when both from/toDate is set\n    if (!fromDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    if (!toDate) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    var fromYear = fromDate.getFullYear();\n    var toYear = toDate.getFullYear();\n    for(var year = fromYear; year <= toYear; year++){\n        years.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(new Date()), year));\n    }\n    var handleChange = function(e) {\n        var newMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_8__[\"default\"])((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(displayMonth), Number(e.target.value));\n        props.onChange(newMonth);\n    };\n    var DropdownComponent = (_a = components === null || components === void 0 ? void 0 : components.Dropdown) !== null && _a !== void 0 ? _a : Dropdown;\n    return jsxRuntimeExports.jsx(DropdownComponent, {\n        name: \"years\",\n        \"aria-label\": labelYearDropdown(),\n        className: classNames.dropdown_year,\n        style: styles.dropdown_year,\n        onChange: handleChange,\n        value: displayMonth.getFullYear(),\n        caption: formatYearCaption(displayMonth, {\n            locale: locale\n        }),\n        children: years.map(function(year) {\n            return jsxRuntimeExports.jsx(\"option\", {\n                value: year.getFullYear(),\n                children: formatYearCaption(year, {\n                    locale: locale\n                })\n            }, year.getFullYear());\n        })\n    });\n}\n/**\n * Helper hook for using controlled/uncontrolled values from a component props.\n *\n * When the value is not controlled, pass `undefined` as `controlledValue` and\n * use the returned setter to update it.\n *\n * When the value is controlled, pass the controlled value as second\n * argument, which will be always returned as `value`.\n */ function useControlledValue(defaultValue, controlledValue) {\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue), uncontrolledValue = _a[0], setValue = _a[1];\n    var value = controlledValue === undefined ? uncontrolledValue : controlledValue;\n    return [\n        value,\n        setValue\n    ];\n}\n/** Return the initial month according to the given options. */ function getInitialMonth(context) {\n    var month = context.month, defaultMonth = context.defaultMonth, today = context.today;\n    var initialMonth = month || defaultMonth || today || new Date();\n    var toDate = context.toDate, fromDate = context.fromDate, _a = context.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    // Fix the initialMonth if is after the to-date\n    if (toDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(toDate, initialMonth) < 0) {\n        var offset = -1 * (numberOfMonths - 1);\n        initialMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(toDate, offset);\n    }\n    // Fix the initialMonth if is before the from-date\n    if (fromDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(initialMonth, fromDate) < 0) {\n        initialMonth = fromDate;\n    }\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(initialMonth);\n}\n/** Controls the navigation state. */ function useNavigationState() {\n    var context = useDayPicker();\n    var initialMonth = getInitialMonth(context);\n    var _a = useControlledValue(initialMonth, context.month), month = _a[0], setMonth = _a[1];\n    var goToMonth = function(date) {\n        var _a;\n        if (context.disableNavigation) return;\n        var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(date);\n        setMonth(month);\n        (_a = context.onMonthChange) === null || _a === void 0 ? void 0 : _a.call(context, month);\n    };\n    return [\n        month,\n        goToMonth\n    ];\n}\n/**\n * Return the months to display in the component according to the number of\n * months and the from/to date.\n */ function getDisplayMonths(month, _a) {\n    var reverseMonths = _a.reverseMonths, numberOfMonths = _a.numberOfMonths;\n    var start = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(month);\n    var end = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(start, numberOfMonths));\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(end, start);\n    var months = [];\n    for(var i = 0; i < monthsDiff; i++){\n        var nextMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(start, i);\n        months.push(nextMonth);\n    }\n    if (reverseMonths) months = months.reverse();\n    return months;\n}\n/**\n * Returns the next month the user can navigate to according to the given\n * options.\n *\n * Please note that the next month is not always the next calendar month:\n *\n * - if after the `toDate` range, is undefined;\n * - if the navigation is paged, is the number of months displayed ahead.\n *\n */ function getNextMonth(startingMonth, options) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    var toDate = options.toDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    var offset = pagedNavigation ? numberOfMonths : 1;\n    var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(startingMonth);\n    if (!toDate) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(month, offset);\n    }\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(toDate, startingMonth);\n    if (monthsDiff < numberOfMonths) {\n        return undefined;\n    }\n    // Jump forward as the number of months when paged navigation\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(month, offset);\n}\n/**\n * Returns the next previous the user can navigate to, according to the given\n * options.\n *\n * Please note that the previous month is not always the previous calendar\n * month:\n *\n * - if before the `fromDate` date, is `undefined`;\n * - if the navigation is paged, is the number of months displayed before.\n *\n */ function getPreviousMonth(startingMonth, options) {\n    if (options.disableNavigation) {\n        return undefined;\n    }\n    var fromDate = options.fromDate, pagedNavigation = options.pagedNavigation, _a = options.numberOfMonths, numberOfMonths = _a === void 0 ? 1 : _a;\n    var offset = pagedNavigation ? numberOfMonths : 1;\n    var month = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(startingMonth);\n    if (!fromDate) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(month, -offset);\n    }\n    var monthsDiff = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(month, fromDate);\n    if (monthsDiff <= 0) {\n        return undefined;\n    }\n    // Jump back as the number of months when paged navigation\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(month, -offset);\n}\n/**\n * The Navigation context shares details and methods to navigate the months in DayPicker.\n * Access this context from the {@link useNavigation} hook.\n */ var NavigationContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link NavigationContext}. */ function NavigationProvider(props) {\n    var dayPicker = useDayPicker();\n    var _a = useNavigationState(), currentMonth = _a[0], goToMonth = _a[1];\n    var displayMonths = getDisplayMonths(currentMonth, dayPicker);\n    var nextMonth = getNextMonth(currentMonth, dayPicker);\n    var previousMonth = getPreviousMonth(currentMonth, dayPicker);\n    var isDateDisplayed = function(date) {\n        return displayMonths.some(function(displayMonth) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(date, displayMonth);\n        });\n    };\n    var goToDate = function(date, refDate) {\n        if (isDateDisplayed(date)) {\n            return;\n        }\n        if (refDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(date, refDate)) {\n            goToMonth((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(date, 1 + dayPicker.numberOfMonths * -1));\n        } else {\n            goToMonth(date);\n        }\n    };\n    var value = {\n        currentMonth: currentMonth,\n        displayMonths: displayMonths,\n        goToMonth: goToMonth,\n        goToDate: goToDate,\n        previousMonth: previousMonth,\n        nextMonth: nextMonth,\n        isDateDisplayed: isDateDisplayed\n    };\n    return jsxRuntimeExports.jsx(NavigationContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link NavigationContextValue}. Use this hook to navigate\n * between months or years in DayPicker.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useNavigation() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(NavigationContext);\n    if (!context) {\n        throw new Error(\"useNavigation must be used within a NavigationProvider\");\n    }\n    return context;\n}\n/**\n * Render a caption with the dropdowns to navigate between months and years.\n */ function CaptionDropdowns(props) {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, styles = _b.styles, components = _b.components;\n    var goToMonth = useNavigation().goToMonth;\n    var handleMonthChange = function(newMonth) {\n        goToMonth((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(newMonth, props.displayIndex ? -props.displayIndex : 0));\n    };\n    var CaptionLabelComponent = (_a = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a !== void 0 ? _a : CaptionLabel;\n    var captionLabel = jsxRuntimeExports.jsx(CaptionLabelComponent, {\n        id: props.id,\n        displayMonth: props.displayMonth\n    });\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: classNames.caption_dropdowns,\n        style: styles.caption_dropdowns,\n        children: [\n            jsxRuntimeExports.jsx(\"div\", {\n                className: classNames.vhidden,\n                children: captionLabel\n            }),\n            jsxRuntimeExports.jsx(MonthsDropdown, {\n                onChange: handleMonthChange,\n                displayMonth: props.displayMonth\n            }),\n            jsxRuntimeExports.jsx(YearsDropdown, {\n                onChange: handleMonthChange,\n                displayMonth: props.displayMonth\n            })\n        ]\n    });\n}\n/**\n * Render the \"previous month\" button in the navigation.\n */ function IconLeft(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"16px\",\n        height: \"16px\",\n        viewBox: \"0 0 120 120\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M69.490332,3.34314575 C72.6145263,0.218951416 77.6798462,0.218951416 80.8040405,3.34314575 C83.8617626,6.40086786 83.9268205,11.3179931 80.9992143,14.4548388 L80.8040405,14.6568542 L35.461,60 L80.8040405,105.343146 C83.8617626,108.400868 83.9268205,113.317993 80.9992143,116.454839 L80.8040405,116.656854 C77.7463184,119.714576 72.8291931,119.779634 69.6923475,116.852028 L69.490332,116.656854 L18.490332,65.6568542 C15.4326099,62.5991321 15.367552,57.6820069 18.2951583,54.5451612 L18.490332,54.3431458 L69.490332,3.34314575 Z\",\n            fill: \"currentColor\",\n            fillRule: \"nonzero\"\n        })\n    }));\n}\n/**\n * Render the \"next month\" button in the navigation.\n */ function IconRight(props) {\n    return jsxRuntimeExports.jsx(\"svg\", __assign({\n        width: \"16px\",\n        height: \"16px\",\n        viewBox: \"0 0 120 120\"\n    }, props, {\n        children: jsxRuntimeExports.jsx(\"path\", {\n            d: \"M49.8040405,3.34314575 C46.6798462,0.218951416 41.6145263,0.218951416 38.490332,3.34314575 C35.4326099,6.40086786 35.367552,11.3179931 38.2951583,14.4548388 L38.490332,14.6568542 L83.8333725,60 L38.490332,105.343146 C35.4326099,108.400868 35.367552,113.317993 38.2951583,116.454839 L38.490332,116.656854 C41.5480541,119.714576 46.4651794,119.779634 49.602025,116.852028 L49.8040405,116.656854 L100.804041,65.6568542 C103.861763,62.5991321 103.926821,57.6820069 100.999214,54.5451612 L100.804041,54.3431458 L49.8040405,3.34314575 Z\",\n            fill: \"currentColor\"\n        })\n    }));\n}\n/** Render a button HTML element applying the reset class name. */ var Button = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(props, ref) {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles;\n    var classNamesArr = [\n        classNames.button_reset,\n        classNames.button\n    ];\n    if (props.className) {\n        classNamesArr.push(props.className);\n    }\n    var className = classNamesArr.join(\" \");\n    var style = __assign(__assign({}, styles.button_reset), styles.button);\n    if (props.style) {\n        Object.assign(style, props.style);\n    }\n    return jsxRuntimeExports.jsx(\"button\", __assign({}, props, {\n        ref: ref,\n        type: \"button\",\n        className: className,\n        style: style\n    }));\n});\n/** A component rendering the navigation buttons or the drop-downs. */ function Navigation(props) {\n    var _a, _b;\n    var _c = useDayPicker(), dir = _c.dir, locale = _c.locale, classNames = _c.classNames, styles = _c.styles, _d = _c.labels, labelPrevious = _d.labelPrevious, labelNext = _d.labelNext, components = _c.components;\n    if (!props.nextMonth && !props.previousMonth) {\n        return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    }\n    var previousLabel = labelPrevious(props.previousMonth, {\n        locale: locale\n    });\n    var previousClassName = [\n        classNames.nav_button,\n        classNames.nav_button_previous\n    ].join(\" \");\n    var nextLabel = labelNext(props.nextMonth, {\n        locale: locale\n    });\n    var nextClassName = [\n        classNames.nav_button,\n        classNames.nav_button_next\n    ].join(\" \");\n    var IconRightComponent = (_a = components === null || components === void 0 ? void 0 : components.IconRight) !== null && _a !== void 0 ? _a : IconRight;\n    var IconLeftComponent = (_b = components === null || components === void 0 ? void 0 : components.IconLeft) !== null && _b !== void 0 ? _b : IconLeft;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: classNames.nav,\n        style: styles.nav,\n        children: [\n            !props.hidePrevious && jsxRuntimeExports.jsx(Button, {\n                name: \"previous-month\",\n                \"aria-label\": previousLabel,\n                className: previousClassName,\n                style: styles.nav_button_previous,\n                disabled: !props.previousMonth,\n                onClick: props.onPreviousClick,\n                children: dir === \"rtl\" ? jsxRuntimeExports.jsx(IconRightComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                }) : jsxRuntimeExports.jsx(IconLeftComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                })\n            }),\n            !props.hideNext && jsxRuntimeExports.jsx(Button, {\n                name: \"next-month\",\n                \"aria-label\": nextLabel,\n                className: nextClassName,\n                style: styles.nav_button_next,\n                disabled: !props.nextMonth,\n                onClick: props.onNextClick,\n                children: dir === \"rtl\" ? jsxRuntimeExports.jsx(IconLeftComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                }) : jsxRuntimeExports.jsx(IconRightComponent, {\n                    className: classNames.nav_icon,\n                    style: styles.nav_icon\n                })\n            })\n        ]\n    });\n}\n/**\n * Render a caption with a button-based navigation.\n */ function CaptionNavigation(props) {\n    var numberOfMonths = useDayPicker().numberOfMonths;\n    var _a = useNavigation(), previousMonth = _a.previousMonth, nextMonth = _a.nextMonth, goToMonth = _a.goToMonth, displayMonths = _a.displayMonths;\n    var displayIndex = displayMonths.findIndex(function(month) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(props.displayMonth, month);\n    });\n    var isFirst = displayIndex === 0;\n    var isLast = displayIndex === displayMonths.length - 1;\n    var hideNext = numberOfMonths > 1 && (isFirst || !isLast);\n    var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);\n    var handlePreviousClick = function() {\n        if (!previousMonth) return;\n        goToMonth(previousMonth);\n    };\n    var handleNextClick = function() {\n        if (!nextMonth) return;\n        goToMonth(nextMonth);\n    };\n    return jsxRuntimeExports.jsx(Navigation, {\n        displayMonth: props.displayMonth,\n        hideNext: hideNext,\n        hidePrevious: hidePrevious,\n        nextMonth: nextMonth,\n        previousMonth: previousMonth,\n        onPreviousClick: handlePreviousClick,\n        onNextClick: handleNextClick\n    });\n}\n/**\n * Render the caption of a month. The caption has a different layout when\n * setting the {@link DayPickerBase.captionLayout} prop.\n */ function Caption(props) {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, disableNavigation = _b.disableNavigation, styles = _b.styles, captionLayout = _b.captionLayout, components = _b.components;\n    var CaptionLabelComponent = (_a = components === null || components === void 0 ? void 0 : components.CaptionLabel) !== null && _a !== void 0 ? _a : CaptionLabel;\n    var caption;\n    if (disableNavigation) {\n        caption = jsxRuntimeExports.jsx(CaptionLabelComponent, {\n            id: props.id,\n            displayMonth: props.displayMonth\n        });\n    } else if (captionLayout === \"dropdown\") {\n        caption = jsxRuntimeExports.jsx(CaptionDropdowns, {\n            displayMonth: props.displayMonth,\n            id: props.id\n        });\n    } else if (captionLayout === \"dropdown-buttons\") {\n        caption = jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {\n            children: [\n                jsxRuntimeExports.jsx(CaptionDropdowns, {\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex,\n                    id: props.id\n                }),\n                jsxRuntimeExports.jsx(CaptionNavigation, {\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex,\n                    id: props.id\n                })\n            ]\n        });\n    } else {\n        caption = jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, {\n            children: [\n                jsxRuntimeExports.jsx(CaptionLabelComponent, {\n                    id: props.id,\n                    displayMonth: props.displayMonth,\n                    displayIndex: props.displayIndex\n                }),\n                jsxRuntimeExports.jsx(CaptionNavigation, {\n                    displayMonth: props.displayMonth,\n                    id: props.id\n                })\n            ]\n        });\n    }\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.caption,\n        style: styles.caption,\n        children: caption\n    });\n}\n/** Render the Footer component (empty as default).*/ // eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction Footer(props) {\n    var _a = useDayPicker(), footer = _a.footer, styles = _a.styles, tfoot = _a.classNames.tfoot;\n    if (!footer) return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {});\n    return jsxRuntimeExports.jsx(\"tfoot\", {\n        className: tfoot,\n        style: styles.tfoot,\n        children: jsxRuntimeExports.jsx(\"tr\", {\n            children: jsxRuntimeExports.jsx(\"td\", {\n                colSpan: 8,\n                children: footer\n            })\n        })\n    });\n}\n/**\n * Generate a series of 7 days, starting from the week, to use for formatting\n * the weekday names (Monday, Tuesday, etc.).\n */ function getWeekdays(locale, /** The index of the first day of the week (0 - Sunday). */ weekStartsOn, /** Use ISOWeek instead of locale/ */ ISOWeek) {\n    var start = ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(new Date()) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(new Date(), {\n        locale: locale,\n        weekStartsOn: weekStartsOn\n    });\n    var days = [];\n    for(var i = 0; i < 7; i++){\n        var day = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(start, i);\n        days.push(day);\n    }\n    return days;\n}\n/**\n * Render the HeadRow component - i.e. the table head row with the weekday names.\n */ function HeadRow() {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles, showWeekNumber = _a.showWeekNumber, locale = _a.locale, weekStartsOn = _a.weekStartsOn, ISOWeek = _a.ISOWeek, formatWeekdayName = _a.formatters.formatWeekdayName, labelWeekday = _a.labels.labelWeekday;\n    var weekdays = getWeekdays(locale, weekStartsOn, ISOWeek);\n    return jsxRuntimeExports.jsxs(\"tr\", {\n        style: styles.head_row,\n        className: classNames.head_row,\n        children: [\n            showWeekNumber && jsxRuntimeExports.jsx(\"td\", {\n                style: styles.head_cell,\n                className: classNames.head_cell\n            }),\n            weekdays.map(function(weekday, i) {\n                return jsxRuntimeExports.jsx(\"th\", {\n                    scope: \"col\",\n                    className: classNames.head_cell,\n                    style: styles.head_cell,\n                    \"aria-label\": labelWeekday(weekday, {\n                        locale: locale\n                    }),\n                    children: formatWeekdayName(weekday, {\n                        locale: locale\n                    })\n                }, i);\n            })\n        ]\n    });\n}\n/** Render the table head. */ function Head() {\n    var _a;\n    var _b = useDayPicker(), classNames = _b.classNames, styles = _b.styles, components = _b.components;\n    var HeadRowComponent = (_a = components === null || components === void 0 ? void 0 : components.HeadRow) !== null && _a !== void 0 ? _a : HeadRow;\n    return jsxRuntimeExports.jsx(\"thead\", {\n        style: styles.head,\n        className: classNames.head,\n        children: jsxRuntimeExports.jsx(HeadRowComponent, {})\n    });\n}\n/** Render the content of the day cell. */ function DayContent(props) {\n    var _a = useDayPicker(), locale = _a.locale, formatDay = _a.formatters.formatDay;\n    return jsxRuntimeExports.jsx(jsxRuntimeExports.Fragment, {\n        children: formatDay(props.date, {\n            locale: locale\n        })\n    });\n}\n/**\n * The SelectMultiple context shares details about the selected days when in\n * multiple selection mode.\n *\n * Access this context from the {@link useSelectMultiple} hook.\n */ var SelectMultipleContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectMultipleContext}. */ function SelectMultipleProvider(props) {\n    if (!isDayPickerMultiple(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined,\n            modifiers: {\n                disabled: []\n            }\n        };\n        return jsxRuntimeExports.jsx(SelectMultipleContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectMultipleProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectMultipleProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var selected = initialProps.selected, min = initialProps.min, max = initialProps.max;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        var isMinSelected = Boolean(activeModifiers.selected && min && (selected === null || selected === void 0 ? void 0 : selected.length) === min);\n        if (isMinSelected) {\n            return;\n        }\n        var isMaxSelected = Boolean(!activeModifiers.selected && max && (selected === null || selected === void 0 ? void 0 : selected.length) === max);\n        if (isMaxSelected) {\n            return;\n        }\n        var selectedDays = selected ? __spreadArray([], selected, true) : [];\n        if (activeModifiers.selected) {\n            var index = selectedDays.findIndex(function(selectedDay) {\n                return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(day, selectedDay);\n            });\n            selectedDays.splice(index, 1);\n        } else {\n            selectedDays.push(day);\n        }\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, selectedDays, day, activeModifiers, e);\n    };\n    var modifiers = {\n        disabled: []\n    };\n    if (selected) {\n        modifiers.disabled.push(function(day) {\n            var isMaxSelected = max && selected.length > max - 1;\n            var isSelected = selected.some(function(selectedDay) {\n                return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(selectedDay, day);\n            });\n            return Boolean(isMaxSelected && !isSelected);\n        });\n    }\n    var contextValue = {\n        selected: selected,\n        onDayClick: onDayClick,\n        modifiers: modifiers\n    };\n    return jsxRuntimeExports.jsx(SelectMultipleContext.Provider, {\n        value: contextValue,\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectMultipleContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectMultiple() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectMultipleContext);\n    if (!context) {\n        throw new Error(\"useSelectMultiple must be used within a SelectMultipleProvider\");\n    }\n    return context;\n}\n/**\n * Add a day to an existing range.\n *\n * The returned range takes in account the `undefined` values and if the added\n * day is already present in the range.\n */ function addToRange(day, range) {\n    var _a = range || {}, from = _a.from, to = _a.to;\n    if (from && to) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(to, day) && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(from, day)) {\n            return undefined;\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(to, day)) {\n            return {\n                from: to,\n                to: undefined\n            };\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(from, day)) {\n            return undefined;\n        }\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(from, day)) {\n            return {\n                from: day,\n                to: to\n            };\n        }\n        return {\n            from: from,\n            to: day\n        };\n    }\n    if (to) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(day, to)) {\n            return {\n                from: to,\n                to: day\n            };\n        }\n        return {\n            from: day,\n            to: to\n        };\n    }\n    if (from) {\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_13__[\"default\"])(day, from)) {\n            return {\n                from: day,\n                to: from\n            };\n        }\n        return {\n            from: from,\n            to: day\n        };\n    }\n    return {\n        from: day,\n        to: undefined\n    };\n}\n/**\n * The SelectRange context shares details about the selected days when in\n * range selection mode.\n *\n * Access this context from the {@link useSelectRange} hook.\n */ var SelectRangeContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectRangeProvider}. */ function SelectRangeProvider(props) {\n    if (!isDayPickerRange(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined,\n            modifiers: {\n                range_start: [],\n                range_end: [],\n                range_middle: [],\n                disabled: []\n            }\n        };\n        return jsxRuntimeExports.jsx(SelectRangeContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectRangeProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectRangeProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var selected = initialProps.selected;\n    var _b = selected || {}, selectedFrom = _b.from, selectedTo = _b.to;\n    var min = initialProps.min;\n    var max = initialProps.max;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        var newRange = addToRange(day, selected);\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newRange, day, activeModifiers, e);\n    };\n    var modifiers = {\n        range_start: [],\n        range_end: [],\n        range_middle: [],\n        disabled: []\n    };\n    if (selectedFrom) {\n        modifiers.range_start = [\n            selectedFrom\n        ];\n        if (!selectedTo) {\n            modifiers.range_end = [\n                selectedFrom\n            ];\n        } else {\n            modifiers.range_end = [\n                selectedTo\n            ];\n            if (!(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(selectedFrom, selectedTo)) {\n                modifiers.range_middle = [\n                    {\n                        after: selectedFrom,\n                        before: selectedTo\n                    }\n                ];\n            }\n        }\n    } else if (selectedTo) {\n        modifiers.range_start = [\n            selectedTo\n        ];\n        modifiers.range_end = [\n            selectedTo\n        ];\n    }\n    if (min) {\n        if (selectedFrom && !selectedTo) {\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(selectedFrom, min - 1),\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedFrom, min - 1)\n            });\n        }\n        if (selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                after: selectedFrom,\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedFrom, min - 1)\n            });\n        }\n        if (!selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(selectedTo, min - 1),\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedTo, min - 1)\n            });\n        }\n    }\n    if (max) {\n        if (selectedFrom && !selectedTo) {\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedFrom, -max + 1)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedFrom, max - 1)\n            });\n        }\n        if (selectedFrom && selectedTo) {\n            var selectedCount = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(selectedTo, selectedFrom) + 1;\n            var offset = max - selectedCount;\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_19__[\"default\"])(selectedFrom, offset)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedTo, offset)\n            });\n        }\n        if (!selectedFrom && selectedTo) {\n            modifiers.disabled.push({\n                before: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedTo, -max + 1)\n            });\n            modifiers.disabled.push({\n                after: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(selectedTo, max - 1)\n            });\n        }\n    }\n    return jsxRuntimeExports.jsx(SelectRangeContext.Provider, {\n        value: {\n            selected: selected,\n            onDayClick: onDayClick,\n            modifiers: modifiers\n        },\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectRangeContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectRange() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectRangeContext);\n    if (!context) {\n        throw new Error(\"useSelectRange must be used within a SelectRangeProvider\");\n    }\n    return context;\n}\n/** Normalize to array a matcher input. */ function matcherToArray(matcher) {\n    if (Array.isArray(matcher)) {\n        return __spreadArray([], matcher, true);\n    } else if (matcher !== undefined) {\n        return [\n            matcher\n        ];\n    } else {\n        return [];\n    }\n}\n/** Create CustomModifiers from dayModifiers */ function getCustomModifiers(dayModifiers) {\n    var customModifiers = {};\n    Object.entries(dayModifiers).forEach(function(_a) {\n        var modifier = _a[0], matcher = _a[1];\n        customModifiers[modifier] = matcherToArray(matcher);\n    });\n    return customModifiers;\n}\n/** The name of the modifiers that are used internally by DayPicker. */ var InternalModifier;\n(function(InternalModifier) {\n    InternalModifier[\"Outside\"] = \"outside\";\n    /** Name of the modifier applied to the disabled days, using the `disabled` prop. */ InternalModifier[\"Disabled\"] = \"disabled\";\n    /** Name of the modifier applied to the selected days using the `selected` prop). */ InternalModifier[\"Selected\"] = \"selected\";\n    /** Name of the modifier applied to the hidden days using the `hidden` prop). */ InternalModifier[\"Hidden\"] = \"hidden\";\n    /** Name of the modifier applied to the day specified using the `today` prop). */ InternalModifier[\"Today\"] = \"today\";\n    /** The modifier applied to the day starting a selected range, when in range selection mode.  */ InternalModifier[\"RangeStart\"] = \"range_start\";\n    /** The modifier applied to the day ending a selected range, when in range selection mode.  */ InternalModifier[\"RangeEnd\"] = \"range_end\";\n    /** The modifier applied to the days between the start and the end of a selected range, when in range selection mode.  */ InternalModifier[\"RangeMiddle\"] = \"range_middle\";\n})(InternalModifier || (InternalModifier = {}));\nvar Selected = InternalModifier.Selected, Disabled = InternalModifier.Disabled, Hidden = InternalModifier.Hidden, Today = InternalModifier.Today, RangeEnd = InternalModifier.RangeEnd, RangeMiddle = InternalModifier.RangeMiddle, RangeStart = InternalModifier.RangeStart, Outside = InternalModifier.Outside;\n/** Return the {@link InternalModifiers} from the DayPicker and select contexts. */ function getInternalModifiers(dayPicker, selectMultiple, selectRange) {\n    var _a;\n    var internalModifiers = (_a = {}, _a[Selected] = matcherToArray(dayPicker.selected), _a[Disabled] = matcherToArray(dayPicker.disabled), _a[Hidden] = matcherToArray(dayPicker.hidden), _a[Today] = [\n        dayPicker.today\n    ], _a[RangeEnd] = [], _a[RangeMiddle] = [], _a[RangeStart] = [], _a[Outside] = [], _a);\n    if (dayPicker.fromDate) {\n        internalModifiers[Disabled].push({\n            before: dayPicker.fromDate\n        });\n    }\n    if (dayPicker.toDate) {\n        internalModifiers[Disabled].push({\n            after: dayPicker.toDate\n        });\n    }\n    if (isDayPickerMultiple(dayPicker)) {\n        internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectMultiple.modifiers[Disabled]);\n    } else if (isDayPickerRange(dayPicker)) {\n        internalModifiers[Disabled] = internalModifiers[Disabled].concat(selectRange.modifiers[Disabled]);\n        internalModifiers[RangeStart] = selectRange.modifiers[RangeStart];\n        internalModifiers[RangeMiddle] = selectRange.modifiers[RangeMiddle];\n        internalModifiers[RangeEnd] = selectRange.modifiers[RangeEnd];\n    }\n    return internalModifiers;\n}\n/** The Modifiers context store the modifiers used in DayPicker. To access the value of this context, use {@link useModifiers}. */ var ModifiersContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provide the value for the {@link ModifiersContext}. */ function ModifiersProvider(props) {\n    var dayPicker = useDayPicker();\n    var selectMultiple = useSelectMultiple();\n    var selectRange = useSelectRange();\n    var internalModifiers = getInternalModifiers(dayPicker, selectMultiple, selectRange);\n    var customModifiers = getCustomModifiers(dayPicker.modifiers);\n    var modifiers = __assign(__assign({}, internalModifiers), customModifiers);\n    return jsxRuntimeExports.jsx(ModifiersContext.Provider, {\n        value: modifiers,\n        children: props.children\n    });\n}\n/**\n * Return the modifiers used by DayPicker.\n *\n * This hook is meant to be used inside internal or custom components.\n * Requires to be wrapped into {@link ModifiersProvider}.\n *\n */ function useModifiers() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ModifiersContext);\n    if (!context) {\n        throw new Error(\"useModifiers must be used within a ModifiersProvider\");\n    }\n    return context;\n}\n/** Returns true if `matcher` is of type {@link DateInterval}. */ function isDateInterval(matcher) {\n    return Boolean(matcher && typeof matcher === \"object\" && \"before\" in matcher && \"after\" in matcher);\n}\n/** Returns true if `value` is a {@link DateRange} type. */ function isDateRange(value) {\n    return Boolean(value && typeof value === \"object\" && \"from\" in value);\n}\n/** Returns true if `value` is of type {@link DateAfter}. */ function isDateAfterType(value) {\n    return Boolean(value && typeof value === \"object\" && \"after\" in value);\n}\n/** Returns true if `value` is of type {@link DateBefore}. */ function isDateBeforeType(value) {\n    return Boolean(value && typeof value === \"object\" && \"before\" in value);\n}\n/** Returns true if `value` is a {@link DayOfWeek} type. */ function isDayOfWeekType(value) {\n    return Boolean(value && typeof value === \"object\" && \"dayOfWeek\" in value);\n}\n/** Return `true` whether `date` is inside `range`. */ function isDateInRange(date, range) {\n    var _a;\n    var from = range.from, to = range.to;\n    if (from && to) {\n        var isRangeInverted = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(to, from) < 0;\n        if (isRangeInverted) {\n            _a = [\n                to,\n                from\n            ], from = _a[0], to = _a[1];\n        }\n        var isInRange = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(date, from) >= 0 && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(to, date) >= 0;\n        return isInRange;\n    }\n    if (to) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(to, date);\n    }\n    if (from) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(from, date);\n    }\n    return false;\n}\n/** Returns true if `value` is a Date type. */ function isDateType(value) {\n    return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__[\"default\"])(value);\n}\n/** Returns true if `value` is an array of valid dates. */ function isArrayOfDates(value) {\n    return Array.isArray(value) && value.every(_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_21__[\"default\"]);\n}\n/**\n * Returns whether a day matches against at least one of the given Matchers.\n *\n * ```\n * const day = new Date(2022, 5, 19);\n * const matcher1: DateRange = {\n *    from: new Date(2021, 12, 21),\n *    to: new Date(2021, 12, 30)\n * }\n * const matcher2: DateRange = {\n *    from: new Date(2022, 5, 1),\n *    to: new Date(2022, 5, 23)\n * }\n *\n * const isMatch(day, [matcher1, matcher2]); // true, since day is in the matcher1 range.\n * ```\n * */ function isMatch(day, matchers) {\n    return matchers.some(function(matcher) {\n        if (typeof matcher === \"boolean\") {\n            return matcher;\n        }\n        if (isDateType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(day, matcher);\n        }\n        if (isArrayOfDates(matcher)) {\n            return matcher.includes(day);\n        }\n        if (isDateRange(matcher)) {\n            return isDateInRange(day, matcher);\n        }\n        if (isDayOfWeekType(matcher)) {\n            return matcher.dayOfWeek.includes(day.getDay());\n        }\n        if (isDateInterval(matcher)) {\n            var diffBefore = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(matcher.before, day);\n            var diffAfter = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(matcher.after, day);\n            var isDayBefore = diffBefore > 0;\n            var isDayAfter = diffAfter < 0;\n            var isClosedInterval = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_18__[\"default\"])(matcher.before, matcher.after);\n            if (isClosedInterval) {\n                return isDayAfter && isDayBefore;\n            } else {\n                return isDayBefore || isDayAfter;\n            }\n        }\n        if (isDateAfterType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(day, matcher.after) > 0;\n        }\n        if (isDateBeforeType(matcher)) {\n            return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(matcher.before, day) > 0;\n        }\n        if (typeof matcher === \"function\") {\n            return matcher(day);\n        }\n        return false;\n    });\n}\n/** Return the active modifiers for the given day. */ function getActiveModifiers(day, /** The modifiers to match for the given date. */ modifiers, /** The month where the day is displayed, to add the \"outside\" modifiers.  */ displayMonth) {\n    var matchedModifiers = Object.keys(modifiers).reduce(function(result, key) {\n        var modifier = modifiers[key];\n        if (isMatch(day, modifier)) {\n            result.push(key);\n        }\n        return result;\n    }, []);\n    var activeModifiers = {};\n    matchedModifiers.forEach(function(modifier) {\n        return activeModifiers[modifier] = true;\n    });\n    if (displayMonth && !(0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(day, displayMonth)) {\n        activeModifiers.outside = true;\n    }\n    return activeModifiers;\n}\n/**\n * Returns the day that should be the target of the focus when DayPicker is\n * rendered the first time.\n *\n * TODO: this function doesn't consider if the day is outside the month. We\n * implemented this check in `useDayRender` but it should probably go here. See\n * https://github.com/gpbl/react-day-picker/pull/1576\n */ function getInitialFocusTarget(displayMonths, modifiers) {\n    var firstDayInMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(displayMonths[0]);\n    var lastDayInMonth = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(displayMonths[displayMonths.length - 1]);\n    // TODO: cleanup code\n    var firstFocusableDay;\n    var today;\n    var date = firstDayInMonth;\n    while(date <= lastDayInMonth){\n        var activeModifiers = getActiveModifiers(date, modifiers);\n        var isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;\n        if (!isFocusable) {\n            date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(date, 1);\n            continue;\n        }\n        if (activeModifiers.selected) {\n            return date;\n        }\n        if (activeModifiers.today && !today) {\n            today = date;\n        }\n        if (!firstFocusableDay) {\n            firstFocusableDay = date;\n        }\n        date = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(date, 1);\n    }\n    if (today) {\n        return today;\n    } else {\n        return firstFocusableDay;\n    }\n}\nvar MAX_RETRY = 365;\n/** Return the next date to be focused. */ function getNextFocus(focusedDay, options) {\n    var moveBy = options.moveBy, direction = options.direction, context = options.context, modifiers = options.modifiers, _a = options.retry, retry = _a === void 0 ? {\n        count: 0,\n        lastFocused: focusedDay\n    } : _a;\n    var weekStartsOn = context.weekStartsOn, fromDate = context.fromDate, toDate = context.toDate, locale = context.locale;\n    var moveFns = {\n        day: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"],\n        week: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__[\"default\"],\n        month: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n        year: _barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_23__[\"default\"],\n        startOfWeek: function(date) {\n            return context.ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(date, {\n                locale: locale,\n                weekStartsOn: weekStartsOn\n            });\n        },\n        endOfWeek: function(date) {\n            return context.ISOWeek ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__[\"default\"])(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(date, {\n                locale: locale,\n                weekStartsOn: weekStartsOn\n            });\n        }\n    };\n    var newFocusedDay = moveFns[moveBy](focusedDay, direction === \"after\" ? 1 : -1);\n    if (direction === \"before\" && fromDate) {\n        newFocusedDay = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_26__[\"default\"])([\n            fromDate,\n            newFocusedDay\n        ]);\n    } else if (direction === \"after\" && toDate) {\n        newFocusedDay = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_27__[\"default\"])([\n            toDate,\n            newFocusedDay\n        ]);\n    }\n    var isFocusable = true;\n    if (modifiers) {\n        var activeModifiers = getActiveModifiers(newFocusedDay, modifiers);\n        isFocusable = !activeModifiers.disabled && !activeModifiers.hidden;\n    }\n    if (isFocusable) {\n        return newFocusedDay;\n    } else {\n        if (retry.count > MAX_RETRY) {\n            return retry.lastFocused;\n        }\n        return getNextFocus(newFocusedDay, {\n            moveBy: moveBy,\n            direction: direction,\n            context: context,\n            modifiers: modifiers,\n            retry: __assign(__assign({}, retry), {\n                count: retry.count + 1\n            })\n        });\n    }\n}\n/**\n * The Focus context shares details about the focused day for the keyboard\n *\n * Access this context from the {@link useFocusContext} hook.\n */ var FocusContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** The provider for the {@link FocusContext}. */ function FocusProvider(props) {\n    var navigation = useNavigation();\n    var modifiers = useModifiers();\n    var _a = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), focusedDay = _a[0], setFocusedDay = _a[1];\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), lastFocused = _b[0], setLastFocused = _b[1];\n    var initialFocusTarget = getInitialFocusTarget(navigation.displayMonths, modifiers);\n    // TODO: cleanup and test obscure code below\n    var focusTarget = (focusedDay !== null && focusedDay !== void 0 ? focusedDay : lastFocused && navigation.isDateDisplayed(lastFocused)) ? lastFocused : initialFocusTarget;\n    var blur = function() {\n        setLastFocused(focusedDay);\n        setFocusedDay(undefined);\n    };\n    var focus = function(date) {\n        setFocusedDay(date);\n    };\n    var context = useDayPicker();\n    var moveFocus = function(moveBy, direction) {\n        if (!focusedDay) return;\n        var nextFocused = getNextFocus(focusedDay, {\n            moveBy: moveBy,\n            direction: direction,\n            context: context,\n            modifiers: modifiers\n        });\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(focusedDay, nextFocused)) return undefined;\n        navigation.goToDate(nextFocused, focusedDay);\n        focus(nextFocused);\n    };\n    var value = {\n        focusedDay: focusedDay,\n        focusTarget: focusTarget,\n        blur: blur,\n        focus: focus,\n        focusDayAfter: function() {\n            return moveFocus(\"day\", \"after\");\n        },\n        focusDayBefore: function() {\n            return moveFocus(\"day\", \"before\");\n        },\n        focusWeekAfter: function() {\n            return moveFocus(\"week\", \"after\");\n        },\n        focusWeekBefore: function() {\n            return moveFocus(\"week\", \"before\");\n        },\n        focusMonthBefore: function() {\n            return moveFocus(\"month\", \"before\");\n        },\n        focusMonthAfter: function() {\n            return moveFocus(\"month\", \"after\");\n        },\n        focusYearBefore: function() {\n            return moveFocus(\"year\", \"before\");\n        },\n        focusYearAfter: function() {\n            return moveFocus(\"year\", \"after\");\n        },\n        focusStartOfWeek: function() {\n            return moveFocus(\"startOfWeek\", \"before\");\n        },\n        focusEndOfWeek: function() {\n            return moveFocus(\"endOfWeek\", \"after\");\n        }\n    };\n    return jsxRuntimeExports.jsx(FocusContext.Provider, {\n        value: value,\n        children: props.children\n    });\n}\n/**\n * Hook to access the {@link FocusContextValue}. Use this hook to handle the\n * focus state of the elements.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useFocusContext() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(FocusContext);\n    if (!context) {\n        throw new Error(\"useFocusContext must be used within a FocusProvider\");\n    }\n    return context;\n}\n/**\n * Return the active modifiers for the specified day.\n *\n * This hook is meant to be used inside internal or custom components.\n *\n * @param day\n * @param displayMonth\n */ function useActiveModifiers(day, /**\n * The month where the date is displayed. If not the same as `date`, the day\n * is an \"outside day\".\n */ displayMonth) {\n    var modifiers = useModifiers();\n    var activeModifiers = getActiveModifiers(day, modifiers, displayMonth);\n    return activeModifiers;\n}\n/**\n * The SelectSingle context shares details about the selected days when in\n * single selection mode.\n *\n * Access this context from the {@link useSelectSingle} hook.\n */ var SelectSingleContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(undefined);\n/** Provides the values for the {@link SelectSingleProvider}. */ function SelectSingleProvider(props) {\n    if (!isDayPickerSingle(props.initialProps)) {\n        var emptyContextValue = {\n            selected: undefined\n        };\n        return jsxRuntimeExports.jsx(SelectSingleContext.Provider, {\n            value: emptyContextValue,\n            children: props.children\n        });\n    }\n    return jsxRuntimeExports.jsx(SelectSingleProviderInternal, {\n        initialProps: props.initialProps,\n        children: props.children\n    });\n}\nfunction SelectSingleProviderInternal(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var onDayClick = function(day, activeModifiers, e) {\n        var _a, _b, _c;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, activeModifiers, e);\n        if (activeModifiers.selected && !initialProps.required) {\n            (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, undefined, day, activeModifiers, e);\n            return;\n        }\n        (_c = initialProps.onSelect) === null || _c === void 0 ? void 0 : _c.call(initialProps, day, day, activeModifiers, e);\n    };\n    var contextValue = {\n        selected: initialProps.selected,\n        onDayClick: onDayClick\n    };\n    return jsxRuntimeExports.jsx(SelectSingleContext.Provider, {\n        value: contextValue,\n        children: children\n    });\n}\n/**\n * Hook to access the {@link SelectSingleContextValue}.\n *\n * This hook is meant to be used inside internal or custom components.\n */ function useSelectSingle() {\n    var context = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(SelectSingleContext);\n    if (!context) {\n        throw new Error(\"useSelectSingle must be used within a SelectSingleProvider\");\n    }\n    return context;\n}\n/**\n * This hook returns details about the content to render in the day cell.\n *\n *\n * When a day cell is rendered in the table, DayPicker can either:\n *\n * - render nothing: when the day is outside the month or has matched the\n *   \"hidden\" modifier.\n * - render a button when `onDayClick` or a selection mode is set.\n * - render a non-interactive element: when no selection mode is set, the day\n *   cell shouldn’t respond to any interaction. DayPicker should render a `div`\n *   or a `span`.\n *\n * ### Usage\n *\n * Use this hook to customize the behavior of the {@link Day} component. Create a\n * new `Day` component using this hook and pass it to the `components` prop.\n * The source of {@link Day} can be a good starting point.\n *\n */ function useDayEventHandlers(date, activeModifiers) {\n    var dayPicker = useDayPicker();\n    var single = useSelectSingle();\n    var multiple = useSelectMultiple();\n    var range = useSelectRange();\n    var _a = useFocusContext(), focusDayAfter = _a.focusDayAfter, focusDayBefore = _a.focusDayBefore, focusWeekAfter = _a.focusWeekAfter, focusWeekBefore = _a.focusWeekBefore, blur = _a.blur, focus = _a.focus, focusMonthBefore = _a.focusMonthBefore, focusMonthAfter = _a.focusMonthAfter, focusYearBefore = _a.focusYearBefore, focusYearAfter = _a.focusYearAfter, focusStartOfWeek = _a.focusStartOfWeek, focusEndOfWeek = _a.focusEndOfWeek;\n    var onClick = function(e) {\n        var _a, _b, _c, _d;\n        if (isDayPickerSingle(dayPicker)) {\n            (_a = single.onDayClick) === null || _a === void 0 ? void 0 : _a.call(single, date, activeModifiers, e);\n        } else if (isDayPickerMultiple(dayPicker)) {\n            (_b = multiple.onDayClick) === null || _b === void 0 ? void 0 : _b.call(multiple, date, activeModifiers, e);\n        } else if (isDayPickerRange(dayPicker)) {\n            (_c = range.onDayClick) === null || _c === void 0 ? void 0 : _c.call(range, date, activeModifiers, e);\n        } else {\n            (_d = dayPicker.onDayClick) === null || _d === void 0 ? void 0 : _d.call(dayPicker, date, activeModifiers, e);\n        }\n    };\n    var onFocus = function(e) {\n        var _a;\n        focus(date);\n        (_a = dayPicker.onDayFocus) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onBlur = function(e) {\n        var _a;\n        blur();\n        (_a = dayPicker.onDayBlur) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onMouseEnter = function(e) {\n        var _a;\n        (_a = dayPicker.onDayMouseEnter) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onMouseLeave = function(e) {\n        var _a;\n        (_a = dayPicker.onDayMouseLeave) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onPointerEnter = function(e) {\n        var _a;\n        (_a = dayPicker.onDayPointerEnter) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onPointerLeave = function(e) {\n        var _a;\n        (_a = dayPicker.onDayPointerLeave) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchCancel = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchCancel) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchEnd = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchEnd) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchMove = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchMove) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onTouchStart = function(e) {\n        var _a;\n        (_a = dayPicker.onDayTouchStart) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onKeyUp = function(e) {\n        var _a;\n        (_a = dayPicker.onDayKeyUp) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var onKeyDown = function(e) {\n        var _a;\n        switch(e.key){\n            case \"ArrowLeft\":\n                e.preventDefault();\n                e.stopPropagation();\n                dayPicker.dir === \"rtl\" ? focusDayAfter() : focusDayBefore();\n                break;\n            case \"ArrowRight\":\n                e.preventDefault();\n                e.stopPropagation();\n                dayPicker.dir === \"rtl\" ? focusDayBefore() : focusDayAfter();\n                break;\n            case \"ArrowDown\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekAfter();\n                break;\n            case \"ArrowUp\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekBefore();\n                break;\n            case \"PageUp\":\n                e.preventDefault();\n                e.stopPropagation();\n                e.shiftKey ? focusYearBefore() : focusMonthBefore();\n                break;\n            case \"PageDown\":\n                e.preventDefault();\n                e.stopPropagation();\n                e.shiftKey ? focusYearAfter() : focusMonthAfter();\n                break;\n            case \"Home\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusStartOfWeek();\n                break;\n            case \"End\":\n                e.preventDefault();\n                e.stopPropagation();\n                focusEndOfWeek();\n                break;\n        }\n        (_a = dayPicker.onDayKeyDown) === null || _a === void 0 ? void 0 : _a.call(dayPicker, date, activeModifiers, e);\n    };\n    var eventHandlers = {\n        onClick: onClick,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        onMouseEnter: onMouseEnter,\n        onMouseLeave: onMouseLeave,\n        onPointerEnter: onPointerEnter,\n        onPointerLeave: onPointerLeave,\n        onTouchCancel: onTouchCancel,\n        onTouchEnd: onTouchEnd,\n        onTouchMove: onTouchMove,\n        onTouchStart: onTouchStart\n    };\n    return eventHandlers;\n}\n/**\n * Return the current selected days when DayPicker is in selection mode. Days\n * selected by the custom selection mode are not returned.\n *\n * This hook is meant to be used inside internal or custom components.\n *\n */ function useSelectedDays() {\n    var dayPicker = useDayPicker();\n    var single = useSelectSingle();\n    var multiple = useSelectMultiple();\n    var range = useSelectRange();\n    var selectedDays = isDayPickerSingle(dayPicker) ? single.selected : isDayPickerMultiple(dayPicker) ? multiple.selected : isDayPickerRange(dayPicker) ? range.selected : undefined;\n    return selectedDays;\n}\nfunction isInternalModifier(modifier) {\n    return Object.values(InternalModifier).includes(modifier);\n}\n/**\n * Return the class names for the Day element, according to the given active\n * modifiers.\n *\n * Custom class names are set via `modifiersClassNames` or `classNames`,\n * where the first have the precedence.\n */ function getDayClassNames(dayPicker, activeModifiers) {\n    var classNames = [\n        dayPicker.classNames.day\n    ];\n    Object.keys(activeModifiers).forEach(function(modifier) {\n        var customClassName = dayPicker.modifiersClassNames[modifier];\n        if (customClassName) {\n            classNames.push(customClassName);\n        } else if (isInternalModifier(modifier)) {\n            var internalClassName = dayPicker.classNames[\"day_\".concat(modifier)];\n            if (internalClassName) {\n                classNames.push(internalClassName);\n            }\n        }\n    });\n    return classNames;\n}\n/** Return the style for the Day element, according to the given active modifiers. */ function getDayStyle(dayPicker, activeModifiers) {\n    var style = __assign({}, dayPicker.styles.day);\n    Object.keys(activeModifiers).forEach(function(modifier) {\n        var _a;\n        style = __assign(__assign({}, style), (_a = dayPicker.modifiersStyles) === null || _a === void 0 ? void 0 : _a[modifier]);\n    });\n    return style;\n}\n/**\n * Return props and data used to render the {@link Day} component.\n *\n * Use this hook when creating a component to replace the built-in `Day`\n * component.\n */ function useDayRender(/** The date to render. */ day, /** The month where the date is displayed (if not the same as `date`, it means it is an \"outside\" day). */ displayMonth, /** A ref to the button element that will be target of focus when rendered (if required). */ buttonRef) {\n    var _a;\n    var _b, _c;\n    var dayPicker = useDayPicker();\n    var focusContext = useFocusContext();\n    var activeModifiers = useActiveModifiers(day, displayMonth);\n    var eventHandlers = useDayEventHandlers(day, activeModifiers);\n    var selectedDays = useSelectedDays();\n    var isButton = Boolean(dayPicker.onDayClick || dayPicker.mode !== \"default\");\n    // Focus the button if the day is focused according to the focus context\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        var _a;\n        if (activeModifiers.outside) return;\n        if (!focusContext.focusedDay) return;\n        if (!isButton) return;\n        if ((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(focusContext.focusedDay, day)) {\n            (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }, [\n        focusContext.focusedDay,\n        day,\n        buttonRef,\n        isButton,\n        activeModifiers.outside\n    ]);\n    var className = getDayClassNames(dayPicker, activeModifiers).join(\" \");\n    var style = getDayStyle(dayPicker, activeModifiers);\n    var isHidden = Boolean(activeModifiers.outside && !dayPicker.showOutsideDays || activeModifiers.hidden);\n    var DayContentComponent = (_c = (_b = dayPicker.components) === null || _b === void 0 ? void 0 : _b.DayContent) !== null && _c !== void 0 ? _c : DayContent;\n    var children = jsxRuntimeExports.jsx(DayContentComponent, {\n        date: day,\n        displayMonth: displayMonth,\n        activeModifiers: activeModifiers\n    });\n    var divProps = {\n        style: style,\n        className: className,\n        children: children,\n        role: \"gridcell\"\n    };\n    var isFocusTarget = focusContext.focusTarget && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(focusContext.focusTarget, day) && !activeModifiers.outside;\n    var isFocused = focusContext.focusedDay && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_17__[\"default\"])(focusContext.focusedDay, day);\n    var buttonProps = __assign(__assign(__assign({}, divProps), (_a = {\n        disabled: activeModifiers.disabled,\n        role: \"gridcell\"\n    }, _a[\"aria-selected\"] = activeModifiers.selected, _a.tabIndex = isFocused || isFocusTarget ? 0 : -1, _a)), eventHandlers);\n    var dayRender = {\n        isButton: isButton,\n        isHidden: isHidden,\n        activeModifiers: activeModifiers,\n        selectedDays: selectedDays,\n        buttonProps: buttonProps,\n        divProps: divProps\n    };\n    return dayRender;\n}\n/**\n * The content of a day cell – as a button or span element according to its\n * modifiers.\n */ function Day(props) {\n    var buttonRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    var dayRender = useDayRender(props.date, props.displayMonth, buttonRef);\n    if (dayRender.isHidden) {\n        return jsxRuntimeExports.jsx(\"div\", {\n            role: \"gridcell\"\n        });\n    }\n    if (!dayRender.isButton) {\n        return jsxRuntimeExports.jsx(\"div\", __assign({}, dayRender.divProps));\n    }\n    return jsxRuntimeExports.jsx(Button, __assign({\n        name: \"day\",\n        ref: buttonRef\n    }, dayRender.buttonProps));\n}\n/**\n * Render the week number element. If `onWeekNumberClick` is passed to DayPicker, it\n * renders a button, otherwise a span element.\n */ function WeekNumber(props) {\n    var weekNumber = props.number, dates = props.dates;\n    var _a = useDayPicker(), onWeekNumberClick = _a.onWeekNumberClick, styles = _a.styles, classNames = _a.classNames, locale = _a.locale, labelWeekNumber = _a.labels.labelWeekNumber, formatWeekNumber = _a.formatters.formatWeekNumber;\n    var content = formatWeekNumber(Number(weekNumber), {\n        locale: locale\n    });\n    if (!onWeekNumberClick) {\n        return jsxRuntimeExports.jsx(\"span\", {\n            className: classNames.weeknumber,\n            style: styles.weeknumber,\n            children: content\n        });\n    }\n    var label = labelWeekNumber(Number(weekNumber), {\n        locale: locale\n    });\n    var handleClick = function(e) {\n        onWeekNumberClick(weekNumber, dates, e);\n    };\n    return jsxRuntimeExports.jsx(Button, {\n        name: \"week-number\",\n        \"aria-label\": label,\n        className: classNames.weeknumber,\n        style: styles.weeknumber,\n        onClick: handleClick,\n        children: content\n    });\n}\n/** Render a row in the calendar, with the days and the week number. */ function Row(props) {\n    var _a, _b;\n    var _c = useDayPicker(), styles = _c.styles, classNames = _c.classNames, showWeekNumber = _c.showWeekNumber, components = _c.components;\n    var DayComponent = (_a = components === null || components === void 0 ? void 0 : components.Day) !== null && _a !== void 0 ? _a : Day;\n    var WeeknumberComponent = (_b = components === null || components === void 0 ? void 0 : components.WeekNumber) !== null && _b !== void 0 ? _b : WeekNumber;\n    var weekNumberCell;\n    if (showWeekNumber) {\n        weekNumberCell = jsxRuntimeExports.jsx(\"td\", {\n            className: classNames.cell,\n            style: styles.cell,\n            children: jsxRuntimeExports.jsx(WeeknumberComponent, {\n                number: props.weekNumber,\n                dates: props.dates\n            })\n        });\n    }\n    return jsxRuntimeExports.jsxs(\"tr\", {\n        className: classNames.row,\n        style: styles.row,\n        children: [\n            weekNumberCell,\n            props.dates.map(function(date) {\n                return jsxRuntimeExports.jsx(\"td\", {\n                    className: classNames.cell,\n                    style: styles.cell,\n                    role: \"presentation\",\n                    children: jsxRuntimeExports.jsx(DayComponent, {\n                        displayMonth: props.displayMonth,\n                        date: date\n                    })\n                }, (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_28__[\"default\"])(date));\n            })\n        ]\n    });\n}\n/** Return the weeks between two dates.  */ function daysToMonthWeeks(fromDate, toDate, options) {\n    var toWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_24__[\"default\"])(toDate) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_25__[\"default\"])(toDate, options);\n    var fromWeek = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_14__[\"default\"])(fromDate) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_15__[\"default\"])(fromDate, options);\n    var nOfDays = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(toWeek, fromWeek);\n    var days = [];\n    for(var i = 0; i <= nOfDays; i++){\n        days.push((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_16__[\"default\"])(fromWeek, i));\n    }\n    var weeksInMonth = days.reduce(function(result, date) {\n        var weekNumber = (options === null || options === void 0 ? void 0 : options.ISOWeek) ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_29__[\"default\"])(date) : (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_30__[\"default\"])(date, options);\n        var existingWeek = result.find(function(value) {\n            return value.weekNumber === weekNumber;\n        });\n        if (existingWeek) {\n            existingWeek.dates.push(date);\n            return result;\n        }\n        result.push({\n            weekNumber: weekNumber,\n            dates: [\n                date\n            ]\n        });\n        return result;\n    }, []);\n    return weeksInMonth;\n}\n/**\n * Return the weeks belonging to the given month, adding the \"outside days\" to\n * the first and last week.\n */ function getMonthWeeks(month, options) {\n    var weeksInMonth = daysToMonthWeeks((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(month), (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(month), options);\n    if (options === null || options === void 0 ? void 0 : options.useFixedWeeks) {\n        // Add extra weeks to the month, up to 6 weeks\n        var nrOfMonthWeeks = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_31__[\"default\"])(month, options);\n        if (nrOfMonthWeeks < 6) {\n            var lastWeek = weeksInMonth[weeksInMonth.length - 1];\n            var lastDate = lastWeek.dates[lastWeek.dates.length - 1];\n            var toDate = (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__[\"default\"])(lastDate, 6 - nrOfMonthWeeks);\n            var extraWeeks = daysToMonthWeeks((0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_22__[\"default\"])(lastDate, 1), toDate, options);\n            weeksInMonth.push.apply(weeksInMonth, extraWeeks);\n        }\n    }\n    return weeksInMonth;\n}\n/** Render the table with the calendar. */ function Table(props) {\n    var _a, _b, _c;\n    var _d = useDayPicker(), locale = _d.locale, classNames = _d.classNames, styles = _d.styles, hideHead = _d.hideHead, fixedWeeks = _d.fixedWeeks, components = _d.components, weekStartsOn = _d.weekStartsOn, firstWeekContainsDate = _d.firstWeekContainsDate, ISOWeek = _d.ISOWeek;\n    var weeks = getMonthWeeks(props.displayMonth, {\n        useFixedWeeks: Boolean(fixedWeeks),\n        ISOWeek: ISOWeek,\n        locale: locale,\n        weekStartsOn: weekStartsOn,\n        firstWeekContainsDate: firstWeekContainsDate\n    });\n    var HeadComponent = (_a = components === null || components === void 0 ? void 0 : components.Head) !== null && _a !== void 0 ? _a : Head;\n    var RowComponent = (_b = components === null || components === void 0 ? void 0 : components.Row) !== null && _b !== void 0 ? _b : Row;\n    var FooterComponent = (_c = components === null || components === void 0 ? void 0 : components.Footer) !== null && _c !== void 0 ? _c : Footer;\n    return jsxRuntimeExports.jsxs(\"table\", {\n        id: props.id,\n        className: classNames.table,\n        style: styles.table,\n        role: \"grid\",\n        \"aria-labelledby\": props[\"aria-labelledby\"],\n        children: [\n            !hideHead && jsxRuntimeExports.jsx(HeadComponent, {}),\n            jsxRuntimeExports.jsx(\"tbody\", {\n                className: classNames.tbody,\n                style: styles.tbody,\n                children: weeks.map(function(week) {\n                    return jsxRuntimeExports.jsx(RowComponent, {\n                        displayMonth: props.displayMonth,\n                        dates: week.dates,\n                        weekNumber: week.weekNumber\n                    }, week.weekNumber);\n                })\n            }),\n            jsxRuntimeExports.jsx(FooterComponent, {\n                displayMonth: props.displayMonth\n            })\n        ]\n    });\n}\n/*\nThe MIT License (MIT)\n\nCopyright (c) 2018-present, React Training LLC\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/ /* eslint-disable prefer-const */ /* eslint-disable @typescript-eslint/ban-ts-comment */ /*\n * Welcome to @reach/auto-id!\n * Let's see if we can make sense of why this hook exists and its\n * implementation.\n *\n * Some background:\n *   1. Accessibility APIs rely heavily on element IDs\n *   2. Requiring developers to put IDs on every element in Reach UI is both\n *      cumbersome and error-prone\n *   3. With a component model, we can generate IDs for them!\n *\n * Solution 1: Generate random IDs.\n *\n * This works great as long as you don't server render your app. When React (in\n * the client) tries to reuse the markup from the server, the IDs won't match\n * and React will then recreate the entire DOM tree.\n *\n * Solution 2: Increment an integer\n *\n * This sounds great. Since we're rendering the exact same tree on the server\n * and client, we can increment a counter and get a deterministic result between\n * client and server. Also, JS integers can go up to nine-quadrillion. I'm\n * pretty sure the tab will be closed before an app never needs\n * 10 quadrillion IDs!\n *\n * Problem solved, right?\n *\n * Ah, but there's a catch! React's concurrent rendering makes this approach\n * non-deterministic. While the client and server will end up with the same\n * elements in the end, depending on suspense boundaries (and possibly some user\n * input during the initial render) the incrementing integers won't always match\n * up.\n *\n * Solution 3: Don't use IDs at all on the server; patch after first render.\n *\n * What we've done here is solution 2 with some tricks. With this approach, the\n * ID returned is an empty string on the first render. This way the server and\n * client have the same markup no matter how wild the concurrent rendering may\n * have gotten.\n *\n * After the render, we patch up the components with an incremented ID. This\n * causes a double render on any components with `useId`. Shouldn't be a problem\n * since the components using this hook should be small, and we're only updating\n * the ID attribute on the DOM, nothing big is happening.\n *\n * It doesn't have to be an incremented number, though--we could do generate\n * random strings instead, but incrementing a number is probably the cheapest\n * thing we can do.\n *\n * Additionally, we only do this patchup on the very first client render ever.\n * Any calls to `useId` that happen dynamically in the client will be\n * populated immediately with a value. So, we only get the double render after\n * server hydration and never again, SO BACK OFF ALRIGHT?\n */ function canUseDOM() {\n    return !!( false && 0);\n}\n/**\n * React currently throws a warning when using useLayoutEffect on the server. To\n * get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */ var useIsomorphicLayoutEffect = canUseDOM() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar serverHandoffComplete = false;\nvar id = 0;\nfunction genId() {\n    return \"react-day-picker-\".concat(++id);\n}\nfunction useId(providedId) {\n    // TODO: Remove error flag when updating internal deps to React 18. None of\n    // our tricks will play well with concurrent rendering anyway.\n    var _a;\n    // If this instance isn't part of the initial render, we don't have to do the\n    // double render/patch-up dance. We can just generate the ID and return it.\n    var initialId = providedId !== null && providedId !== void 0 ? providedId : serverHandoffComplete ? genId() : null;\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialId), id = _b[0], setId = _b[1];\n    useIsomorphicLayoutEffect(function() {\n        if (id === null) {\n            // Patch the ID after render. We do this in `useLayoutEffect` to avoid any\n            // rendering flicker, though it'll make the first render slower (unlikely\n            // to matter, but you're welcome to measure your app and let us know if\n            // it's a problem).\n            setId(genId());\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (serverHandoffComplete === false) {\n            // Flag all future uses of `useId` to skip the update dance. This is in\n            // `useEffect` because it goes after `useLayoutEffect`, ensuring we don't\n            // accidentally bail out of the patch-up dance prematurely.\n            serverHandoffComplete = true;\n        }\n    }, []);\n    return (_a = providedId !== null && providedId !== void 0 ? providedId : id) !== null && _a !== void 0 ? _a : undefined;\n}\n/** Render a month. */ function Month(props) {\n    var _a;\n    var _b;\n    var dayPicker = useDayPicker();\n    var dir = dayPicker.dir, classNames = dayPicker.classNames, styles = dayPicker.styles, components = dayPicker.components;\n    var displayMonths = useNavigation().displayMonths;\n    var captionId = useId(dayPicker.id ? \"\".concat(dayPicker.id, \"-\").concat(props.displayIndex) : undefined);\n    var tableId = dayPicker.id ? \"\".concat(dayPicker.id, \"-grid-\").concat(props.displayIndex) : undefined;\n    var className = [\n        classNames.month\n    ];\n    var style = styles.month;\n    var isStart = props.displayIndex === 0;\n    var isEnd = props.displayIndex === displayMonths.length - 1;\n    var isCenter = !isStart && !isEnd;\n    if (dir === \"rtl\") {\n        _a = [\n            isStart,\n            isEnd\n        ], isEnd = _a[0], isStart = _a[1];\n    }\n    if (isStart) {\n        className.push(classNames.caption_start);\n        style = __assign(__assign({}, style), styles.caption_start);\n    }\n    if (isEnd) {\n        className.push(classNames.caption_end);\n        style = __assign(__assign({}, style), styles.caption_end);\n    }\n    if (isCenter) {\n        className.push(classNames.caption_between);\n        style = __assign(__assign({}, style), styles.caption_between);\n    }\n    var CaptionComponent = (_b = components === null || components === void 0 ? void 0 : components.Caption) !== null && _b !== void 0 ? _b : Caption;\n    return jsxRuntimeExports.jsxs(\"div\", {\n        className: className.join(\" \"),\n        style: style,\n        children: [\n            jsxRuntimeExports.jsx(CaptionComponent, {\n                id: captionId,\n                displayMonth: props.displayMonth,\n                displayIndex: props.displayIndex\n            }),\n            jsxRuntimeExports.jsx(Table, {\n                id: tableId,\n                \"aria-labelledby\": captionId,\n                displayMonth: props.displayMonth\n            })\n        ]\n    }, props.displayIndex);\n}\n/**\n * Render the wrapper for the month grids.\n */ function Months(props) {\n    var _a = useDayPicker(), classNames = _a.classNames, styles = _a.styles;\n    return jsxRuntimeExports.jsx(\"div\", {\n        className: classNames.months,\n        style: styles.months,\n        children: props.children\n    });\n}\n/** Render the container with the months according to the number of months to display. */ function Root(_a) {\n    var _b, _c;\n    var initialProps = _a.initialProps;\n    var dayPicker = useDayPicker();\n    var focusContext = useFocusContext();\n    var navigation = useNavigation();\n    var _d = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), hasInitialFocus = _d[0], setHasInitialFocus = _d[1];\n    // Focus the focus target when initialFocus is passed in\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n        if (!dayPicker.initialFocus) return;\n        if (!focusContext.focusTarget) return;\n        if (hasInitialFocus) return;\n        focusContext.focus(focusContext.focusTarget);\n        setHasInitialFocus(true);\n    }, [\n        dayPicker.initialFocus,\n        hasInitialFocus,\n        focusContext.focus,\n        focusContext.focusTarget,\n        focusContext\n    ]);\n    // Apply classnames according to props\n    var classNames = [\n        dayPicker.classNames.root,\n        dayPicker.className\n    ];\n    if (dayPicker.numberOfMonths > 1) {\n        classNames.push(dayPicker.classNames.multiple_months);\n    }\n    if (dayPicker.showWeekNumber) {\n        classNames.push(dayPicker.classNames.with_weeknumber);\n    }\n    var style = __assign(__assign({}, dayPicker.styles.root), dayPicker.style);\n    var dataAttributes = Object.keys(initialProps).filter(function(key) {\n        return key.startsWith(\"data-\");\n    }).reduce(function(attrs, key) {\n        var _a;\n        return __assign(__assign({}, attrs), (_a = {}, _a[key] = initialProps[key], _a));\n    }, {});\n    var MonthsComponent = (_c = (_b = initialProps.components) === null || _b === void 0 ? void 0 : _b.Months) !== null && _c !== void 0 ? _c : Months;\n    return jsxRuntimeExports.jsx(\"div\", __assign({\n        className: classNames.join(\" \"),\n        style: style,\n        dir: dayPicker.dir,\n        id: dayPicker.id,\n        nonce: initialProps.nonce,\n        title: initialProps.title,\n        lang: initialProps.lang\n    }, dataAttributes, {\n        children: jsxRuntimeExports.jsx(MonthsComponent, {\n            children: navigation.displayMonths.map(function(month, i) {\n                return jsxRuntimeExports.jsx(Month, {\n                    displayIndex: i,\n                    displayMonth: month\n                }, i);\n            })\n        })\n    }));\n}\n/** Provide the value for all the context providers. */ function RootProvider(props) {\n    var children = props.children, initialProps = __rest(props, [\n        \"children\"\n    ]);\n    return jsxRuntimeExports.jsx(DayPickerProvider, {\n        initialProps: initialProps,\n        children: jsxRuntimeExports.jsx(NavigationProvider, {\n            children: jsxRuntimeExports.jsx(SelectSingleProvider, {\n                initialProps: initialProps,\n                children: jsxRuntimeExports.jsx(SelectMultipleProvider, {\n                    initialProps: initialProps,\n                    children: jsxRuntimeExports.jsx(SelectRangeProvider, {\n                        initialProps: initialProps,\n                        children: jsxRuntimeExports.jsx(ModifiersProvider, {\n                            children: jsxRuntimeExports.jsx(FocusProvider, {\n                                children: children\n                            })\n                        })\n                    })\n                })\n            })\n        })\n    });\n}\n/**\n * DayPicker render a date picker component to let users pick dates from a\n * calendar. See http://react-day-picker.js.org for updated documentation and\n * examples.\n *\n * ### Customization\n *\n * DayPicker offers different customization props. For example,\n *\n * - show multiple months using `numberOfMonths`\n * - display a dropdown to navigate the months via `captionLayout`\n * - display the week numbers with `showWeekNumbers`\n * - disable or hide days with `disabled` or `hidden`\n *\n * ### Controlling the months\n *\n * Change the initially displayed month using the `defaultMonth` prop. The\n * displayed months are controlled by DayPicker and stored in its internal\n * state. To control the months yourself, use `month` instead of `defaultMonth`\n * and use the `onMonthChange` event to set it.\n *\n * To limit the months the user can navigate to, use\n * `fromDate`/`fromMonth`/`fromYear` or `toDate`/`toMonth`/`toYear`.\n *\n * ### Selection modes\n *\n * DayPicker supports different selection mode that can be toggled using the\n * `mode` prop:\n *\n * - `mode=\"single\"`: only one day can be selected. Use `required` to make the\n *   selection required. Use the `onSelect` event handler to get the selected\n *   days.\n * - `mode=\"multiple\"`: users can select one or more days. Limit the amount of\n *   days that can be selected with the `min` or the `max` props.\n * - `mode=\"range\"`: users can select a range of days. Limit the amount of days\n *   in the range with the `min` or the `max` props.\n * - `mode=\"default\"` (default): the built-in selections are disabled. Implement\n *   your own selection mode with `onDayClick`.\n *\n * The selection modes should cover the most common use cases. In case you\n * need a more refined way of selecting days, use `mode=\"default\"`. Use the\n * `selected` props and add the day event handlers to add/remove days from the\n * selection.\n *\n * ### Modifiers\n *\n * A _modifier_ represents different styles or states for the days displayed in\n * the calendar (like \"selected\" or \"disabled\"). Define custom modifiers using\n * the `modifiers` prop.\n *\n * ### Formatters and custom component\n *\n * You can customize how the content is displayed in the date picker by using\n * either the formatters or replacing the internal components.\n *\n * For the most common cases you want to use the `formatters` prop to change how\n * the content is formatted in the calendar. Use the `components` prop to\n * replace the internal components, like the navigation icons.\n *\n * ### Styling\n *\n * DayPicker comes with a default, basic style in `react-day-picker/style` – use\n * it as template for your own style.\n *\n * If you are using CSS modules, pass the imported styles object the\n * `classNames` props.\n *\n * You can also style the elements via inline styles using the `styles` prop.\n *\n * ### Form fields\n *\n * If you need to bind the date picker to a form field, you can use the\n * `useInput` hooks for a basic behavior. See the `useInput` source as an\n * example to bind the date picker with form fields.\n *\n * ### Localization\n *\n * To localize DayPicker, import the locale from `date-fns` package and use the\n * `locale` prop.\n *\n * For example, to use Spanish locale:\n *\n * ```\n * import { es } from 'date-fns/locale';\n * <DayPicker locale={es} />\n * ```\n */ function DayPicker(props) {\n    return jsxRuntimeExports.jsx(RootProvider, __assign({}, props, {\n        children: jsxRuntimeExports.jsx(Root, {\n            initialProps: props\n        })\n    }));\n}\n/** @private */ function isValidDate(day) {\n    return !isNaN(day.getTime());\n}\n/** Return props and setters for binding an input field to DayPicker. */ function useInput(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.locale, locale = _a === void 0 ? date_fns_locale__WEBPACK_IMPORTED_MODULE_2__[\"default\"] : _a, required = options.required, _b = options.format, format$1 = _b === void 0 ? \"PP\" : _b, defaultSelected = options.defaultSelected, _c = options.today, today = _c === void 0 ? new Date() : _c;\n    var _d = parseFromToProps(options), fromDate = _d.fromDate, toDate = _d.toDate;\n    // Shortcut to the DateFns functions\n    var parseValue = function(value) {\n        return (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_32__[\"default\"])(value, format$1, today, {\n            locale: locale\n        });\n    };\n    // Initialize states\n    var _e = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : today), month = _e[0], setMonth = _e[1];\n    var _f = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultSelected), selectedDay = _f[0], setSelectedDay = _f[1];\n    var defaultInputValue = defaultSelected ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(defaultSelected, format$1, {\n        locale: locale\n    }) : \"\";\n    var _g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultInputValue), inputValue = _g[0], setInputValue = _g[1];\n    var reset = function() {\n        setSelectedDay(defaultSelected);\n        setMonth(defaultSelected !== null && defaultSelected !== void 0 ? defaultSelected : today);\n        setInputValue(defaultInputValue !== null && defaultInputValue !== void 0 ? defaultInputValue : \"\");\n    };\n    var setSelected = function(date) {\n        setSelectedDay(date);\n        setMonth(date !== null && date !== void 0 ? date : today);\n        setInputValue(date ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date, format$1, {\n            locale: locale\n        }) : \"\");\n    };\n    var handleDayClick = function(day, _a) {\n        var selected = _a.selected;\n        if (!required && selected) {\n            setSelectedDay(undefined);\n            setInputValue(\"\");\n            return;\n        }\n        setSelectedDay(day);\n        setInputValue(day ? (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(day, format$1, {\n            locale: locale\n        }) : \"\");\n    };\n    var handleMonthChange = function(month) {\n        setMonth(month);\n    };\n    // When changing the input field, save its value in state and check if the\n    // string is a valid date. If it is a valid day, set it as selected and update\n    // the calendar’s month.\n    var handleChange = function(e) {\n        setInputValue(e.target.value);\n        var day = parseValue(e.target.value);\n        var isBefore = fromDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(fromDate, day) > 0;\n        var isAfter = toDate && (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_20__[\"default\"])(day, toDate) > 0;\n        if (!isValidDate(day) || isBefore || isAfter) {\n            setSelectedDay(undefined);\n            return;\n        }\n        setSelectedDay(day);\n        setMonth(day);\n    };\n    // Special case for _required_ fields: on blur, if the value of the input is not\n    // a valid date, reset the calendar and the input value.\n    var handleBlur = function(e) {\n        var day = parseValue(e.target.value);\n        if (!isValidDate(day)) {\n            reset();\n        }\n    };\n    // When focusing, make sure DayPicker visualizes the month of the date in the\n    // input field.\n    var handleFocus = function(e) {\n        if (!e.target.value) {\n            reset();\n            return;\n        }\n        var day = parseValue(e.target.value);\n        if (isValidDate(day)) {\n            setMonth(day);\n        }\n    };\n    var dayPickerProps = {\n        month: month,\n        onDayClick: handleDayClick,\n        onMonthChange: handleMonthChange,\n        selected: selectedDay,\n        locale: locale,\n        fromDate: fromDate,\n        toDate: toDate,\n        today: today\n    };\n    var inputProps = {\n        onBlur: handleBlur,\n        onChange: handleChange,\n        onFocus: handleFocus,\n        value: inputValue,\n        placeholder: (0,_barrel_optimize_names_addDays_addMonths_addWeeks_addYears_differenceInCalendarDays_differenceInCalendarMonths_endOfISOWeek_endOfMonth_endOfWeek_format_getISOWeek_getUnixTime_getWeek_getWeeksInMonth_isAfter_isBefore_isDate_isSameDay_isSameMonth_isSameYear_max_min_parse_setMonth_setYear_startOfDay_startOfISOWeek_startOfMonth_startOfWeek_startOfYear_subDays_date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(new Date(), format$1, {\n            locale: locale\n        })\n    };\n    return {\n        dayPickerProps: dayPickerProps,\n        inputProps: inputProps,\n        reset: reset,\n        setSelected: setSelected\n    };\n}\n/** Returns true when the props are of type {@link DayPickerDefaultProps}. */ function isDayPickerDefault(props) {\n    return props.mode === undefined || props.mode === \"default\";\n}\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/react-day-picker@8.10.0_date-fns@2.30.0_react@18.2.0/node_modules/react-day-picker/dist/index.esm.js\n");

/***/ })

};
;